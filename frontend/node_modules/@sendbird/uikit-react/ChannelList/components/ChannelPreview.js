import React__default from 'react';
import { u as useLocalization } from '../../chunks/bundle-y-yf0Djs.js';
import { u as useChannelListContext } from '../../chunks/bundle-DipRMv-6.js';
import { g as getChannelTitle } from '../../chunks/bundle-SEoRcjBh.js';
import { G as GroupChannelListItemView } from '../../chunks/bundle-B7JoK-Jx.js';
import { u as useSendbird } from '../../chunks/bundle-Bk7vYzLW.js';
import '../../chunks/bundle-BosquA9C.js';
import '../../chunks/bundle-DXRcwk7R.js';
import '../../chunks/bundle-BRWYGzyd.js';
import '@sendbird/chat/groupChannel';
import '../../chunks/bundle-DxUY6hv0.js';
import '../../chunks/bundle-BGRwc73U.js';
import '../../chunks/bundle-Bc1fdQjj.js';
import '../../chunks/bundle-BDIF-bj_.js';
import '../../chunks/bundle-ByW5tGii.js';
import '../../chunks/bundle-BA9ZfQ-7.js';
import '../../chunks/bundle-Ug7rKzFJ.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-CWd47dzy.js';
import '../../chunks/bundle-BovMsFd4.js';
import '../../chunks/bundle-DhzCuHhn.js';
import '../../chunks/bundle-CDOQ--pz.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-MoKyCGQH.js';
import '../../ui/Loader.js';
import '../../chunks/bundle-B_HhSA6x.js';
import '../../chunks/bundle-BBGwVlcE.js';
import '../../chunks/bundle-BSieP1ow.js';
import '../../chunks/bundle-DvgqpwmQ.js';
import '../../GroupChannel/components/TypingIndicator.js';
import '../../ui/Badge.js';
import '../../ui/ChannelAvatar.js';
import '../../chunks/bundle-BkCv3z1C.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-MdZYxYNf.js';
import '../../chunks/bundle-ByD0lt6-.js';
import '../../ui/MentionUserLabel.js';
import '../../chunks/bundle-CnWjrGUf.js';
import '../../chunks/bundle-ZMBEGemL.js';
import 'react-dom';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../ui/TextButton.js';
import '../../chunks/bundle-DU7VpG0M.js';
import '../../chunks/bundle-BJl-Stow.js';
import '../../chunks/bundle-CK7w7gep.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';

/**
 * @deprecated This component is deprecated and will be removed in the next major update.
 * Please use the `GroupChannel` component from '@sendbird/uikit-react/GroupChannel' instead.
 * For more information, please refer to the migration guide:
 * https://docs.sendbird.com/docs/chat/uikit/v3/react/introduction/group-channel-migration-guide
 */
var ChannelPreview = function (_a) {
    var _b, _c, _d, _e;
    var channel = _a.channel, _f = _a.isActive, isActive = _f === void 0 ? false : _f, _g = _a.isSelected, isSelected = _g === void 0 ? false : _g, _h = _a.isTyping, isTyping = _h === void 0 ? false : _h, renderChannelAction = _a.renderChannelAction, onLeaveChannel = _a.onLeaveChannel, onClick = _a.onClick, tabIndex = _a.tabIndex;
    var state = useSendbird().state;
    var config = state.config;
    var stringSet = useLocalization().stringSet;
    var _j = useChannelListContext(), _k = _j.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _k === void 0 ? false : _k, _l = _j.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _l === void 0 ? false : _l;
    var userId = config.userId;
    var isMessageStatusEnabled = isMessageReceiptStatusEnabled
        && (((_b = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b === void 0 ? void 0 : _b.messageType) === 'user' || ((_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageType) === 'file')
        && ((_e = (_d = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _d === void 0 ? void 0 : _d.sender) === null || _e === void 0 ? void 0 : _e.userId) === userId;
    return (React__default.createElement(GroupChannelListItemView, { channel: channel, tabIndex: tabIndex, isTyping: isTypingIndicatorEnabled && isTyping, isSelected: isSelected !== null && isSelected !== void 0 ? isSelected : isActive, channelName: getChannelTitle(channel, userId, stringSet), isMessageStatusEnabled: isMessageStatusEnabled, onClick: onClick, onLeaveChannel: onLeaveChannel, renderChannelAction: renderChannelAction }));
};

export { ChannelPreview as default };
//# sourceMappingURL=ChannelPreview.js.map
