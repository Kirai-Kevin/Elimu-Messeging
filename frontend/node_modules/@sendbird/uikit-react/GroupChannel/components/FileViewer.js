import { _ as __assign, b as __awaiter, c as __generator } from '../../chunks/bundle-BosquA9C.js';
import React__default from 'react';
import { u as useGroupChannel } from '../../chunks/bundle-DPw-2E0C.js';
import { F as FileViewerView } from '../../chunks/bundle-BoobDQ7G.js';
import { u as useSendbird } from '../../chunks/bundle-Bk7vYzLW.js';
import '@sendbird/chat/message';
import '@sendbird/chat/groupChannel';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-ByW5tGii.js';
import '../../chunks/bundle-DtQBJOWR.js';
import '../../chunks/bundle-CK7w7gep.js';
import '../../chunks/bundle-BDIF-bj_.js';
import '../../chunks/bundle-DgO_xXWo.js';
import '../../chunks/bundle-mxwNwHvq.js';
import '../../chunks/bundle-B61f7NvF.js';
import '../../chunks/bundle-CCDeoxT_.js';
import '../../chunks/bundle-DxUY6hv0.js';
import '../../chunks/bundle-Dx43PGfx.js';
import '../../chunks/bundle-Bc1fdQjj.js';
import '../../chunks/bundle-BA9ZfQ-7.js';
import 'react-dom';
import '../../chunks/bundle-BkCv3z1C.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-MdZYxYNf.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-MoKyCGQH.js';
import '../../chunks/bundle-DXRcwk7R.js';
import '../../chunks/bundle-Ug7rKzFJ.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-CWd47dzy.js';
import '../../chunks/bundle-BovMsFd4.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-ZMBEGemL.js';
import '../../chunks/bundle-y-yf0Djs.js';
import '../../chunks/bundle-BRWYGzyd.js';
import '../../chunks/bundle-DvgqpwmQ.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-BGRwc73U.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';

var FileViewer = function (props) {
    var _a = useGroupChannel(), onBeforeDownloadFileMessage = _a.state.onBeforeDownloadFileMessage, deleteMessage = _a.actions.deleteMessage;
    var logger = useSendbird().state.config.logger;
    return (React__default.createElement(FileViewerView, __assign({}, props, { deleteMessage: deleteMessage, onDownloadClick: function (e) { return __awaiter(void 0, void 0, void 0, function () {
            var allowDownload, err_1;
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!onBeforeDownloadFileMessage)
                            return [2 /*return*/];
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, onBeforeDownloadFileMessage({ message: props.message })];
                    case 2:
                        allowDownload = _c.sent();
                        if (!allowDownload) {
                            e.preventDefault();
                            (_a = logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'FileViewer: Not allowed to download.');
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _c.sent();
                        (_b = logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'FileViewer: Error occurred while determining download continuation:', err_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); } })));
};

export { FileViewer, FileViewer as default };
//# sourceMappingURL=FileViewer.js.map
