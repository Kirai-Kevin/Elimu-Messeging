import React__default from 'react';
import OpenChannelListUI from './OpenChannelList/components/OpenChannelListUI.js';
import { O as OpenChannelListProvider } from './chunks/bundle-TMgn9ci8.js';
import './OpenChannelList/components/OpenChannelPreview.js';
import './chunks/bundle-BkCv3z1C.js';
import './chunks/bundle-BosquA9C.js';
import './ui/ImageRenderer.js';
import './chunks/bundle-Bc1fdQjj.js';
import './chunks/bundle-MdZYxYNf.js';
import './ui/Icon.js';
import './chunks/bundle-MoKyCGQH.js';
import './chunks/bundle-DXRcwk7R.js';
import './ui/PlaceHolder.js';
import './chunks/bundle-y-yf0Djs.js';
import './chunks/bundle-BRWYGzyd.js';
import './ui/Loader.js';
import './ui/IconButton.js';
import './CreateOpenChannel.js';
import './CreateOpenChannel/components/CreateOpenChannelUI.js';
import './ui/Button.js';
import './chunks/bundle-ZMBEGemL.js';
import 'react-dom';
import './chunks/bundle-DvgqpwmQ.js';
import './chunks/bundle-BGRwc73U.js';
import './chunks/bundle-Bk7vYzLW.js';
import './chunks/bundle-CK7w7gep.js';
import './chunks/bundle-BDIF-bj_.js';
import '@sendbird/chat';
import '@sendbird/chat/groupChannel';
import '@sendbird/chat/openChannel';
import './ui/Input.js';
import './ui/TextButton.js';
import './chunks/bundle-DU7VpG0M.js';
import './CreateOpenChannel/context.js';
import './chunks/bundle-DxUY6hv0.js';

function OpenChannelList(_a) {
    var 
    // provider
    className = _a.className, queries = _a.queries, onChannelSelected = _a.onChannelSelected, 
    // ui
    renderHeader = _a.renderHeader, renderChannelPreview = _a.renderChannelPreview, renderPlaceHolderEmpty = _a.renderPlaceHolderEmpty, renderPlaceHolderError = _a.renderPlaceHolderError, renderPlaceHolderLoading = _a.renderPlaceHolderLoading;
    return (React__default.createElement(OpenChannelListProvider, { className: className, queries: queries, onChannelSelected: onChannelSelected },
        React__default.createElement(OpenChannelListUI, { renderHeader: renderHeader, renderChannelPreview: renderChannelPreview, renderPlaceHolderEmpty: renderPlaceHolderEmpty, renderPlaceHolderError: renderPlaceHolderError, renderPlaceHolderLoading: renderPlaceHolderLoading })));
}

export { OpenChannelList as default };
//# sourceMappingURL=OpenChannelList.js.map
