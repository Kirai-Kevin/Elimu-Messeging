'use strict';

var React = require('react');
var LocalizationContext = require('../../chunks/bundle-CopGFtgI.js');
var ChannelList_context = require('../../chunks/bundle-DgEPX7NX.js');
var ui_MessageStatus = require('../../chunks/bundle-CtdzSJYB.js');
var GroupChannelListItemView = require('../../chunks/bundle-CkT_yAmg.js');
var useSendbird = require('../../chunks/bundle-CdMxPwq1.js');
require('../../chunks/bundle-CUZ9h-Pd.js');
require('../../chunks/bundle-DZruHgcz.js');
require('../../chunks/bundle-CR12SGdP.js');
require('@sendbird/chat/groupChannel');
require('../../chunks/bundle-BOhMGM3s.js');
require('../../chunks/bundle-D3yL5uOl.js');
require('../../chunks/bundle-BfXuy6S7.js');
require('../../chunks/bundle-Bbhmd86w.js');
require('../../chunks/bundle-DgMHMTvP.js');
require('../../chunks/bundle-BGJMXZz9.js');
require('../../chunks/bundle-BTHQKNld.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-DpT0R1DV.js');
require('../../chunks/bundle-B5lbNdUR.js');
require('../../chunks/bundle-CLNqMO9D.js');
require('../../chunks/bundle-CzZs6SEq.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-Capox0kk.js');
require('../../ui/Loader.js');
require('../../chunks/bundle-CC6sWHsF.js');
require('../../chunks/bundle-D7MlQVvs.js');
require('../../chunks/bundle-_W9dB91X.js');
require('../../chunks/bundle-BNYlZghL.js');
require('../../GroupChannel/components/TypingIndicator.js');
require('../../ui/Badge.js');
require('../../ui/ChannelAvatar.js');
require('../../chunks/bundle-D34clWuW.js');
require('../../ui/ImageRenderer.js');
require('../../chunks/bundle-B8oqfhbc.js');
require('../../chunks/bundle-DgCxPuKv.js');
require('../../ui/MentionUserLabel.js');
require('../../chunks/bundle-DShXVoMP.js');
require('../../chunks/bundle-DKQnWNJa.js');
require('react-dom');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../ui/TextButton.js');
require('../../chunks/bundle-G4kJ5XUm.js');
require('../../chunks/bundle-DRAxqHOi.js');
require('../../chunks/bundle-CBsGg8fP.js');
require('@sendbird/chat');
require('@sendbird/chat/openChannel');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);

/**
 * @deprecated This component is deprecated and will be removed in the next major update.
 * Please use the `GroupChannel` component from '@sendbird/uikit-react/GroupChannel' instead.
 * For more information, please refer to the migration guide:
 * https://docs.sendbird.com/docs/chat/uikit/v3/react/introduction/group-channel-migration-guide
 */
var ChannelPreview = function (_a) {
    var _b, _c, _d, _e;
    var channel = _a.channel, _f = _a.isActive, isActive = _f === void 0 ? false : _f, _g = _a.isSelected, isSelected = _g === void 0 ? false : _g, _h = _a.isTyping, isTyping = _h === void 0 ? false : _h, renderChannelAction = _a.renderChannelAction, onLeaveChannel = _a.onLeaveChannel, onClick = _a.onClick, tabIndex = _a.tabIndex;
    var state = useSendbird.useSendbird().state;
    var config = state.config;
    var stringSet = LocalizationContext.useLocalization().stringSet;
    var _j = ChannelList_context.useChannelListContext(), _k = _j.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _k === void 0 ? false : _k, _l = _j.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _l === void 0 ? false : _l;
    var userId = config.userId;
    var isMessageStatusEnabled = isMessageReceiptStatusEnabled
        && (((_b = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b === void 0 ? void 0 : _b.messageType) === 'user' || ((_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageType) === 'file')
        && ((_e = (_d = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _d === void 0 ? void 0 : _d.sender) === null || _e === void 0 ? void 0 : _e.userId) === userId;
    return (React__default.default.createElement(GroupChannelListItemView.GroupChannelListItemView, { channel: channel, tabIndex: tabIndex, isTyping: isTypingIndicatorEnabled && isTyping, isSelected: isSelected !== null && isSelected !== void 0 ? isSelected : isActive, channelName: ui_MessageStatus.getChannelTitle(channel, userId, stringSet), isMessageStatusEnabled: isMessageStatusEnabled, onClick: onClick, onLeaveChannel: onLeaveChannel, renderChannelAction: renderChannelAction }));
};

module.exports = ChannelPreview;
//# sourceMappingURL=ChannelPreview.js.map
