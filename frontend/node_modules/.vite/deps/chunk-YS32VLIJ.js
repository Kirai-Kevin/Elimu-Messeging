import {
  At,
  Fe,
  It,
  da,
  na,
  s as s2
} from "./chunk-TTFJWE4I.js";
import {
  H,
  Jr,
  No,
  Ue,
  ls,
  n,
  oe,
  r,
  s,
  t,
  uo,
  ut,
  xe,
  ze
} from "./chunk-KXGQOUB2.js";

// node_modules/@sendbird/chat/lib/__bundle-c37bdd57.js
var f;
!function(e) {
  e[e.NONE = 0] = "NONE", e[e.CHANNEL_ENTER = 10102] = "CHANNEL_ENTER", e[e.CHANNEL_EXIT = 10103] = "CHANNEL_EXIT", e[e.USER_CHANNEL_MUTE = 10201] = "USER_CHANNEL_MUTE", e[e.USER_CHANNEL_UNMUTE = 10200] = "USER_CHANNEL_UNMUTE", e[e.USER_CHANNEL_BAN = 10601] = "USER_CHANNEL_BAN", e[e.USER_CHANNEL_UNBAN = 10600] = "USER_CHANNEL_UNBAN", e[e.CHANNEL_FREEZE = 10701] = "CHANNEL_FREEZE", e[e.CHANNEL_UNFREEZE = 10700] = "CHANNEL_UNFREEZE", e[e.TYPING_START = 10900] = "TYPING_START", e[e.TYPING_END = 10901] = "TYPING_END", e[e.CHANNEL_JOIN = 1e4] = "CHANNEL_JOIN", e[e.CHANNEL_LEAVE = 10001] = "CHANNEL_LEAVE", e[e.CHANNEL_OPERATOR_UPDATE = 10002] = "CHANNEL_OPERATOR_UPDATE", e[e.CHANNEL_INVITE = 10020] = "CHANNEL_INVITE", e[e.CHANNEL_ACCEPT_INVITE = 10021] = "CHANNEL_ACCEPT_INVITE", e[e.CHANNEL_DECLINE_INVITE = 10022] = "CHANNEL_DECLINE_INVITE", e[e.CHANNEL_PROP_CHANGED = 11e3] = "CHANNEL_PROP_CHANGED", e[e.CHANNEL_DELETED = 12e3] = "CHANNEL_DELETED", e[e.CHANNEL_META_DATA_CHANGED = 11100] = "CHANNEL_META_DATA_CHANGED", e[e.CHANNEL_META_COUNTERS_CHANGED = 11200] = "CHANNEL_META_COUNTERS_CHANGED", e[e.CHANNEL_HIDE = 13e3] = "CHANNEL_HIDE", e[e.CHANNEL_UNHIDE = 13001] = "CHANNEL_UNHIDE", e[e.PINNED_MESSAGE_CHANGED = 11300] = "PINNED_MESSAGE_CHANGED";
}(f || (f = {}));
var m = function() {
  function n2(e) {
    var n3;
    this.channelUrl = e.channel_url, this.channelType = e.channel_type, this.category = e.cat, this.data = null !== (n3 = e.data) && void 0 !== n3 ? n3 : {}, this.ts = e.ts;
  }
  return Object.defineProperty(n2.prototype, "isGroupChannelEvent", { get: function() {
    return this.channelType === H.GROUP;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isOpenChannelEvent", { get: function() {
    return this.channelType === H.OPEN;
  }, enumerable: false, configurable: true }), n2;
}();
var v = function(e) {
  function t3(n2, t4, s3) {
    var r2 = e.call(this, n2, "SYEV", s3) || this;
    return r2.event = new m(s3), r2;
  }
  return t(t3, e), t3;
}(ze);
var T = function(e) {
  function t3(n2, t4, r2) {
    var a = e.call(this, n2, t4, r2) || this, i = r2.data.operators, o = void 0 === i ? [] : i;
    return a.operators = o.map(function(e2) {
      return new ls(a._iid, e2);
    }), a;
  }
  return t(t3, e), t3;
}(v);
var H2 = function(e) {
  function t3(n2, t4, s3) {
    var a, i = this;
    return (i = e.call(this, n2, "SYEV", s3) || this).pinnedMessageIds = [], i.latestPinnedMessage = null, i.ts = 0, s3.data && (i.pinnedMessageIds = null !== (a = s3.data.pinned_message_ids) && void 0 !== a ? a : [], i.latestPinnedMessage = s3.data.latest_pinned_message ? At(n2, n({}, s3.data.latest_pinned_message)) : null), i.ts = s3.ts, i;
  }
  return t(t3, e), t3;
}(ze);
var g = function(e) {
  function t3(n2, t4) {
    var s3 = e.call(this, n2) || this;
    return s3._logger = t4.logger, s3._sdkState = t4.sdkState, s3._sessionManager = t4.sessionManager, s3._requestQueue = t4.requestQueue, s3._dispatcher = t4.dispatcher, s3._cacheContext = t4.cacheContext, s3._channelType = t4.channelType, s3;
  }
  return t(t3, e), Object.defineProperty(t3.prototype, "_messageBroadcast", { get: function() {
    return na.of(this._iid);
  }, enumerable: false, configurable: true }), t3.prototype.subscribeMessageEvent = function(e2, n2) {
    this._messageBroadcast.subscribe(e2, n2);
  }, t3.prototype.unsubscribeMessageEvent = function(e2) {
    this._messageBroadcast.unsubscribe(e2);
  }, t3.prototype.getMessageFromCache = function(e2) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, null];
      });
    });
  }, t3.prototype.getExactlyMatchingMessagesForTokenFromCache = function(e2, n2, t4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, []];
      });
    });
  }, t3.prototype.getMessagesFromCache = function(e2, n2, t4, s3, r2, o) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, []];
      });
    });
  }, t3.prototype.getPollMessagesFromCache = function(e2, n2, t4, s3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, []];
      });
    });
  }, t3.prototype.getCachedMessageCountBetween = function(e2, n2, t4, s3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, 0];
      });
    });
  }, t3.prototype.getUnsentMessagesFromCache = function(e2, n2) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2, []];
      });
    });
  }, t3.prototype.removeFailedMessageFromCache = function(e2) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e3) {
        return [2];
      });
    });
  }, t3;
}(Jr);
var L = function(e) {
  function t3(n2, t4, s3) {
    var r2, a, i, o, N = this;
    (N = e.call(this, n2, "ADMM", s3) || this).message = new It(n2, s3);
    var c = uo.of(n2).sdkState;
    return N.isMentioned = xe(N.message.mentionType, null !== (i = null !== (r2 = N.message.mentionedUserIds) && void 0 !== r2 ? r2 : null === (a = N.message.mentionedUsers) || void 0 === a ? void 0 : a.map(function(e2) {
      return e2.userId;
    })) && void 0 !== i ? i : [], c.userId), N.forceUpdateLastMessage = null !== (o = s3.force_update_last_message) && void 0 !== o && o, N;
  }
  return t(t3, e), t3;
}(ze);
var I = function(e) {
  function t3(n2, t4, s3) {
    var r2, a, i, o, E, _ = this;
    (_ = e.call(this, n2, "AEDI", s3) || this).message = new It(n2, s3);
    var l = uo.of(n2).sdkState;
    return _.mentionCountChange = Ue({ mentionType: null === (r2 = s3.old_values) || void 0 === r2 ? void 0 : r2.mention_type, mentionedUserIds: null !== (i = null === (a = s3.old_values) || void 0 === a ? void 0 : a.mentioned_user_ids) && void 0 !== i ? i : [] }, oe({ mentionType: _.message.mentionType, mentionedUserIds: null !== (o = _.message.mentionedUserIds) && void 0 !== o ? o : null === (E = _.message.mentionedUsers) || void 0 === E ? void 0 : E.map(function(e2) {
      return e2.userId;
    }) }), l.userId), _;
  }
  return t(t3, e), t3;
}(ze);
var U = function(e) {
  function t3(n2, t4, s3) {
    var r2 = e.call(this, n2, "MRCT", s3) || this;
    return r2.channelUrl = s3.channel_url, r2.channelType = s3.channel_type, r2.event = new Fe(s3), r2;
  }
  return t(t3, e), t3;
}(ze);
var M = function(e) {
  function t3(n2, t4, s3) {
    var r2 = e.call(this, n2, "MTHD", s3) || this;
    return r2.event = new da(n2, s3), r2;
  }
  return t(t3, e), t3;
}(ze);
var y = function(e) {
  function t3(n2, t4, s3) {
    var r2 = e.call(this, n2, "MCNT", s3) || this;
    return r2.groupChannelMemberCounts = s3.group_channels.map(function(e2) {
      return { channelUrl: e2.channel_url, memberCount: e2.member_count, joinedMemberCount: e2.joined_member_count, updatedAt: e2.ts };
    }), r2.openChannelMemberCounts = s3.open_channels.map(function(e2) {
      return { channelUrl: e2.channel_url, participantCount: e2.participant_count, updatedAt: e2.ts };
    }), r2;
  }
  return t(t3, e), t3;
}(ze);
var D = function(e) {
  function t3(n2, t4, s3) {
    var r2 = e.call(this, n2, "PEDI", s3) || this;
    return r2.event = new s2(n2, s3), r2.status = No(s3.poll.status) || s3.poll.status, r2.channelUrl = s3.channel_url, r2.channelType = s3.channel_type, r2;
  }
  return t(t3, e), t3;
}(ze);

// node_modules/@sendbird/chat/lib/__bundle-a52f84c8.js
var t2 = function() {
  this.onUserMuted = ut, this.onUserUnmuted = ut, this.onUserBanned = ut, this.onUserUnbanned = ut, this.onChannelChanged = ut, this.onChannelDeleted = ut, this.onChannelFrozen = ut, this.onChannelUnfrozen = ut, this.onOperatorUpdated = ut, this.onChannelMemberCountChanged = ut, this.onMetaDataCreated = ut, this.onMetaDataUpdated = ut, this.onMetaDataDeleted = ut, this.onMetaCounterCreated = ut, this.onMetaCounterUpdated = ut, this.onMetaCounterDeleted = ut, this.onMessageReceived = ut, this.onMessageUpdated = ut, this.onMessageDeleted = ut, this.onMentionReceived = ut, this.onReactionUpdated = ut, this.onThreadInfoUpdated = ut;
};

export {
  f,
  v,
  T,
  H2 as H,
  g,
  L,
  I,
  U,
  M,
  y,
  D,
  t2 as t
};
//# sourceMappingURL=chunk-YS32VLIJ.js.map
