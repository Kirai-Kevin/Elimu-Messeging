import {
  Ve,
  Ze,
  b,
  je,
  qe,
  rt,
  st,
  uo
} from "./chunk-KXGQOUB2.js";
import "./chunk-ROME4SDB.js";

// node_modules/@sendbird/chat/lib/__bundle-fc1c8233.js
var i = function(i2, u) {
  return new Promise(function(c, f) {
    if ("undefined" != typeof XMLHttpRequest) {
      var p = uo.of(i2), l = p.dispatcher, g = p.logger, h = u.requestId, m = u.method, q = u.url, v = u.headers, w = void 0 === v ? {} : v, b2 = u.data, E = void 0 === b2 ? "" : b2, y = u.uploadProgressHandler, x = false, H = new XMLHttpRequest();
      H.open(m, q), Object.keys(w).forEach(function(e) {
        H.setRequestHeader(e, w[e]);
      }), y && H.upload.addEventListener("progress", function(e) {
        e.lengthComputable ? y(h, e.loaded, e.total) : g.debug("Progress computing failed: `Content-Length` header is not given.");
      }), H.onabort = function() {
        f(b.requestCanceled);
      }, H.onerror = function(e) {
        f(b.networkError);
      }, H.onreadystatechange = function() {
        if (H.readyState === XMLHttpRequest.DONE && !x)
          if (0 === H.status || H.status >= 200 && H.status < 400)
            try {
              var e = JSON.parse(H.responseText);
              c(new qe(i2, e));
            } catch (u3) {
              f(b.networkError);
            }
          else
            try {
              var d = JSON.parse(H.responseText);
              if (d) {
                var u2 = new b(d);
                if (u2.isSessionExpiredError) {
                  if (l.dispatch(new Ve({ reason: u2.code, message: u2.message })), !(H instanceof je)) {
                    var p2 = new rt();
                    return l.dispatch(new Ze({ request: H, deferred: p2, error: u2 })), p2.promise;
                  }
                } else
                  u2.isSessionInvalidatedError && l.dispatch(new Ve({ reason: u2.code, message: u2.message }));
                f(u2);
              } else
                f(b.requestFailed);
            } catch (u3) {
              f(b.requestFailed);
            }
      }, l.on(function(e) {
        e instanceof st && (e.requestId && e.requestId !== h || (x = true, H.abort()));
      }), H.send(E);
    } else
      f(b.xmlHttpRequestNotSupported);
  });
};
export {
  i as xmlHttpRequest
};
//# sourceMappingURL=__bundle-fc1c8233-GQFXWI3Q.js.map
