import {
  DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT,
  DEFAULT_UPLOAD_SIZE_LIMIT,
  MESSAGE_TEMPLATE_KEY,
  SCROLL_BUFFER
} from "./chunk-5WPCGI6B.js";
import {
  Ln
} from "./chunk-DHPKMF2M.js";
import {
  require_react_dom
} from "./chunk-G52XTN3B.js";
import {
  ke,
  xe
} from "./chunk-7RQKLDUL.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  $e,
  Ye as Ye2,
  bn,
  hn,
  ms
} from "./chunk-JVBXJ32W.js";
import {
  E
} from "./chunk-NLX4ICU2.js";
import {
  qs
} from "./chunk-TTFJWE4I.js";
import {
  Je,
  V,
  Xe,
  Ye,
  Z,
  no
} from "./chunk-KXGQOUB2.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@sendbird/uikit-react/chunks/bundle-BosquA9C.js
var extendStatics = function(d2, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (Object.prototype.hasOwnProperty.call(b3, p2))
        d3[p2] = b3[p2];
  };
  return extendStatics(d2, b2);
};
function __extends(d2, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t4) {
    for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t4[p2] = s2[p2];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
function __rest(s2, e2) {
  var t4 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
      t4[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
      if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
        t4[p2[i2]] = s2[p2[i2]];
    }
  return t4;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t4[0] & 1)
      throw t4[1];
    return t4[1];
  }, trys: [], ops: [] }, f2, y2, t4, g2 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g2.next = verb(0), g2["throw"] = verb(1), g2["return"] = verb(2), typeof Symbol === "function" && (g2[Symbol.iterator] = function() {
    return this;
  }), g2;
  function verb(n2) {
    return function(v2) {
      return step([n2, v2]);
    };
  }
  function step(op) {
    if (f2)
      throw new TypeError("Generator is already executing.");
    while (g2 && (g2 = 0, op[0] && (_ = 0)), _)
      try {
        if (f2 = 1, y2 && (t4 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t4 = y2["return"]) && t4.call(y2), 0) : y2.next) && !(t4 = t4.call(y2, op[1])).done)
          return t4;
        if (y2 = 0, t4)
          op = [op[0] & 2, t4.value];
        switch (op[0]) {
          case 0:
          case 1:
            t4 = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t4 = _.trys, t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t4[1]) {
              _.label = t4[1];
              t4 = op;
              break;
            }
            if (t4 && _.label < t4[2]) {
              _.label = t4[2];
              _.ops.push(op);
              break;
            }
            if (t4[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e2) {
        op = [6, e2];
        y2 = 0;
      } finally {
        f2 = t4 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i2 = 0, l2 = from.length, ar; i2 < l2; i2++) {
      if (ar || !(i2 in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i2);
        ar[i2] = from[i2];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/@sendbird/uikit-react/chunks/bundle-DxUY6hv0.js
var PublishingModuleType;
(function(PublishingModuleType2) {
  PublishingModuleType2["CHANNEL"] = "CHANNEL";
  PublishingModuleType2["THREAD"] = "THREAD";
})(PublishingModuleType || (PublishingModuleType = {}));
var isTargetIncludedInModules = function(target, modules) {
  if (!modules || modules.length === 0)
    return true;
  else
    return modules.includes(target);
};
function shouldPubSubPublishToChannel(modules) {
  return isTargetIncludedInModules(PublishingModuleType.CHANNEL, modules);
}
function shouldPubSubPublishToThread(modules) {
  return isTargetIncludedInModules(PublishingModuleType.THREAD, modules);
}
var PUBSUB_TOPICS;
(function(PUBSUB_TOPICS2) {
  PUBSUB_TOPICS2["USER_UPDATED"] = "USER_UPDATED";
  PUBSUB_TOPICS2["SEND_MESSAGE_START"] = "SEND_MESSAGE_START";
  PUBSUB_TOPICS2["SEND_MESSAGE_FAILED"] = "SEND_MESSAGE_FAILED";
  PUBSUB_TOPICS2["SEND_USER_MESSAGE"] = "SEND_USER_MESSAGE";
  PUBSUB_TOPICS2["SEND_FILE_MESSAGE"] = "SEND_FILE_MESSAGE";
  PUBSUB_TOPICS2["ON_FILE_INFO_UPLOADED"] = "ON_FILE_INFO_UPLOADED";
  PUBSUB_TOPICS2["UPDATE_USER_MESSAGE"] = "UPDATE_USER_MESSAGE";
  PUBSUB_TOPICS2["DELETE_MESSAGE"] = "DELETE_MESSAGE";
  PUBSUB_TOPICS2["LEAVE_CHANNEL"] = "LEAVE_CHANNEL";
  PUBSUB_TOPICS2["CREATE_CHANNEL"] = "CREATE_CHANNEL";
  PUBSUB_TOPICS2["UPDATE_OPEN_CHANNEL"] = "UPDATE_OPEN_CHANNEL";
})(PUBSUB_TOPICS || (PUBSUB_TOPICS = {}));
var pubSubTopics = PUBSUB_TOPICS;

// node_modules/@sendbird/uikit-react/chunks/bundle-BGRwc73U.js
var uuidv4 = function() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c2) {
    var r2 = Math.random() * 16 | 0;
    var v2 = c2 === "x" ? r2 : r2 & 3 | 8;
    return v2.toString(16);
  });
};

// node_modules/@sendbird/uikit-react/chunks/bundle-Bc1fdQjj.js
var delay = function(ms2) {
  return new Promise(function(resolve) {
    setTimeout(resolve, ms2);
  });
};
var noop = function() {
};
var deleteNullish = function(obj) {
  var cleaned = {};
  Object.entries(obj).forEach(function(_a3) {
    var key = _a3[0], value = _a3[1];
    if (value !== void 0 && value !== null) {
      cleaned[key] = value;
    }
  });
  return cleaned;
};
function openURL(url) {
  var safeURL = url;
  if (safeURL) {
    if (!safeURL.startsWith("http://") && !safeURL.startsWith("https://")) {
      safeURL = "https://" + safeURL;
    }
    window.open(safeURL, "_blank", "noopener,noreferrer");
  }
}
function classnames() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  return args.filter(Boolean).join(" ");
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CK7w7gep.js
var import_react = __toESM(require_react(), 1);
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
var shim = { exports: {} };
var useSyncExternalStoreShim_development = {};
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  if (hasRequiredUseSyncExternalStoreShim_development)
    return useSyncExternalStoreShim_development;
  hasRequiredUseSyncExternalStoreShim_development = 1;
  if (true) {
    (function() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      }
      var React3 = import_react.default;
      var ReactSharedInternals = React3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format) {
        {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          var stack = ReactDebugCurrentFrame.getStackAddendum();
          if (stack !== "") {
            format += "%s";
            args = args.concat([stack]);
          }
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format);
          Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function is(x, y2) {
        return x === y2 && (x !== 0 || 1 / x === 1 / y2) || x !== x && y2 !== y2;
      }
      var objectIs = typeof Object.is === "function" ? Object.is : is;
      var useState11 = React3.useState, useEffect11 = React3.useEffect, useLayoutEffect5 = React3.useLayoutEffect, useDebugValue = React3.useDebugValue;
      var didWarnOld18Alpha = false;
      var didWarnUncachedGetSnapshot = false;
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        {
          if (!didWarnOld18Alpha) {
            if (React3.startTransition !== void 0) {
              didWarnOld18Alpha = true;
              error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
            }
          }
        }
        var value = getSnapshot();
        {
          if (!didWarnUncachedGetSnapshot) {
            var cachedValue = getSnapshot();
            if (!objectIs(value, cachedValue)) {
              error("The result of getSnapshot should be cached to avoid an infinite loop");
              didWarnUncachedGetSnapshot = true;
            }
          }
        }
        var _useState = useState11({
          inst: {
            value,
            getSnapshot
          }
        }), inst = _useState[0].inst, forceUpdate = _useState[1];
        useLayoutEffect5(function() {
          inst.value = value;
          inst.getSnapshot = getSnapshot;
          if (checkIfSnapshotChanged(inst)) {
            forceUpdate({
              inst
            });
          }
        }, [subscribe, value, getSnapshot]);
        useEffect11(function() {
          if (checkIfSnapshotChanged(inst)) {
            forceUpdate({
              inst
            });
          }
          var handleStoreChange = function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          };
          return subscribe(handleStoreChange);
        }, [subscribe]);
        useDebugValue(value);
        return value;
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(prevValue, nextValue);
        } catch (error2) {
          return true;
        }
      }
      function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
        return getSnapshot();
      }
      var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
      var isServerEnvironment = !canUseDOM;
      var shim2 = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
      var useSyncExternalStore$2 = React3.useSyncExternalStore !== void 0 ? React3.useSyncExternalStore : shim2;
      useSyncExternalStoreShim_development.useSyncExternalStore = useSyncExternalStore$2;
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
      }
    })();
  }
  return useSyncExternalStoreShim_development;
}
if (false) {
  shim.exports = requireUseSyncExternalStoreShim_production_min();
} else {
  shim.exports = requireUseSyncExternalStoreShim_development();
}
var shimExports = shim.exports;
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$2(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq$2;
var eq$1 = eq_1;
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data = this.__data__, index = assocIndexOf$3(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data = this.__data__, index = assocIndexOf$2(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear;
var listCacheDelete = _listCacheDelete;
var listCacheGet = _listCacheGet;
var listCacheHas = _listCacheHas;
var listCacheSet = _listCacheSet;
function ListCache$4(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype["delete"] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var ListCache$3 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$3();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key) {
  var data = this.__data__, result = data["delete"](key);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet$1;
function stackHas$1(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas$1;
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$8 = freeGlobal || freeSelf || Function("return this")();
var _root = root$8;
var root$7 = _root;
var Symbol$3 = root$7.Symbol;
var _Symbol = Symbol$3;
var Symbol$2 = _Symbol;
var objectProto$b = Object.prototype;
var hasOwnProperty$8 = objectProto$b.hasOwnProperty;
var nativeObjectToString$1 = objectProto$b.toString;
var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$8.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e2) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$a = Object.prototype;
var nativeObjectToString = objectProto$a.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var Symbol$1 = _Symbol;
var getRawTag = _getRawTag;
var objectToString = _objectToString;
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : void 0;
function baseGetTag$4(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
var _baseGetTag = baseGetTag$4;
function isObject$2(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_1 = isObject$2;
var baseGetTag$3 = _baseGetTag;
var isObject$1 = isObject_1;
var asyncTag = "[object AsyncFunction]";
var funcTag$1 = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction$2(value) {
  if (!isObject$1(value)) {
    return false;
  }
  var tag = baseGetTag$3(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$2;
var root$6 = _root;
var coreJsData$1 = root$6["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e2) {
    }
    try {
      return func + "";
    } catch (e2) {
    }
  }
  return "";
}
var _toSource = toSource$2;
var isFunction$1 = isFunction_1;
var isMasked = _isMasked;
var isObject = isObject_1;
var toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype;
var objectProto$9 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$7).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key) {
  return object == null ? void 0 : object[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative;
var getValue = _getValue;
function getNative$6(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$6;
var getNative$5 = _getNative;
var root$5 = _root;
var Map$3 = getNative$5(root$5, "Map");
var _Map = Map$3;
var getNative$4 = _getNative;
var nativeCreate$4 = getNative$4(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$8 = Object.prototype;
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$6.call(data, key) ? data[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$7 = Object.prototype;
var hasOwnProperty$5 = objectProto$7.hasOwnProperty;
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$5.call(data, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear;
var hashDelete = _hashDelete;
var hashGet = _hashGet;
var hashHas = _hashHas;
var hashSet = _hashSet;
function Hash$1(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash;
var ListCache$2 = _ListCache;
var Map$2 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$2 || ListCache$2)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key), size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear;
var mapCacheDelete = _mapCacheDelete;
var mapCacheGet = _mapCacheGet;
var mapCacheHas = _mapCacheHas;
var mapCacheSet = _mapCacheSet;
function MapCache$2(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache$2.prototype.clear = mapCacheClear;
MapCache$2.prototype["delete"] = mapCacheDelete;
MapCache$2.prototype.get = mapCacheGet;
MapCache$2.prototype.has = mapCacheHas;
MapCache$2.prototype.set = mapCacheSet;
var _MapCache = MapCache$2;
var ListCache$1 = _ListCache;
var Map$1 = _Map;
var MapCache$1 = _MapCache;
var LARGE_ARRAY_SIZE = 200;
function stackSet$1(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache$1) {
    var pairs = data.__data__;
    if (!Map$1 || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache$1(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache;
var stackClear = _stackClear;
var stackDelete = _stackDelete;
var stackGet = _stackGet;
var stackHas = _stackHas;
var stackSet = _stackSet;
function Stack$1(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}
Stack$1.prototype.clear = stackClear;
Stack$1.prototype["delete"] = stackDelete;
Stack$1.prototype.get = stackGet;
Stack$1.prototype.has = stackHas;
Stack$1.prototype.set = stackSet;
var _Stack = Stack$1;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache;
var setCacheAdd = _setCacheAdd;
var setCacheHas = _setCacheHas;
function SetCache$1(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
SetCache$1.prototype.has = setCacheHas;
var _SetCache = SetCache$1;
function arraySome$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
function cacheHas$1(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas$1;
var SetCache = _SetCache;
var arraySome = _arraySome;
var cacheHas = _cacheHas;
var COMPARE_PARTIAL_FLAG$3 = 1;
var COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
var root$4 = _root;
var Uint8Array$1 = root$4.Uint8Array;
var _Uint8Array = Uint8Array$1;
function mapToArray$1(map) {
  var index = -1, result = Array(map.size);
  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$1(set) {
  var index = -1, result = Array(set.size);
  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var _setToArray = setToArray$1;
var Symbol2 = _Symbol;
var Uint8Array = _Uint8Array;
var eq = eq_1;
var equalArrays$1 = _equalArrays;
var mapToArray = _mapToArray;
var setToArray = _setToArray;
var COMPARE_PARTIAL_FLAG$2 = 1;
var COMPARE_UNORDERED_FLAG = 2;
var boolTag$1 = "[object Boolean]";
var dateTag$1 = "[object Date]";
var errorTag$1 = "[object Error]";
var mapTag$2 = "[object Map]";
var numberTag$1 = "[object Number]";
var regexpTag$1 = "[object RegExp]";
var setTag$2 = "[object Set]";
var stringTag$1 = "[object String]";
var symbolTag = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]";
var dataViewTag$2 = "[object DataView]";
var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$2:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      return eq(+object, +other);
    case errorTag$1:
      return object.name == other.name && object.message == other.message;
    case regexpTag$1:
    case stringTag$1:
      return object == other + "";
    case mapTag$2:
      var convert = mapToArray;
    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
function arrayPush$1(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush$1;
var isArray$3 = Array.isArray;
var isArray_1 = isArray$3;
var arrayPush = _arrayPush;
var isArray$2 = isArray_1;
function baseGetAllKeys$1(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$2(object) ? result : arrayPush(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys$1;
function arrayFilter$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$1() {
  return [];
}
var stubArray_1 = stubArray$1;
var arrayFilter = _arrayFilter;
var stubArray = stubArray_1;
var objectProto$6 = Object.prototype;
var propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols$1 = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable$1.call(object, symbol);
  });
};
var _getSymbols = getSymbols$1;
function baseTimes$1(n2, iteratee) {
  var index = -1, result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var _baseTimes = baseTimes$1;
function isObjectLike$4(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_1 = isObjectLike$4;
var baseGetTag$2 = _baseGetTag;
var isObjectLike$3 = isObjectLike_1;
var argsTag$2 = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$3(value) && baseGetTag$2(value) == argsTag$2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments;
var isObjectLike$2 = isObjectLike_1;
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;
var isArguments$1 = baseIsArguments(function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike$2(value) && hasOwnProperty$4.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments$1;
var isBuffer$2 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
isBuffer$2.exports;
(function(module, exports) {
  var root2 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer2;
})(isBuffer$2, isBuffer$2.exports);
var isBufferExports = isBuffer$2.exports;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$1(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var _isIndex = isIndex$1;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$2(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength$2;
var baseGetTag$1 = _baseGetTag;
var isLength$1 = isLength_1;
var isObjectLike$1 = isObjectLike_1;
var argsTag$1 = "[object Arguments]";
var arrayTag$1 = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag = "[object Function]";
var mapTag$1 = "[object Map]";
var numberTag = "[object Number]";
var objectTag$2 = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag$1 = "[object Set]";
var stringTag = "[object String]";
var weakMapTag$1 = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag$1 = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag] = typedArrayTags[setTag$1] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag$1] = false;
function baseIsTypedArray$1(value) {
  return isObjectLike$1(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag$1(value)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$1(func) {
  return function(value) {
    return func(value);
  };
}
var _baseUnary = baseUnary$1;
var _nodeUtil = { exports: {} };
_nodeUtil.exports;
(function(module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e2) {
    }
  }();
  module.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var _nodeUtilExports = _nodeUtil.exports;
var baseIsTypedArray = _baseIsTypedArray;
var baseUnary = _baseUnary;
var nodeUtil = _nodeUtilExports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray$2 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$2;
var baseTimes = _baseTimes;
var isArguments = isArguments_1;
var isArray$1 = isArray_1;
var isBuffer$1 = isBufferExports;
var isIndex = _isIndex;
var isTypedArray$1 = isTypedArray_1;
var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray$1(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$3.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
var objectProto$3 = Object.prototype;
function isPrototype$1(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$3;
  return value === proto;
}
var _isPrototype = isPrototype$1;
function overArg$1(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$1;
var overArg = _overArg;
var nativeKeys$1 = overArg(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype = _isPrototype;
var nativeKeys = _nativeKeys;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function baseKeys$1(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction = isFunction_1;
var isLength = isLength_1;
function isArrayLike$1(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}
var isArrayLike_1 = isArrayLike$1;
var arrayLikeKeys = _arrayLikeKeys;
var baseKeys = _baseKeys;
var isArrayLike = isArrayLike_1;
function keys$1(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
var keys_1 = keys$1;
var baseGetAllKeys = _baseGetAllKeys;
var getSymbols = _getSymbols;
var keys = keys_1;
function getAllKeys$1(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var getNative$3 = _getNative;
var root$3 = _root;
var DataView$1 = getNative$3(root$3, "DataView");
var _DataView = DataView$1;
var getNative$2 = _getNative;
var root$2 = _root;
var Promise$2 = getNative$2(root$2, "Promise");
var _Promise = Promise$2;
var getNative$1 = _getNative;
var root$1 = _root;
var Set$2 = getNative$1(root$1, "Set");
var _Set = Set$2;
var getNative = _getNative;
var root = _root;
var WeakMap$1 = getNative(root, "WeakMap");
var _WeakMap = WeakMap$1;
var DataView = _DataView;
var Map2 = _Map;
var Promise$1 = _Promise;
var Set$1 = _Set;
var WeakMap = _WeakMap;
var baseGetTag = _baseGetTag;
var toSource = _toSource;
var mapTag = "[object Map]";
var objectTag$1 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag = "[object Set]";
var weakMapTag = "[object WeakMap]";
var dataViewTag = "[object DataView]";
var dataViewCtorString = toSource(DataView);
var mapCtorString = toSource(Map2);
var promiseCtorString = toSource(Promise$1);
var setCtorString = toSource(Set$1);
var weakMapCtorString = toSource(WeakMap);
var getTag$1 = baseGetTag;
if (DataView && getTag$1(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag$1(new Map2()) != mapTag || Promise$1 && getTag$1(Promise$1.resolve()) != promiseTag || Set$1 && getTag$1(new Set$1()) != setTag || WeakMap && getTag$1(new WeakMap()) != weakMapTag) {
  getTag$1 = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;
        case mapCtorString:
          return mapTag;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag;
        case weakMapCtorString:
          return weakMapTag;
      }
    }
    return result;
  };
}
var _getTag = getTag$1;
var Stack = _Stack;
var equalArrays = _equalArrays;
var equalByTag = _equalByTag;
var equalObjects = _equalObjects;
var getTag = _getTag;
var isArray = isArray_1;
var isBuffer = isBufferExports;
var isTypedArray = isTypedArray_1;
var COMPARE_PARTIAL_FLAG = 1;
var argsTag = "[object Arguments]";
var arrayTag = "[object Array]";
var objectTag = "[object Object]";
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep;
var isObjectLike = isObjectLike_1;
function baseIsEqual$1(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1, stack);
}
var _baseIsEqual = baseIsEqual$1;
var baseIsEqual = _baseIsEqual;
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1 = isEqual;
var isEqual$1 = getDefaultExportFromCjs(isEqual_1);
function hasStateChanged(prevState, updates) {
  return Object.entries(updates).some(function(_a3) {
    var key = _a3[0], value = _a3[1];
    if (typeof prevState[key] === "function" && typeof value === "function") {
      return false;
    }
    return !isEqual$1(prevState[key], value);
  });
}
function createStore(initialState2) {
  var state = __assign({}, initialState2);
  var listeners = /* @__PURE__ */ new Set();
  var isUpdating = false;
  var setState = function(partial, force) {
    if (isUpdating)
      return;
    try {
      isUpdating = true;
      var nextState = typeof partial === "function" ? partial(state) : partial;
      var hasChanged = hasStateChanged(state, nextState);
      if (force || hasChanged) {
        state = __assign(__assign({}, state), nextState);
        listeners.forEach(function(listener) {
          return listener();
        });
      }
    } finally {
      isUpdating = false;
    }
  };
  return {
    getState: function() {
      return state;
    },
    setState,
    subscribe: function(listener) {
      listeners.add(listener);
      return function() {
        return listeners.delete(listener);
      };
    }
  };
}
var deprecatedConfig = {
  onUserProfileMessage: void 0,
  disableUserProfile: false,
  isReactionEnabled: true,
  isMentionEnabled: false,
  isVoiceMessageEnabled: true,
  replyType: "NONE",
  showSearchIcon: true,
  isTypingIndicatorEnabledOnChannelList: false,
  isMessageReceiptStatusEnabledOnChannelList: false,
  setCurrenttheme: function() {
  }
};
var config = __assign(__assign({}, deprecatedConfig), {
  // Connection
  appId: "",
  userId: "",
  accessToken: void 0,
  theme: "light",
  isOnline: false,
  // High level options
  allowProfileEdit: true,
  forceLeftToRightMessageLayout: false,
  disableMarkAsDelivered: false,
  isMultipleFilesMessageEnabled: false,
  htmlTextDirection: "ltr",
  uikitUploadSizeLimit: DEFAULT_UPLOAD_SIZE_LIMIT,
  uikitMultipleFilesMessageLimit: DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT,
  imageCompression: void 0,
  voiceRecord: void 0,
  userMention: void 0,
  // Functions
  renderUserProfile: void 0,
  onStartDirectMessage: void 0,
  setCurrentTheme: void 0,
  userListQuery: void 0,
  // Utils
  pubSub: void 0,
  logger: void 0,
  markAsReadScheduler: void 0,
  markAsDeliveredScheduler: void 0,
  // UIKit Configs
  common: {
    enableUsingDefaultUserProfile: false
  },
  groupChannel: {
    enableOgtag: true,
    enableTypingIndicator: true,
    enableReactions: true,
    enableMention: false,
    replyType: "none",
    threadReplySelectType: "thread",
    enableVoiceMessage: true,
    typingIndicatorTypes: void 0,
    enableDocument: false,
    enableFeedback: false,
    enableSuggestedReplies: false,
    showSuggestedRepliesFor: "all_messages",
    suggestedRepliesDirection: "vertical",
    enableMarkdownForUserMessage: false,
    enableFormTypeMessage: false,
    enableReactionsSupergroup: void 0
    // @deprecated
  },
  groupChannelList: {
    enableTypingIndicator: false,
    enableMessageReceiptStatus: false
  },
  groupChannelSettings: {
    enableMessageSearch: false
  },
  openChannel: {
    enableOgtag: true,
    enableDocument: false
  }
});
var stores = {
  sdkStore: {
    sdk: {},
    initialized: false,
    loading: false,
    error: void 0
  },
  userStore: {
    user: {},
    initialized: false,
    loading: false
  },
  appInfoStore: {
    messageTemplatesInfo: void 0,
    waitingTemplateKeysMap: {}
  }
};
var initialState = {
  config,
  stores,
  emojiManager: void 0,
  eventHandlers: {
    reaction: {
      onPressUserProfile: function() {
      }
    },
    connection: {
      onConnected: function() {
      },
      onFailed: function() {
      }
    },
    modal: {
      onMounted: function() {
      }
    },
    message: {
      onSendMessageFailed: function() {
      },
      onUpdateMessageFailed: function() {
      },
      onFileUploadFailed: function() {
      }
    }
  },
  utils: {
    updateMessageTemplatesInfo: function() {
      return new Promise(function() {
      });
    },
    getCachedTemplate: function() {
      return null;
    }
  }
};
function useStore(StoreContext, selector, initialState2) {
  var store = (0, import_react.useContext)(StoreContext);
  if (!store) {
    throw new Error("useStore must be used within a StoreProvider");
  }
  var selectorRef = (0, import_react.useRef)(selector);
  selectorRef.current = selector;
  var state = shimExports.useSyncExternalStore(store.subscribe, function() {
    return selectorRef.current(store.getState());
  }, function() {
    return selectorRef.current(initialState2);
  });
  var updateState = (0, import_react.useCallback)(function(updates) {
    var currentState = store.getState();
    if (hasStateChanged(currentState, updates)) {
      store.setState(function(prevState) {
        return __assign(__assign({}, prevState), updates);
      });
    }
  }, [store]);
  return (0, import_react.useMemo)(function() {
    return {
      state,
      updateState
    };
  }, [state, updateState]);
}
var SendbirdContext = import_react.default.createContext(null);
var createSendbirdContextStore = function(props) {
  return createStore({
    config: __assign(__assign({}, initialState.config), props === null || props === void 0 ? void 0 : props.config),
    stores: __assign(__assign({}, initialState.stores), props === null || props === void 0 ? void 0 : props.stores),
    eventHandlers: __assign(__assign({}, initialState.eventHandlers), props === null || props === void 0 ? void 0 : props.eventHandlers),
    emojiManager: initialState.emojiManager,
    utils: __assign(__assign({}, initialState.utils), props === null || props === void 0 ? void 0 : props.utils)
  });
};
var useSendbirdStore = function() {
  return useStore(SendbirdContext, function(state) {
    return state;
  }, initialState);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-Bk7vYzLW.js
var import_react2 = __toESM(require_react(), 1);
var updateAppInfoStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { appInfoStore: __assign(__assign({}, state.stores.appInfoStore), payload) }) });
};
var updateSdkStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { sdkStore: __assign(__assign({}, state.stores.sdkStore), payload) }) });
};
var updateUserStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { userStore: __assign(__assign({}, state.stores.userStore), payload) }) });
};
function initSDK(_a3) {
  var appId = _a3.appId, customApiHost = _a3.customApiHost, customWebSocketHost = _a3.customWebSocketHost, _b = _a3.sdkInitParams, sdkInitParams = _b === void 0 ? {} : _b;
  var params = Object.assign(sdkInitParams, {
    appId,
    modules: [new $e(), new ke()],
    // newInstance: isNewApp,
    localCacheEnabled: true
  });
  if (customApiHost)
    params.customApiHost = customApiHost;
  if (customWebSocketHost)
    params.customWebSocketHost = customWebSocketHost;
  return Ln.init(params);
}
var APP_VERSION_STRING = "3.16.1";
function setupSDK(sdk, params) {
  var _a3, _b;
  var logger = params.logger, sessionHandler = params.sessionHandler, isMobile = params.isMobile, customExtensionParams = params.customExtensionParams;
  (_a3 = logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "SendbirdProvider | useConnect/setupConnection/setVersion", { version: APP_VERSION_STRING });
  sdk.addExtension("sb_uikit", APP_VERSION_STRING);
  sdk.addSendbirdExtensions([{ product: Ye.UIKIT_CHAT, version: APP_VERSION_STRING, platform: Xe === null || Xe === void 0 ? void 0 : Xe.JS }], { platform: isMobile ? Je.MOBILE_WEB : Je.WEB }, customExtensionParams);
  if (sessionHandler) {
    (_b = logger.info) === null || _b === void 0 ? void 0 : _b.call(logger, "SendbirdProvider | useConnect/setupConnection/configureSession", sessionHandler);
    sdk.setSessionHandler(sessionHandler);
  }
}
var NO_CONTEXT_ERROR = "No sendbird state value available. Make sure you are rendering `<SendbirdProvider>` at the top of your app.";
var useSendbird = function() {
  var store = (0, import_react2.useContext)(SendbirdContext);
  if (!store)
    throw new Error(NO_CONTEXT_ERROR);
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var actions = (0, import_react2.useMemo)(function() {
    return {
      /* Example: How to set the state basically */
      // exampleAction: () => {
      //   store.setState((state): SendbirdState => ({
      //     ...state,
      //     example: true,
      //   })),
      // },
      /* AppInfo */
      initMessageTemplateInfo: function(_a3) {
        var payload = _a3.payload;
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            messageTemplatesInfo: payload,
            waitingTemplateKeysMap: {}
          });
        });
      },
      upsertMessageTemplates: function(_a3) {
        var payload = _a3.payload;
        var appInfoStore = state.stores.appInfoStore;
        var templatesInfo = appInfoStore.messageTemplatesInfo;
        if (!templatesInfo)
          return state;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        payload.forEach(function(templatesMapData) {
          var key = templatesMapData.key, template = templatesMapData.template;
          templatesInfo.templatesMap[key] = template;
          delete waitingTemplateKeysMap[key];
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap,
            messageTemplatesInfo: templatesInfo
          });
        });
      },
      upsertWaitingTemplateKeys: function(_a3) {
        var payload = _a3.payload;
        var appInfoStore = state.stores.appInfoStore;
        var keys2 = payload.keys, requestedAt = payload.requestedAt;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        keys2.forEach(function(key) {
          var _a4, _b;
          waitingTemplateKeysMap[key] = {
            erroredMessageIds: (_b = (_a4 = waitingTemplateKeysMap[key]) === null || _a4 === void 0 ? void 0 : _a4.erroredMessageIds) !== null && _b !== void 0 ? _b : [],
            requestedAt
          };
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap
          });
        });
      },
      markErrorWaitingTemplateKeys: function(_a3) {
        var payload = _a3.payload;
        var appInfoStore = state.stores.appInfoStore;
        var keys2 = payload.keys, messageId = payload.messageId;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        keys2.forEach(function(key) {
          var waitingTemplateKeyData = waitingTemplateKeysMap[key];
          if (waitingTemplateKeyData && waitingTemplateKeyData.erroredMessageIds.indexOf(messageId) === -1) {
            waitingTemplateKeyData.erroredMessageIds.push(messageId);
          }
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap
          });
        });
      },
      /* SDK */
      setSdkLoading: function(payload) {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            initialized: false,
            loading: payload
          });
        });
      },
      sdkError: function() {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            initialized: false,
            loading: false,
            error: true
          });
        });
      },
      initSdk: function(payload) {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            sdk: payload,
            initialized: true,
            loading: false,
            error: false
          });
        });
      },
      resetSdk: function() {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            sdk: {},
            initialized: false,
            loading: false,
            error: false
          });
        });
      },
      /* User */
      initUser: function(payload) {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            initialized: true,
            loading: false,
            user: payload
          });
        });
      },
      resetUser: function() {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            initialized: false,
            loading: false,
            user: {}
          });
        });
      },
      updateUserInfo: function(payload) {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            user: payload
          });
        });
      },
      /* Connection */
      connect: function(params) {
        return __awaiter(void 0, void 0, void 0, function() {
          var logger, userId, appId, accessToken, nickname, profileUrl, isMobile, sdkInitParams, customApiHost, customWebSocketHost, customExtensionParams, eventHandlers, initializeMessageTemplatesInfo, configureSession, initDashboardConfigs, sdk, user, error_1, sendbirdError;
          var _a3, _b, _c, _d, _e;
          return __generator(this, function(_f) {
            switch (_f.label) {
              case 0:
                logger = params.logger, userId = params.userId, appId = params.appId, accessToken = params.accessToken, nickname = params.nickname, profileUrl = params.profileUrl, isMobile = params.isMobile, sdkInitParams = params.sdkInitParams, customApiHost = params.customApiHost, customWebSocketHost = params.customWebSocketHost, customExtensionParams = params.customExtensionParams, eventHandlers = params.eventHandlers, initializeMessageTemplatesInfo = params.initializeMessageTemplatesInfo, configureSession = params.configureSession, initDashboardConfigs = params.initDashboardConfigs;
                return [4, actions.disconnect({ logger })];
              case 1:
                _f.sent();
                sdk = initSDK({
                  appId,
                  customApiHost,
                  customWebSocketHost,
                  sdkInitParams
                });
                setupSDK(sdk, {
                  logger,
                  isMobile,
                  customExtensionParams,
                  sessionHandler: configureSession ? configureSession(sdk) : void 0
                });
                actions.setSdkLoading(true);
                _f.label = 2;
              case 2:
                _f.trys.push([2, 8, , 9]);
                return [4, sdk.connect(userId, accessToken)];
              case 3:
                user = _f.sent();
                actions.initUser(user);
                if (!(nickname || profileUrl))
                  return [3, 5];
                return [4, sdk.updateCurrentUserInfo({
                  nickname: nickname || user.nickname || "",
                  profileUrl: profileUrl || user.profileUrl
                })];
              case 4:
                _f.sent();
                _f.label = 5;
              case 5:
                return [4, initializeMessageTemplatesInfo === null || initializeMessageTemplatesInfo === void 0 ? void 0 : initializeMessageTemplatesInfo(sdk)];
              case 6:
                _f.sent();
                return [4, initDashboardConfigs === null || initDashboardConfigs === void 0 ? void 0 : initDashboardConfigs(sdk)];
              case 7:
                _f.sent();
                actions.initSdk(sdk);
                (_b = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _a3 === void 0 ? void 0 : _a3.onConnected) === null || _b === void 0 ? void 0 : _b.call(_a3, user);
                return [3, 9];
              case 8:
                error_1 = _f.sent();
                sendbirdError = error_1;
                actions.resetSdk();
                actions.resetUser();
                (_c = logger.error) === null || _c === void 0 ? void 0 : _c.call(logger, "SendbirdProvider | useSendbird/connect failed", sendbirdError);
                (_e = (_d = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _d === void 0 ? void 0 : _d.onFailed) === null || _e === void 0 ? void 0 : _e.call(_d, sendbirdError);
                return [3, 9];
              case 9:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      },
      disconnect: function(_a3) {
        return __awaiter(void 0, [_a3], void 0, function(_b) {
          var sdk;
          var _c;
          var logger = _b.logger;
          return __generator(this, function(_d) {
            switch (_d.label) {
              case 0:
                actions.setSdkLoading(true);
                sdk = state.stores.sdkStore.sdk;
                if (!(sdk === null || sdk === void 0 ? void 0 : sdk.disconnectWebSocket))
                  return [3, 2];
                return [4, sdk.disconnectWebSocket()];
              case 1:
                _d.sent();
                _d.label = 2;
              case 2:
                actions.resetSdk();
                actions.resetUser();
                (_c = logger.info) === null || _c === void 0 ? void 0 : _c.call(logger, "SendbirdProvider | useSendbird/disconnect completed");
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    };
  }, [store, state.stores.appInfoStore]);
  return { state, actions };
};

// node_modules/@sendbird/uikit-react/chunks/bundle-ByW5tGii.js
var import_react3 = __toESM(require_react(), 1);
var UserProfileContext = import_react3.default.createContext({
  disableUserProfile: true,
  isOpenChannel: false
});
var useUserProfileContext = function() {
  return (0, import_react3.useContext)(UserProfileContext);
};
var UserProfileProvider = function(_a3) {
  var _b;
  var _c = _a3.isOpenChannel, isOpenChannel = _c === void 0 ? false : _c, _d = _a3.disableUserProfile, _disableUserProfile = _d === void 0 ? false : _d, _renderUserProfile = _a3.renderUserProfile, _onUserProfileMessage = _a3.onUserProfileMessage, _onStartDirectMessage = _a3.onStartDirectMessage, children = _a3.children;
  var state = useSendbird().state;
  var config2 = state.config;
  var onStartDirectMessage = (_b = _onStartDirectMessage !== null && _onStartDirectMessage !== void 0 ? _onStartDirectMessage : _onUserProfileMessage) !== null && _b !== void 0 ? _b : config2.onStartDirectMessage;
  return import_react3.default.createElement(UserProfileContext.Provider, { value: {
    isOpenChannel,
    disableUserProfile: _disableUserProfile !== null && _disableUserProfile !== void 0 ? _disableUserProfile : !config2.common.enableUsingDefaultUserProfile,
    renderUserProfile: _renderUserProfile !== null && _renderUserProfile !== void 0 ? _renderUserProfile : config2.renderUserProfile,
    onStartDirectMessage,
    /** legacy of onStartDirectMessage */
    onUserProfileMessage: onStartDirectMessage
  } }, children);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BA9ZfQ-7.js
var n = Symbol("@ts-pattern/matcher");
var t = "@ts-pattern/anonymous-select-key";
var e = function(n2) {
  return Boolean(n2 && "object" == typeof n2);
};
var r = function(t4) {
  return t4 && !!t4[n];
};
var u = function t2(u2, i2, c2) {
  if (e(u2)) {
    if (r(u2)) {
      var o2 = u2[n]().match(i2), a2 = o2.matched, f2 = o2.selections;
      return a2 && f2 && Object.keys(f2).forEach(function(n2) {
        return c2(n2, f2[n2]);
      }), a2;
    }
    if (!e(i2))
      return false;
    if (Array.isArray(u2))
      return !!Array.isArray(i2) && u2.length === i2.length && u2.every(function(n2, e2) {
        return t2(n2, i2[e2], c2);
      });
    if (u2 instanceof Map)
      return i2 instanceof Map && Array.from(u2.keys()).every(function(n2) {
        return t2(u2.get(n2), i2.get(n2), c2);
      });
    if (u2 instanceof Set) {
      if (!(i2 instanceof Set))
        return false;
      if (0 === u2.size)
        return 0 === i2.size;
      if (1 === u2.size) {
        var s2 = Array.from(u2.values())[0];
        return r(s2) ? Array.from(i2.values()).every(function(n2) {
          return t2(s2, n2, c2);
        }) : i2.has(s2);
      }
      return Array.from(u2.values()).every(function(n2) {
        return i2.has(n2);
      });
    }
    return Object.keys(u2).every(function(e2) {
      var o3, a3 = u2[e2];
      return (e2 in i2 || r(o3 = a3) && "optional" === o3[n]().matcherType) && t2(a3, i2[e2], c2);
    });
  }
  return Object.is(i2, u2);
};
var i = function t3(u2) {
  var i2, o2, a2;
  return e(u2) ? r(u2) ? null != (i2 = null == (o2 = (a2 = u2[n]()).getSelectionKeys) ? void 0 : o2.call(a2)) ? i2 : [] : Array.isArray(u2) ? c(u2, t3) : c(Object.values(u2), t3) : [];
};
var c = function(n2, t4) {
  return n2.reduce(function(n3, e2) {
    return n3.concat(t4(e2));
  }, []);
};
function o(t4) {
  var e2;
  return (e2 = {})[n] = function() {
    return { match: function(n2) {
      var e3 = {}, r2 = function(n3, t5) {
        e3[n3] = t5;
      };
      return void 0 === n2 ? (i(t4).forEach(function(n3) {
        return r2(n3, void 0);
      }), { matched: true, selections: e3 }) : { matched: u(t4, n2, r2), selections: e3 };
    }, getSelectionKeys: function() {
      return i(t4);
    }, matcherType: "optional" };
  }, e2;
}
function a(t4) {
  var e2;
  return (e2 = {})[n] = function() {
    return { match: function(n2) {
      if (!Array.isArray(n2))
        return { matched: false };
      var e3 = {};
      if (0 === n2.length)
        return i(t4).forEach(function(n3) {
          e3[n3] = [];
        }), { matched: true, selections: e3 };
      var r2 = function(n3, t5) {
        e3[n3] = (e3[n3] || []).concat([t5]);
      };
      return { matched: n2.every(function(n3) {
        return u(t4, n3, r2);
      }), selections: e3 };
    }, getSelectionKeys: function() {
      return i(t4);
    } };
  }, e2;
}
function f() {
  var t4, e2 = [].slice.call(arguments);
  return (t4 = {})[n] = function() {
    return { match: function(n2) {
      var t5 = {}, r2 = function(n3, e3) {
        t5[n3] = e3;
      };
      return { matched: e2.every(function(t6) {
        return u(t6, n2, r2);
      }), selections: t5 };
    }, getSelectionKeys: function() {
      return c(e2, i);
    }, matcherType: "and" };
  }, t4;
}
function s() {
  var t4, e2 = [].slice.call(arguments);
  return (t4 = {})[n] = function() {
    return { match: function(n2) {
      var t5 = {}, r2 = function(n3, e3) {
        t5[n3] = e3;
      };
      return c(e2, i).forEach(function(n3) {
        return r2(n3, void 0);
      }), { matched: e2.some(function(t6) {
        return u(t6, n2, r2);
      }), selections: t5 };
    }, getSelectionKeys: function() {
      return c(e2, i);
    }, matcherType: "or" };
  }, t4;
}
function l(t4) {
  var e2;
  return (e2 = {})[n] = function() {
    return { match: function(n2) {
      return { matched: !u(t4, n2, function() {
      }) };
    }, getSelectionKeys: function() {
      return [];
    }, matcherType: "not" };
  }, e2;
}
function h(t4) {
  var e2;
  return (e2 = {})[n] = function() {
    return { match: function(n2) {
      return { matched: Boolean(t4(n2)) };
    } };
  }, e2;
}
function v() {
  var e2, r2 = [].slice.call(arguments), c2 = "string" == typeof r2[0] ? r2[0] : void 0, o2 = 2 === r2.length ? r2[1] : "string" == typeof r2[0] ? void 0 : r2[0];
  return (e2 = {})[n] = function() {
    return { match: function(n2) {
      var e3, r3 = ((e3 = {})[null != c2 ? c2 : t] = n2, e3);
      return { matched: void 0 === o2 || u(o2, n2, function(n3, t4) {
        r3[n3] = t4;
      }), selections: r3 };
    }, getSelectionKeys: function() {
      return [null != c2 ? c2 : t].concat(void 0 === o2 ? [] : i(o2));
    } };
  }, e2;
}
var y = h(function(n2) {
  return true;
});
var m = y;
var d = h(function(n2) {
  return "string" == typeof n2;
});
var g = h(function(n2) {
  return "number" == typeof n2;
});
var p = h(function(n2) {
  return "boolean" == typeof n2;
});
var b = h(function(n2) {
  return "bigint" == typeof n2;
});
var w = h(function(n2) {
  return "symbol" == typeof n2;
});
var A = h(function(n2) {
  return null == n2;
});
var S = { __proto__: null, optional: o, array: a, intersection: f, union: s, not: l, when: h, select: v, any: y, _: m, string: d, number: g, boolean: p, bigint: b, symbol: w, nullish: A, instanceOf: function(n2) {
  return h(function(n3) {
    return function(t4) {
      return t4 instanceof n3;
    };
  }(n2));
}, typed: function() {
  return { array: a, optional: o, intersection: f, union: s, not: l, select: v, when: h };
} };
function K(n2) {
  return new O(n2, []);
}
var O = function() {
  function n2(n3, t4) {
    this.value = void 0, this.cases = void 0, this.value = n3, this.cases = t4;
  }
  var e2 = n2.prototype;
  return e2.with = function() {
    var e3 = [].slice.call(arguments), r2 = e3[e3.length - 1], i2 = [e3[0]], c2 = [];
    return 3 === e3.length && "function" == typeof e3[1] ? (i2.push(e3[0]), c2.push(e3[1])) : e3.length > 2 && i2.push.apply(i2, e3.slice(1, e3.length - 1)), new n2(this.value, this.cases.concat([{ match: function(n3) {
      var e4 = {}, r3 = Boolean(i2.some(function(t4) {
        return u(t4, n3, function(n4, t5) {
          e4[n4] = t5;
        });
      }) && c2.every(function(t4) {
        return t4(n3);
      }));
      return { matched: r3, value: r3 && Object.keys(e4).length ? t in e4 ? e4[t] : e4 : n3 };
    }, handler: r2 }]));
  }, e2.when = function(t4, e3) {
    return new n2(this.value, this.cases.concat([{ match: function(n3) {
      return { matched: Boolean(t4(n3)), value: n3 };
    }, handler: e3 }]));
  }, e2.otherwise = function(t4) {
    return new n2(this.value, this.cases.concat([{ match: function(n3) {
      return { matched: true, value: n3 };
    }, handler: t4 }])).run();
  }, e2.exhaustive = function() {
    return this.run();
  }, e2.run = function() {
    for (var n3 = this.value, t4 = void 0, e3 = 0; e3 < this.cases.length; e3++) {
      var r2 = this.cases[e3], u2 = r2.match(this.value);
      if (u2.matched) {
        n3 = u2.value, t4 = r2.handler;
        break;
      }
    }
    if (!t4) {
      var i2;
      try {
        i2 = JSON.stringify(this.value);
      } catch (n4) {
        i2 = this.value;
      }
      throw new Error("Pattern matching error: no pattern matches value " + i2);
    }
    return t4(n3, this.value);
  }, n2;
}();

// node_modules/@sendbird/uikit-react/utils/message/getOutgoingMessageState.js
var OutgoingMessageStates;
(function(OutgoingMessageStates2) {
  OutgoingMessageStates2["NONE"] = "NONE";
  OutgoingMessageStates2["PENDING"] = "PENDING";
  OutgoingMessageStates2["SENT"] = "SENT";
  OutgoingMessageStates2["FAILED"] = "FAILED";
  OutgoingMessageStates2["DELIVERED"] = "DELIVERED";
  OutgoingMessageStates2["READ"] = "READ";
})(OutgoingMessageStates || (OutgoingMessageStates = {}));
var getOutgoingMessageState = function(channel, message) {
  var _a3, _b, _c, _d, _e;
  if (!message || !("sendingStatus" in message))
    return OutgoingMessageStates.NONE;
  if (message.sendingStatus === "pending") {
    return OutgoingMessageStates.PENDING;
  }
  if (message.sendingStatus === "failed") {
    return OutgoingMessageStates.FAILED;
  }
  if ((_a3 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.call(channel)) {
    if (((_c = (_b = channel).getUnreadMemberCount) === null || _c === void 0 ? void 0 : _c.call(_b, message)) === 0) {
      return OutgoingMessageStates.READ;
    } else if (((_e = (_d = channel).getUndeliveredMemberCount) === null || _e === void 0 ? void 0 : _e.call(_d, message)) === 0) {
      return OutgoingMessageStates.DELIVERED;
    }
  }
  if (message.sendingStatus === "succeeded") {
    return OutgoingMessageStates.SENT;
  }
  return OutgoingMessageStates.NONE;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-CWd47dzy.js
var isIOS = function(userAgent) {
  return /iPhone|iPad|iPod/i.test(userAgent);
};
var isWebkit = function(userAgent) {
  return /WebKit/i.test(userAgent);
};
var isChrome = function(userAgent) {
  return /Chrome/i.test(userAgent);
};
var isSafari = function(userAgent) {
  return !isChrome(userAgent) && /Safari/i.test(userAgent);
};
var isMobileIOS = function(userAgent) {
  return isIOS(userAgent) && (isWebkit(userAgent) || isSafari(userAgent));
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BovMsFd4.js
function _typeof(o2) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof(o2);
}
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}

// node_modules/@sendbird/uikit-react/chunks/bundle-Ug7rKzFJ.js
function startOfSecond(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setMilliseconds(0);
  return date;
}
function isSameSecond(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);
  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);
  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
}
var _a;
var SUPPORTED_MIMES = {
  IMAGE: [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "image/gif",
    "image/svg+xml",
    "image/webp",
    // not supported in IE
    "image/bmp"
  ],
  VIDEO: [
    "video/mpeg",
    "video/ogg",
    "video/webm",
    "video/mp4"
    // 'video/quicktime', // NOTE: Do not support ThumbnailMessage for the .mov video
  ],
  AUDIO: [
    "audio/aac",
    "audio/midi",
    "audio/x-midi",
    "audio/mpeg",
    "audio/ogg",
    "audio/opus",
    "audio/wav",
    "audio/webm",
    "audio/3gpp",
    "audio/3gpp2",
    "audio/mp3"
  ],
  DOCUMENT: [
    "text/plain",
    "text/css",
    "text/csv",
    "text/html",
    "text/calendar",
    "text/javascript",
    "text/xml",
    "text/x-log",
    "video/quicktime"
    // NOTE: Assume this video is a normal file, not video
  ],
  APPLICATION: [
    "application/x-abiword",
    "application/x-freearc",
    "application/vnd.amazon.ebook",
    "application/octet-stream",
    "application/x-bzip",
    "application/x-bzip2",
    "application/x-cdf",
    "application/x-csh",
    "application/msword",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "application/vnd.ms-fontobject",
    "application/epub+zip",
    "application/gzip",
    "application/java-archive",
    "application/json",
    "application/ld+json",
    "application/vnd.apple.installer+xml",
    "application/vnd.oasis.opendocument.presentation",
    "application/vnd.oasis.opendocument.spreadsheet",
    "application/vnd.oasis.opendocument.text",
    "application/ogg",
    "application/pdf",
    "application/x-httpd-php",
    "application/vnd.ms-powerpoint",
    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "application/vnd.rar",
    "application/rtf",
    "application/x-sh",
    "application/x-tar",
    "application/vnd.visio",
    "application/xhtml+xml",
    "application/vnd.ms-excel",
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "application/xml",
    "application/vnd.mozilla.xul+xml",
    "application/zip",
    "application/x-7z-compressed"
  ],
  ARCHIVE: [
    "application/zip",
    "application/x-rar-compressed",
    "application/x-7z-compressed",
    "application/x-tar",
    "application/gzip",
    "application/x-bzip",
    "application/x-bzip2",
    "application/x-xz",
    "application/x-iso9660-image"
  ]
};
var SUPPORTED_FILE_EXTENSIONS = {
  IMAGE: [".apng", ".avif", ".gif", ".jpg", ".jpeg", ".jfif", ".pjpeg", ".pjp", ".png", ".svg", ".webp", ".bmp", ".ico", ".cur", ".tif", ".tiff", ".heic", ".heif"],
  VIDEO: [".mp4", ".webm", ".ogv", ".3gp", ".3g2", ".avi", ".mov", ".wmv", ".mpg", ".mpeg", ".m4v", ".mkv"],
  AUDIO: [".aac", ".midi", ".mp3", ".oga", ".opus", ".wav", ".weba", ".3gp", ".3g2"],
  DOCUMENT: [".txt", ".log", ".csv", ".rtf", ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx"],
  ARCHIVE: [".zip", ".rar", ".7z", ".tar", ".gz", ".bz2", ".xz", ".iso"]
};
var getMimeTypesUIKitAccepts = function(acceptableTypes) {
  if (Array.isArray(acceptableTypes) && acceptableTypes.length > 0) {
    var uniqueTypes = acceptableTypes.reduce(function(prev, curr) {
      var lowerCurr = curr.toLowerCase();
      switch (lowerCurr) {
        case "image": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES.IMAGE, false), SUPPORTED_FILE_EXTENSIONS.IMAGE, false));
          break;
        }
        case "video": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES.VIDEO, false), SUPPORTED_FILE_EXTENSIONS.VIDEO, false));
          break;
        }
        case "audio": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES.AUDIO, false), SUPPORTED_FILE_EXTENSIONS.AUDIO, false));
          break;
        }
        case "archive": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES.ARCHIVE, false), SUPPORTED_FILE_EXTENSIONS.ARCHIVE, false));
          break;
        }
        default: {
          prev.push(curr);
          break;
        }
      }
      return prev;
    }, []);
    return Array.from(new Set(uniqueTypes)).join(",");
  }
  return __spreadArray(__spreadArray([], Object.values(SUPPORTED_MIMES).flat(), true), Object.values(SUPPORTED_FILE_EXTENSIONS).flat(), true).join(",");
};
var UIKitMessageTypes = {
  ADMIN: "ADMIN",
  TEXT: "TEXT",
  FILE: "FILE",
  MULTIPLE_FILES: "MULTIPLE_FILES",
  THUMBNAIL: "THUMBNAIL",
  OG: "OG",
  UNKNOWN: "UNKNOWN"
};
var UIKitFileTypes = {
  IMAGE: "IMAGE",
  AUDIO: "AUDIO",
  VIDEO: "VIDEO",
  GIF: "GIF",
  VOICE: "VOICE",
  OTHERS: "OTHERS"
};
var isMOVType = function(type) {
  return type === "video/quicktime";
};
var isSupportedVideoFileTypeInSafari = function(type) {
  return isSafari(navigator.userAgent) && isMOVType(type);
};
var isImage = function(type) {
  return SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;
};
var isVideo = function(type) {
  return SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0 || isSupportedVideoFileTypeInSafari(type);
};
var isGif = function(type) {
  return type === "image/gif";
};
var isSupportedFileView = function(type) {
  return isImage(type) || isVideo(type);
};
var isAudio = function(type) {
  return SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;
};
var getUIKitFileTypes = function() {
  return __assign({}, UIKitFileTypes);
};
var getUIKitFileType = function(type) {
  if (isGif(type))
    return UIKitFileTypes.GIF;
  if (isImage(type))
    return UIKitFileTypes.IMAGE;
  if (isVideo(type))
    return UIKitFileTypes.VIDEO;
  if (isAudio(type))
    return UIKitFileTypes.AUDIO;
  return UIKitFileTypes.OTHERS;
};
var isSentMessage = function(message) {
  return message.sendingStatus === "succeeded";
};
var isReadMessage = function(channel, message) {
  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;
};
var isFailedMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
};
var isPendingMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending";
};
var isSentStatus = function(state) {
  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;
};
var isAdminMessage = function(message) {
  return message && (message["isAdminMessage"] && typeof message.isAdminMessage === "function" ? message.isAdminMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "admin");
};
var isUserMessage = function(message) {
  return message && (message["isUserMessage"] && typeof message.isUserMessage === "function" ? message.isUserMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "user");
};
var isFileMessage = function(message) {
  return !!message && (message["isFileMessage"] && typeof message.isFileMessage === "function" ? message.isFileMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "file");
};
var isMultipleFilesMessage = function(message) {
  return message && (message["isMultipleFilesMessage"] && typeof message.isMultipleFilesMessage === "function" ? message.isMultipleFilesMessage() : message.messageType === "file" && Object.prototype.hasOwnProperty.call(message, "fileInfoList"));
};
var isThreadMessage = function(message) {
  return !!message.parentMessageId && !!message.parentMessage;
};
var isFormMessage = function(message) {
  return !!message.messageForm;
};
var isTemplateMessage = function(message) {
  var _a3;
  return !!(message && ((_a3 = message.extendedMessagePayload) === null || _a3 === void 0 ? void 0 : _a3[MESSAGE_TEMPLATE_KEY]));
};
var isValidTemplateMessageType = function(templatePayload) {
  var type = templatePayload["type"];
  return !(type && !MessageTemplateTypes[type]);
};
var MessageTemplateTypes = {
  default: "default"
};
var uiContainerType = (_a = {}, _a[MessageTemplateTypes.default] = "ui_container_type__default", _a);
var isOGMessage = function(message) {
  if (!message || !isUserMessage(message))
    return false;
  return !!message.ogMetaData && !!(message.ogMetaData.url || message.ogMetaData.title || message.ogMetaData.description || message.ogMetaData.defaultImage);
};
var isTextMessage = function(message) {
  return isUserMessage(message);
};
var isThumbnailMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isSupportedFileView(message.type);
};
var isImageMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isImage(message.type);
};
var isVideoMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isVideo(message.type);
};
var isGifMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isGif(message.type);
};
var isAudioMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isAudio(message.type);
};
var isImageFileInfo = function(fileInfo) {
  if (!fileInfo)
    return false;
  return !!fileInfo.mimeType && (isImage(fileInfo.mimeType) || isGif(fileInfo.mimeType));
};
var isAudioMessageMimeType = function(type) {
  return /^audio\//.test(type);
};
var isVoiceMessageMimeType = function(type) {
  return /^voice\//.test(type);
};
var isVoiceMessage = function(message) {
  var _a3, _b, _c, _d;
  if (!message || !isFileMessage(message) || !message.type)
    return false;
  var _e = message.type.split(";"), mimeType = _e[0], typeParameter = _e[1];
  if (!isAudioMessageMimeType(mimeType)) {
    return false;
  }
  if (typeParameter) {
    var _f = typeParameter.split("="), key = _f[0], value = _f[1];
    return key === "sbu_type" && value === "voice";
  }
  return isVoiceMessageMimeType((_d = (_c = (_b = (_a3 = message === null || message === void 0 ? void 0 : message.metaArrays) === null || _a3 === void 0 ? void 0 : _a3.find(function(metaArray) {
    return metaArray.key === "KEY_INTERNAL_MESSAGE_TYPE";
  })) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : "");
};
var isEditedMessage = function(message) {
  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;
};
var getUIKitMessageTypes = function() {
  return __assign({}, UIKitMessageTypes);
};
var getUIKitMessageType = function(message) {
  if (isAdminMessage(message))
    return UIKitMessageTypes.ADMIN;
  if (isUserMessage(message)) {
    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;
  }
  if (isMultipleFilesMessage(message)) {
    return UIKitMessageTypes.MULTIPLE_FILES;
  }
  if (isFileMessage(message)) {
    if (isThumbnailMessage(message)) {
      return UIKitMessageTypes.THUMBNAIL;
    }
    if (isVoiceMessage(message)) {
      return UIKitFileTypes.VOICE;
    }
    return UIKitMessageTypes.FILE;
  }
  return UIKitMessageTypes.UNKNOWN;
};
var reducer = function(accumulator, currentValue) {
  if (Array.isArray(currentValue)) {
    return __spreadArray(__spreadArray([], accumulator, true), currentValue, true);
  } else {
    accumulator.push(currentValue);
    return accumulator;
  }
};
var getClassName = function(classNames) {
  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(" ") : classNames;
};
var isReactedBy = function(userId, reaction) {
  return reaction.userIds.some(function(reactorUserId) {
    return reactorUserId === userId;
  });
};
var getEmojiTooltipString = function(reaction, userId, memberNicknamesMap, stringSet2) {
  var you = "";
  if (isReactedBy(userId, reaction)) {
    you = reaction.userIds.length === 1 ? stringSet2.TOOLTIP__YOU : stringSet2.TOOLTIP__AND_YOU;
  }
  return "".concat(reaction.userIds.filter(function(reactorUserId) {
    return reactorUserId !== userId;
  }).map(function(reactorUserId) {
    return memberNicknamesMap.get(reactorUserId) || stringSet2.TOOLTIP__UNKNOWN_USER;
  }).join(", ")).concat(you);
};
function getSuggestedReplies(message) {
  var _a3;
  if ((message === null || message === void 0 ? void 0 : message.extendedMessagePayload) && Array.isArray((_a3 = message === null || message === void 0 ? void 0 : message.extendedMessagePayload) === null || _a3 === void 0 ? void 0 : _a3.suggested_replies)) {
    return message.extendedMessagePayload.suggested_replies;
  } else {
    return [];
  }
}
var truncateString = function(fullStr, strLen) {
  if (!strLen)
    strLen = 40;
  if (fullStr === null || fullStr === void 0)
    return "";
  if (fullStr.length <= strLen)
    return fullStr;
  var separator = "...";
  var sepLen = separator.length;
  var charsToShow = strLen - sepLen;
  var frontChars = Math.ceil(charsToShow / 2);
  var backChars = Math.floor(charsToShow / 2);
  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
};
var copyToClipboard = function(text) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};
var getEmojiListAll = function(emojiContainer) {
  var _a3;
  return (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.map(function(emojiCategory) {
    return emojiCategory.emojis;
  }).reduce(function(prevArr, currArr) {
    return prevArr.concat(currArr);
  }, []);
};
var getEmojiMapAll = function(emojiContainer) {
  var _a3;
  var emojiMap = /* @__PURE__ */ new Map();
  (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.forEach(function(category) {
    var _a4;
    (_a4 = category === null || category === void 0 ? void 0 : category.emojis) === null || _a4 === void 0 ? void 0 : _a4.forEach(function(emoji) {
      if (emoji && emoji.key) {
        emojiMap.set(emoji.key, emoji);
      }
    });
  });
  return emojiMap;
};
var getEmojiListByCategoryIds = function(emojiContainer, categoryIds) {
  var _a3;
  if (!categoryIds)
    return getEmojiListAll(emojiContainer);
  return ((_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.filter(function(emojiCategory) {
    return categoryIds.includes(emojiCategory.id);
  }).flatMap(function(emojiCategory) {
    return emojiCategory.emojis;
  })) || [];
};
var findEmojiUrl = function(targetKey) {
  return function(_a3) {
    var key = _a3.key;
    return key === targetKey;
  };
};
var getEmojiUrl = function(emojiContainer, emojiKey) {
  var _a3, _b;
  var isFindingKey = findEmojiUrl(emojiKey !== null && emojiKey !== void 0 ? emojiKey : "");
  return ((_b = (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories.find(function(category) {
    return category.emojis.some(isFindingKey);
  })) === null || _a3 === void 0 ? void 0 : _a3.emojis.find(isFindingKey)) === null || _b === void 0 ? void 0 : _b.url) || "";
};
var getUserName = function(user) {
  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);
};
var getSenderName = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sender) && getUserName(message === null || message === void 0 ? void 0 : message.sender);
};
var hasSameMembers = function(a2, b2) {
  if (a2 === b2) {
    return true;
  }
  if (a2 == null || b2 == null) {
    return false;
  }
  if (a2.length !== b2.length) {
    return false;
  }
  var sortedA = __spreadArray([], a2, true).sort();
  var sortedB = __spreadArray([], b2, true).sort();
  for (var i2 = 0; i2 < sortedA.length; ++i2) {
    if (sortedA[i2] !== sortedB[i2]) {
      return false;
    }
  }
  return true;
};
var isFriend = function(user) {
  if (!user)
    return false;
  return !!(user.friendDiscoveryKey || user.friendName);
};
var filterMessageListParams = function(params, message) {
  var _a3, _b, _c, _d;
  var _e = params.customTypesFilter, customTypesFilter = _e === void 0 ? [] : _e;
  if ((params === null || params === void 0 ? void 0 : params.messageTypeFilter) && params.messageTypeFilter !== message.messageType) {
    return false;
  }
  if ((customTypesFilter === null || customTypesFilter === void 0 ? void 0 : customTypesFilter.length) > 0) {
    var customTypes = customTypesFilter.filter(function(item) {
      return item !== "*";
    });
    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {
      return false;
    }
  }
  if ((params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) && ((_a3 = params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) === null || _a3 === void 0 ? void 0 : _a3.length) > 0) {
    if (((_b = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b === void 0 ? void 0 : _b.call(message)) || ((_c = message === null || message === void 0 ? void 0 : message.isFileMessage) === null || _c === void 0 ? void 0 : _c.call(message))) {
      var messageSender = message.sender || message["_sender"];
      if (!((_d = params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) === null || _d === void 0 ? void 0 : _d.includes(messageSender === null || messageSender === void 0 ? void 0 : messageSender.userId))) {
        return false;
      }
    } else {
      return false;
    }
  }
  if (!(params === null || params === void 0 ? void 0 : params.includeParentMessageInfo) && ((message === null || message === void 0 ? void 0 : message.parentMessageId) || (message === null || message === void 0 ? void 0 : message.parentMessage))) {
    return false;
  }
  return true;
};
var filterChannelListParams = function(params, channel, currentUserId) {
  var _a3, _b, _c, _d, _e, _f, _g2;
  var includeEmpty = params.includeEmpty, includeFrozen = params.includeFrozen, searchFilter = params.searchFilter, userIdsFilter = params.userIdsFilter, customTypesFilter = params.customTypesFilter, channelUrlsFilter = params.channelUrlsFilter, customTypeStartsWithFilter = params.customTypeStartsWithFilter, channelNameContainsFilter = params.channelNameContainsFilter, nicknameContainsFilter = params.nicknameContainsFilter, myMemberStateFilter = params.myMemberStateFilter, hiddenChannelFilter = params.hiddenChannelFilter, unreadChannelFilter = params.unreadChannelFilter, publicChannelFilter = params.publicChannelFilter, superChannelFilter = params.superChannelFilter, _h = params.metadataKey, metadataKey = _h === void 0 ? "" : _h, _j = params.metadataValues, metadataValues = _j === void 0 ? ["a", "b"] : _j, metadataValueStartsWith = params.metadataValueStartsWith;
  if (!includeEmpty && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {
    return false;
  }
  if ((searchFilter === null || searchFilter === void 0 ? void 0 : searchFilter.query) && ((_b = (_a3 = searchFilter === null || searchFilter === void 0 ? void 0 : searchFilter.fields) === null || _a3 === void 0 ? void 0 : _a3.length) !== null && _b !== void 0 ? _b : 0) > 0) {
    var searchQuery_1 = searchFilter.query;
    var searchFields = searchFilter.fields;
    if (searchQuery_1 && searchFields && searchFields.length > 0) {
      if (!searchFields.some(function(searchField) {
        var _a4, _b2;
        switch (searchField) {
          case "channel_name": {
            return (_a4 = channel === null || channel === void 0 ? void 0 : channel.name) === null || _a4 === void 0 ? void 0 : _a4.toLowerCase().includes(searchQuery_1.toLowerCase());
          }
          case "member_nickname": {
            return (_b2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _b2 === void 0 ? void 0 : _b2.some(function(member) {
              return member.nickname.toLowerCase().includes(searchQuery_1.toLowerCase());
            });
          }
          default: {
            return true;
          }
        }
      })) {
        return false;
      }
    }
  }
  if (((_c = userIdsFilter === null || userIdsFilter === void 0 ? void 0 : userIdsFilter.userIds) === null || _c === void 0 ? void 0 : _c.length) > 0) {
    var includeMode = userIdsFilter.includeMode, queryType = userIdsFilter.queryType;
    var userIds = userIdsFilter.userIds;
    var memberIds_1 = (_d = channel === null || channel === void 0 ? void 0 : channel.members) === null || _d === void 0 ? void 0 : _d.map(function(member) {
      return member.userId;
    });
    if (!includeMode) {
      if (!userIds.includes(currentUserId)) {
        userIds.push(currentUserId);
      }
      if (((_e = channel === null || channel === void 0 ? void 0 : channel.members) === null || _e === void 0 ? void 0 : _e.length) > userIds.length) {
        return false;
      }
      if (!hasSameMembers(userIds, memberIds_1)) {
        return false;
      }
    } else if (userIds.length > 0) {
      switch (queryType) {
        case "AND": {
          if (userIds.some(function(userId) {
            return !memberIds_1.includes(userId);
          })) {
            return false;
          }
          break;
        }
        case "OR": {
          if (userIds.every(function(userId) {
            return !memberIds_1.includes(userId);
          })) {
            return false;
          }
          break;
        }
      }
    }
  }
  if (includeEmpty === false && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {
    return false;
  }
  if (includeFrozen === false && (channel === null || channel === void 0 ? void 0 : channel.isFrozen) === true) {
    return false;
  }
  if (customTypesFilter && !customTypesFilter.includes(channel === null || channel === void 0 ? void 0 : channel.customType)) {
    return false;
  }
  if (customTypeStartsWithFilter && !new RegExp("^".concat(customTypeStartsWithFilter)).test(channel === null || channel === void 0 ? void 0 : channel.customType)) {
    return false;
  }
  if (channelNameContainsFilter && !((_f = channel === null || channel === void 0 ? void 0 : channel.name) === null || _f === void 0 ? void 0 : _f.toLowerCase().includes(channelNameContainsFilter.toLowerCase()))) {
    return false;
  }
  if (nicknameContainsFilter) {
    var lowerCasedSubString_1 = nicknameContainsFilter.toLowerCase();
    if ((_g2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _g2 === void 0 ? void 0 : _g2.every(function(member) {
      return !member.nickname.toLowerCase().includes(lowerCasedSubString_1);
    })) {
      return false;
    }
  }
  if (channelUrlsFilter && !channelUrlsFilter.includes(channel === null || channel === void 0 ? void 0 : channel.url)) {
    return false;
  }
  if (myMemberStateFilter) {
    switch (myMemberStateFilter) {
      case "joined_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "joined") {
          return false;
        }
        break;
      case "invited_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited") {
          return false;
        }
        break;
      case "invited_by_friend":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited" || !isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {
          return false;
        }
        break;
      case "invited_by_non_friend":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited" || isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {
          return false;
        }
        break;
    }
  }
  if (hiddenChannelFilter) {
    switch (hiddenChannelFilter) {
      case "unhidden_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "unhidden") {
          return false;
        }
        break;
      case "hidden_only":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden)) {
          return false;
        }
        break;
      case "hidden_allow_auto_unhide":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "hidden_allow_auto_unhide") {
          return false;
        }
        break;
      case "hidden_prevent_auto_unhide":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "hidden_prevent_auto_unhide") {
          return false;
        }
        break;
    }
  }
  if (unreadChannelFilter) {
    switch (unreadChannelFilter) {
      case "unread_message":
        if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) === 0) {
          return false;
        }
        break;
    }
  }
  if (publicChannelFilter) {
    switch (publicChannelFilter) {
      case "public":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isPublic)) {
          return false;
        }
        break;
      case "private":
        if (channel === null || channel === void 0 ? void 0 : channel.isPublic) {
          return false;
        }
        break;
    }
  }
  if (superChannelFilter) {
    switch (superChannelFilter) {
      case "super":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isSuper)) {
          return false;
        }
        break;
      case "nonsuper":
        if (channel === null || channel === void 0 ? void 0 : channel.isSuper) {
          return false;
        }
        break;
    }
  }
  var _k = channel.cachedMetaData, cachedMetaData = _k === void 0 ? {} : _k;
  if (metadataKey && (metadataValues || metadataValueStartsWith)) {
    var metadataValue_1 = cachedMetaData[metadataKey];
    if (!metadataValue_1) {
      return false;
    }
    if (metadataValues && !metadataValues.every(function(value) {
      return metadataValue_1.includes(value);
    })) {
      return false;
    }
    if (metadataValueStartsWith && !metadataValue_1.startsWith(metadataValueStartsWith)) {
      return false;
    }
  }
  return true;
};
var sortChannelList = function(channels, order) {
  var compareFunc = K(order).with(E.CHANNEL_NAME_ALPHABETICAL, function() {
    return function(a2, b2) {
      return a2.name.localeCompare(b2.name);
    };
  }).with(E.CHRONOLOGICAL, function() {
    return function(a2, b2) {
      return b2.createdAt - a2.createdAt;
    };
  }).otherwise(function() {
    return function(a2, b2) {
      var _a3, _b, _c, _d;
      return ((_b = (_a3 = b2.lastMessage) === null || _a3 === void 0 ? void 0 : _a3.createdAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER) - ((_d = (_c = a2.lastMessage) === null || _c === void 0 ? void 0 : _c.createdAt) !== null && _d !== void 0 ? _d : Number.MIN_SAFE_INTEGER);
    };
  });
  return channels.sort(compareFunc);
};
var getChannelsWithUpsertedChannel = function(_channels, channel, order) {
  var channels = __spreadArray([], _channels, true);
  var findingIndex = channels.findIndex(function(ch) {
    return ch.url === channel.url;
  });
  if (findingIndex !== -1) {
    channels[findingIndex] = channel;
  } else {
    channels.push(channel);
  }
  return sortChannelList(channels, order !== null && order !== void 0 ? order : E.LATEST_LAST_MESSAGE);
};
var StringObjType;
(function(StringObjType2) {
  StringObjType2["normal"] = "normal";
  StringObjType2["mention"] = "mention";
  StringObjType2["url"] = "url";
})(StringObjType || (StringObjType = {}));
var arrayEqual = function(array1, array2) {
  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {
    for (var i2 = 0; i2 < array1.length; i2++) {
      if (array1[i2] !== array2[i2]) {
        return false;
      }
    }
    return true;
  }
  return false;
};
var isSendableMessage = function(message) {
  return Boolean(message) && "sender" in message;
};
var isChannelJustCreated = function(channel) {
  return isSameSecond(channel.createdAt, channel.invitedAt) && !channel.lastMessage;
};
var getHTMLTextDirection = function(direction, forceLeftToRightMessageLayout) {
  return forceLeftToRightMessageLayout ? "ltr" : direction;
};
var DEFAULT_GROUP_CHANNEL_NAME = "Group Channel";
var DEFAULT_AI_CHATBOT_CHANNEL_NAME = "AI Chatbot Widget Channel";
var isDefaultChannelName = function(channel) {
  return !(channel === null || channel === void 0 ? void 0 : channel.name) || channel.name === DEFAULT_GROUP_CHANNEL_NAME || channel.name === DEFAULT_AI_CHATBOT_CHANNEL_NAME;
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/context.js
var import_react15 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/constants/applicationAttributes.js
var applicationAttributes = {
  reactions: "reactions",
  message_search_v3: "message_search_v3",
  enable_og_tag: "enable_og_tag",
  enable_message_threading: "enable_message_threading",
  allow_broadcast_channel: "allow_broadcast_channel",
  allow_super_group_channel: "allow_super_group_channel"
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/constants/premiumFeatures.js
var premiumFeatures = {
  reactions: "reactions",
  moderation_group: "moderation_group",
  message_search_v3: "message_search_v3",
  data_export: "data_export",
  migration: "migration",
  delivery_receipt: "delivery_receipt",
  auto_thumbnail: "auto_thumbnail",
  image_moderation: "image_moderation",
  super_group_channel: "super_group_channel",
  announcement: "announcement",
  moderation_open: "moderation_open",
  desk: "desk",
  bot_interface: "bot_interface",
  auto_trans: "auto_trans"
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/constants/sbuConstants.js
var sbuConstants = {
  collection: {
    groupChannel: {
      defaultLimit: 20,
      defaultOrder: E.LATEST_LAST_MESSAGE,
      defaultIncludeEmpty: false
    },
    message: {
      defaultLimit: { next: 25, prev: 25 },
      searchLimit: { next: 10, prev: 10 }
    }
  }
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/index.js
var import_react9 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useAsyncEffect.js
var import_react4 = __toESM(require_react(), 1);
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var useAsyncEffect = (asyncEffect, deps) => {
  (0, import_react4.useEffect)(createAsyncEffectCallback(asyncEffect), deps);
};
var useAsyncLayoutEffect = (asyncEffect, deps) => {
  (0, import_react4.useLayoutEffect)(createAsyncEffectCallback(asyncEffect), deps);
};
var iife = (callback) => typeof callback === "function" && callback();
var createAsyncEffectCallback = (asyncEffect) => () => {
  const destructor = iife(asyncEffect);
  return () => {
    if (!destructor)
      return;
    if (destructor instanceof Promise) {
      iife(() => __awaiter2(void 0, void 0, void 0, function* () {
        const awaitedDestructor = yield destructor;
        if (typeof awaitedDestructor === "function")
          awaitedDestructor();
      }));
    } else if (typeof destructor === "function") {
      iife(destructor);
    }
  };
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelHandler.js
var import_react6 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useUniqId.js
var import_react5 = __toESM(require_react(), 1);
var id = 0;
function useUniqId() {
  return (0, import_react5.useState)(() => `${id++}`)[0];
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelHandler.js
var useGroupChannelHandler = (sdk, hookHandler, handlerId) => {
  const handlerRef = (0, import_react6.useRef)(hookHandler);
  const id2 = useUniqId();
  const internalHandlerId = handlerId !== null && handlerId !== void 0 ? handlerId : id2;
  handlerRef.current = hookHandler;
  (0, import_react6.useEffect)(() => {
    var _a3;
    const handlerMapper = (handler) => {
      const handlerKeys = Object.keys(handler);
      handlerKeys.forEach((key) => {
        handler[key] = (...args) => {
          var _a4, _b;
          return (_b = (_a4 = handlerRef.current) === null || _a4 === void 0 ? void 0 : _a4[key]) === null || _b === void 0 ? void 0 : _b.call(_a4, ...args);
        };
      });
      return handler;
    };
    (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.addGroupChannelHandler(internalHandlerId, handlerMapper(new Ye2()));
    return () => {
      var _a4;
      (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.removeGroupChannelHandler(internalHandlerId);
    };
  }, [sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel, internalHandlerId]);
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/usePreservedCallback.js
var import_react7 = __toESM(require_react(), 1);
function usePreservedCallback(callback) {
  const callbackRef = (0, import_react7.useRef)(callback);
  callbackRef.current = callback;
  return (0, import_react7.useCallback)((...args) => callbackRef.current(...args), [callbackRef]);
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/reducer.js
var import_react8 = __toESM(require_react(), 1);
var __rest2 = function(s2, e2) {
  var t4 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
      t4[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
      if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
        t4[p2[i2]] = s2[p2[i2]];
    }
  return t4;
};
var defaultReducer = (_a3, action) => {
  var draft = __rest2(_a3, []);
  const compareByOrder = createCompareByOrder(draft.order);
  switch (action.type) {
    case "update_refreshing": {
      draft.refreshing = action.value.status;
      break;
    }
    case "update_initialized": {
      draft.initialized = action.value.status;
      break;
    }
    case "update_channels": {
      getGroupChannels(action.value.channels).forEach((freshChannel) => {
        const idx = draft.groupChannels.findIndex((staleChannel) => staleChannel.url === freshChannel.url);
        if (idx > -1)
          draft.groupChannels[idx] = freshChannel;
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "delete_channels": {
      action.value.channelUrls.forEach((url) => {
        const idx = draft.groupChannels.findIndex((c2) => c2.url === url);
        if (idx > -1)
          draft.groupChannels.splice(idx, 1);
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "append_channels": {
      const groupChannels = getGroupChannels(action.value.channels);
      if (action.value.clearBeforeAction) {
        draft.groupChannels = groupChannels;
      } else {
        draft.groupChannels = mergeObjectArrays(draft.groupChannels, groupChannels, "url");
      }
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "update_order": {
      draft.order = action.value.order;
      const compareByOrder2 = createCompareByOrder(draft.order);
      compareByOrder2 && (draft.groupChannels = draft.groupChannels.sort(compareByOrder2));
      break;
    }
  }
  return draft;
};
var useGroupChannelListReducer = (order) => {
  const [{ initialized, refreshing, groupChannels }, dispatch] = (0, import_react8.useReducer)(defaultReducer, {
    initialized: false,
    refreshing: false,
    groupChannels: [],
    order
  });
  const updateChannels = (channels) => {
    dispatch({ type: "update_channels", value: { channels } });
  };
  const deleteChannels = (channelUrls) => {
    dispatch({ type: "delete_channels", value: { channelUrls } });
  };
  const appendChannels = (channels, clearBeforeAction) => {
    dispatch({ type: "append_channels", value: { channels, clearBeforeAction } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const updateOrder = (order2) => {
    dispatch({ type: "update_order", value: { order: order2 } });
  };
  return {
    updateInitialized,
    updateRefreshing,
    updateChannels,
    deleteChannels,
    appendChannels,
    updateOrder,
    initialized,
    refreshing,
    groupChannels
  };
};
var createCompareByOrder = (order) => {
  if (!order)
    return void 0;
  return (channel1, channel2) => {
    switch (order) {
      case "latest_last_message": {
        if (channel1.lastMessage && channel2.lastMessage) {
          return channel2.lastMessage.createdAt - channel1.lastMessage.createdAt;
        } else if (channel1.lastMessage) {
          return -1;
        } else if (channel2.lastMessage) {
          return 1;
        } else {
          return channel2.createdAt - channel1.createdAt;
        }
      }
      case "chronological": {
        return channel2.createdAt - channel1.createdAt;
      }
      case "channel_name_alphabetical": {
        return channel1.name.localeCompare(channel2.name);
      }
      default: {
        return 0;
      }
    }
  };
};
function mergeObjectArrays(A2, B2, key) {
  const uniqueValues = new Set(A2.map((obj) => obj[key]));
  const newArr = [...A2];
  for (let i2 = 0; i2 < B2.length; i2++) {
    if (!uniqueValues.has(B2[i2][key])) {
      newArr.push(B2[i2]);
      uniqueValues.add(B2[i2][key]);
    }
  }
  return newArr;
}
function getGroupChannels(channels) {
  return channels.filter((it) => it.isGroupChannel());
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/index.js
var __awaiter3 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var createGroupChannelListCollection = (sdk, collectionCreator) => {
  const basicParams = {
    includeEmpty: sbuConstants.collection.groupChannel.defaultIncludeEmpty,
    limit: sbuConstants.collection.groupChannel.defaultLimit,
    order: sbuConstants.collection.groupChannel.defaultOrder
  };
  const passedCollection = collectionCreator === null || collectionCreator === void 0 ? void 0 : collectionCreator(basicParams);
  if (passedCollection)
    return passedCollection;
  return sdk.groupChannel.createGroupChannelCollection(Object.assign(Object.assign({}, basicParams), { filter: new hn(basicParams) }));
};
var useGroupChannelList = (sdk, options) => {
  var _a3, _b, _c;
  const deliveryReceiptEnabled = Boolean((_b = (_a3 = sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.premiumFeatureList) === null || _b === void 0 ? void 0 : _b.includes(premiumFeatures.delivery_receipt));
  const collectionRef = (0, import_react9.useRef)();
  const internalOptions = (0, import_react9.useRef)(options);
  internalOptions.current = options;
  const { initialized, groupChannels, refreshing, appendChannels, deleteChannels, updateRefreshing, updateInitialized } = useGroupChannelListReducer();
  const updateChannelsAndMarkAsDelivered = (shouldMarkAsDelivered, source, updatedChannels) => {
    var _a4, _b2, _c2, _d;
    const channels = (_b2 = (_a4 = collectionRef.current) === null || _a4 === void 0 ? void 0 : _a4.channels) !== null && _b2 !== void 0 ? _b2 : [];
    appendChannels(channels, true);
    if (shouldMarkAsDelivered && deliveryReceiptEnabled) {
      switch (source) {
        case bn.EVENT_MESSAGE_RECEIVED:
        case bn.EVENT_MESSAGE_SENT:
        case bn.SYNC_CHANNEL_BACKGROUND:
        case bn.SYNC_CHANNEL_CHANGELOGS:
        case void 0:
          (_d = (_c2 = internalOptions.current) === null || _c2 === void 0 ? void 0 : _c2.markAsDelivered) === null || _d === void 0 ? void 0 : _d.call(_c2, updatedChannels !== null && updatedChannels !== void 0 ? updatedChannels : channels);
          break;
      }
    }
  };
  const init = usePreservedCallback((uid) => __awaiter3(void 0, void 0, void 0, function* () {
    var _d, _e, _f, _g2;
    if (collectionRef.current)
      (_d = collectionRef.current) === null || _d === void 0 ? void 0 : _d.dispose();
    if (uid) {
      collectionRef.current = createGroupChannelListCollection(sdk, options === null || options === void 0 ? void 0 : options.collectionCreator);
      (_e = collectionRef.current) === null || _e === void 0 ? void 0 : _e.setGroupChannelCollectionHandler({
        onChannelsAdded: (context, channels) => {
          var _a4, _b2;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b2 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsAdded) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, groupChannels2);
        },
        onChannelsUpdated: (context, channels) => {
          var _a4, _b2;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b2 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsUpdated) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, groupChannels2);
        },
        onChannelsDeleted: (_, channelUrls) => {
          var _a4, _b2;
          updateChannelsAndMarkAsDelivered(false);
          (_b2 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsDeleted) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, channelUrls);
        }
      });
      if ((_f = collectionRef.current) === null || _f === void 0 ? void 0 : _f.hasMore) {
        yield (_g2 = collectionRef.current) === null || _g2 === void 0 ? void 0 : _g2.loadMore();
        updateChannelsAndMarkAsDelivered(true);
      }
    }
  }));
  (0, import_react9.useEffect)(() => {
    return () => {
      var _a4;
      if (collectionRef.current)
        (_a4 = collectionRef.current) === null || _a4 === void 0 ? void 0 : _a4.dispose();
    };
  }, []);
  useAsyncEffect(() => __awaiter3(void 0, void 0, void 0, function* () {
    updateInitialized(false);
    if (sdk.currentUser) {
      yield init(sdk.currentUser.userId);
      updateInitialized(true);
    }
  }), [sdk, (_c = sdk.currentUser) === null || _c === void 0 ? void 0 : _c.userId]);
  useGroupChannelHandler(sdk, {
    onUserBanned: (channel, user) => {
      var _a4, _b2, _c2;
      const isMe = user.userId === ((_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
      if (isMe) {
        deleteChannels([channel.url]);
        (_c2 = (_b2 = internalOptions.current) === null || _b2 === void 0 ? void 0 : _b2.onChannelsDeleted) === null || _c2 === void 0 ? void 0 : _c2.call(_b2, [channel.url]);
      } else {
        updateChannelsAndMarkAsDelivered(false);
      }
    }
  });
  const refresh = usePreservedCallback(() => __awaiter3(void 0, void 0, void 0, function* () {
    if (sdk.currentUser) {
      updateRefreshing(true);
      yield init(sdk.currentUser.userId);
      updateRefreshing(false);
    }
  }));
  const loadMore = usePreservedCallback(() => __awaiter3(void 0, void 0, void 0, function* () {
    var _h, _j;
    if ((_h = collectionRef.current) === null || _h === void 0 ? void 0 : _h.hasMore) {
      yield (_j = collectionRef.current) === null || _j === void 0 ? void 0 : _j.loadMore();
      updateChannelsAndMarkAsDelivered(true);
    }
  }));
  return {
    /**
     * Initializing state, only available on first render
     * */
    initialized,
    /**
     * Get group channels state
     * */
    groupChannels,
    /**
     * Refresh, clear and reload messages from latest
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Fetch more channels to state
     * @return {Promise<void>}
     * */
    loadMore
  };
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/index.js
var import_react12 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/channel.js
function isDifferentChannel(a2, b2) {
  if (!a2 || !b2)
    return true;
  return a2.url !== b2.url;
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/message.js
function isSendableMessage2(msg) {
  return msg !== void 0 && msg !== null && "sendingStatus" in msg;
}
function isMyMessage(msg, currentUserId = "##__USER_ID_IS_NOT_PROVIDED__##") {
  var _a3;
  if (!isSendableMessage2(msg))
    return false;
  return ((_a3 = msg.sender) === null || _a3 === void 0 ? void 0 : _a3.userId) === currentUserId;
}
function isNewMessage(msg, currentUserId) {
  const myMessage = isMyMessage(msg, currentUserId);
  if (myMessage)
    return false;
  if (msg.isAdminMessage())
    return false;
  return msg.updatedAt === 0;
}
function getMessageUniqId(msg) {
  if ("sendingStatus" in msg) {
    if (msg.sendingStatus === "succeeded")
      return String(msg.messageId);
    return msg.reqId;
  }
  return String(msg.messageId);
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/validators.js
function isBoolean(val) {
  return typeof val === "boolean";
}
function isOneOf(val, values) {
  return values.includes(val);
}
function isSet(val) {
  return val instanceof Set;
}
function isNotEmptyArray(arr) {
  if (!arr || !Array.isArray(arr))
    return false;
  return arr.length !== 0;
}
function isSameType(a2, b2) {
  return Object.prototype.toString.call(a2) === Object.prototype.toString.call(b2);
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useForceUpdate.js
var import_react10 = __toESM(require_react(), 1);
var useForceUpdate = () => {
  const [, updater] = (0, import_react10.useState)(0);
  return (0, import_react10.useCallback)(() => updater((prev) => prev + 1), []);
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/reducer.js
var import_react11 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/convertors.js
function snakeToCamel(obj) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  if (Array.isArray(obj)) {
    return obj.map((item) => snakeToCamel(item));
  }
  const result = {};
  Object.keys(obj).forEach((key) => {
    const camelKey = key.replace(/_\w/g, (m2) => m2[1].toUpperCase());
    result[camelKey] = snakeToCamel(obj[key]);
  });
  return result;
}
function arrayToMapWithGetter(arr, getSelector) {
  return arr.reduce((accum, curr) => {
    const _key = getSelector(curr);
    accum[_key] = curr;
    return accum;
  }, {});
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/reducer.js
var __rest3 = function(s2, e2) {
  var t4 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
      t4[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
      if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
        t4[p2[i2]] = s2[p2[i2]];
    }
  return t4;
};
var defaultReducer2 = (_a3, action) => {
  var draft = __rest3(_a3, []);
  switch (action.type) {
    case "update_initialized": {
      draft["initialized"] = action.value.status;
      return draft;
    }
    case "update_refreshing": {
      draft["refreshing"] = action.value.status;
      return draft;
    }
    case "update_loading": {
      draft["loading"] = action.value.status;
      return draft;
    }
    case "update_messages": {
      if (action.value.clearBeforeAction) {
        draft["messageMap"] = messagesToObject(action.value.messages);
      } else {
        const draftMessageMap = Object.assign({}, draft["messageMap"]);
        const messagesToDelete = [];
        const messagesToAdd = [];
        action.value.messages.forEach((next) => {
          const requestId = isSendableMessage2(next) ? next.reqId : void 0;
          const messageId = next.messageId || void 0;
          [requestId, messageId].forEach((id2) => {
            if (!id2)
              return;
            const prev = draftMessageMap[id2];
            if (shouldUpdateMessage(prev, next)) {
              prev && messagesToDelete.push(prev);
              messagesToAdd.push(next);
            }
          });
        });
        messagesToDelete.forEach((it) => {
          if (isSendableMessage2(it))
            delete draftMessageMap[it.reqId];
          delete draftMessageMap[it.messageId];
        });
        messagesToAdd.forEach((it) => {
          if (isSendableMessage2(it))
            draftMessageMap[it.reqId] = it;
          draftMessageMap[it.messageId] = it;
        });
        draft["messageMap"] = draftMessageMap;
      }
      return draft;
    }
    case "update_new_messages": {
      const userId = action.value.currentUserId;
      const newMessages = action.value.messages.filter((it) => isNewMessage(it, userId));
      if (action.value.clearBeforeAction) {
        draft["newMessageMap"] = arrayToMapWithGetter(newMessages, getMessageUniqId);
      } else {
        const messageKeys = newMessages.map((it) => it.messageId);
        messageKeys.forEach((key) => delete draft["newMessageMap"][key]);
        draft["newMessageMap"] = Object.assign(Object.assign({}, draft["newMessageMap"]), arrayToMapWithGetter(newMessages, getMessageUniqId));
      }
      return draft;
    }
    case "delete_messages":
    case "delete_new_messages": {
      const key = action.type === "delete_messages" ? "messageMap" : "newMessageMap";
      draft[key] = Object.assign({}, draft[key]);
      action.value.messageIds.forEach((msgId) => {
        const message = draft[key][msgId];
        if (message) {
          if (isSendableMessage2(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      action.value.reqIds.forEach((reqId) => {
        const message = draft[key][reqId];
        if (message) {
          if (isSendableMessage2(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      return draft;
    }
  }
};
var messagesToObject = (messages) => {
  return messages.reduce((accum, curr) => {
    if (isSendableMessage2(curr)) {
      accum[curr.reqId] = curr;
      if (curr.sendingStatus === Z.SUCCEEDED) {
        accum[curr.messageId] = curr;
      }
    } else {
      accum[curr.messageId] = curr;
    }
    return accum;
  }, {});
};
var shouldUpdateMessage = (prev, next) => {
  if (!isSendableMessage2(prev) || !isSendableMessage2(next))
    return true;
  if (prev.sendingStatus === Z.SUCCEEDED)
    return next.sendingStatus === Z.SUCCEEDED;
  return prev.sendingStatus !== next.sendingStatus;
};
var useChannelMessagesReducer = (sortComparator = defaultMessageComparator) => {
  const [{ initialized, loading, refreshing, messageMap, newMessageMap }, dispatch] = (0, import_react11.useReducer)(defaultReducer2, {
    initialized: false,
    loading: true,
    refreshing: false,
    messageMap: {},
    newMessageMap: {}
  });
  const updateMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_messages", value: { messageIds, reqIds } });
  };
  const updateNewMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_new_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteNewMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_new_messages", value: { messageIds, reqIds } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateLoading = (status) => {
    dispatch({ type: "update_loading", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const newMessages = Object.values(newMessageMap);
  const messages = (0, import_react11.useMemo)(() => Array.from(new Set(Object.values(messageMap))).sort(sortComparator), [messageMap]);
  return {
    updateInitialized,
    updateLoading,
    updateRefreshing,
    updateMessages,
    deleteMessages,
    initialized,
    loading,
    refreshing,
    messages,
    newMessages,
    updateNewMessages,
    deleteNewMessages
  };
};
var LARGE_OFFSET = Math.floor(Number.MAX_SAFE_INTEGER / 10);
function defaultMessageComparator(a2, b2) {
  let aStatusOffset = 0;
  let bStatusOffset = 0;
  if (isSendableMessage2(a2) && a2.sendingStatus !== "succeeded")
    aStatusOffset = LARGE_OFFSET;
  if (isSendableMessage2(b2) && b2.sendingStatus !== "succeeded")
    bStatusOffset = LARGE_OFFSET;
  return a2.createdAt + aStatusOffset - (b2.createdAt + bStatusOffset);
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/index.js
var __awaiter4 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var createMessageCollection = (channel, limit, options) => {
  var _a3;
  const basicParams = {
    prevResultLimit: limit.prev,
    nextResultLimit: limit.next,
    startingPoint: options === null || options === void 0 ? void 0 : options.startingPoint,
    replyType: options === null || options === void 0 ? void 0 : options.replyType
  };
  const passedCollection = (_a3 = options === null || options === void 0 ? void 0 : options.collectionCreator) === null || _a3 === void 0 ? void 0 : _a3.call(options, basicParams);
  if (passedCollection)
    return passedCollection;
  return channel.createMessageCollection(Object.assign(Object.assign({}, basicParams), { filter: new qs(basicParams) }));
};
function getCollectionLimitBy(startingPoint) {
  return startingPoint < Date.now() ? sbuConstants.collection.message.searchLimit : sbuConstants.collection.message.defaultLimit;
}
var useGroupChannelMessages = (sdk, channel, options = {}) => {
  var _a3, _b, _c;
  const internalOptions = (0, import_react12.useRef)(options);
  internalOptions.current = options;
  const channelRef = (0, import_react12.useRef)(channel);
  channelRef.current = channel;
  const logger = internalOptions.current.logger;
  const initialStartingPoint = (_a3 = internalOptions.current.startingPoint) !== null && _a3 !== void 0 ? _a3 : Number.MAX_SAFE_INTEGER;
  const initialLimit = getCollectionLimitBy(initialStartingPoint);
  const isFetching = (0, import_react12.useRef)({ prev: false, next: false });
  const forceUpdate = useForceUpdate();
  const collectionRef = (0, import_react12.useRef)({
    initialized: false,
    apiInitialized: false,
    instance: null
  });
  const { initialized, loading, refreshing, messages, newMessages, updateMessages, updateNewMessages, deleteNewMessages, deleteMessages, updateInitialized, updateLoading, updateRefreshing } = useChannelMessagesReducer(options === null || options === void 0 ? void 0 : options.sortComparator);
  const markAsReadBySource = usePreservedCallback((source) => {
    var _a4, _b2, _c2, _d;
    if (!channelRef.current || !channelRef.current.url)
      return (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
    try {
      switch (source) {
        case no.EVENT_MESSAGE_RECEIVED:
        case no.EVENT_MESSAGE_SENT_SUCCESS:
        case no.SYNC_MESSAGE_FILL:
        case void 0:
          (_c2 = (_b2 = internalOptions.current).markAsRead) === null || _c2 === void 0 ? void 0 : _c2.call(_b2, [channelRef.current]);
          break;
      }
    } catch (e2) {
      (_d = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _d === void 0 ? void 0 : _d.call(logger, "[useGroupChannelMessages/markAsReadBySource]", e2);
    }
  });
  const updateNewMessagesReceived = usePreservedCallback((source, messages2) => {
    var _a4, _b2, _c2, _d, _e;
    const incomingMessages = messages2.filter((it) => {
      var _a5;
      return !isMyMessage(it, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
    });
    if (incomingMessages.length > 0) {
      switch (source) {
        case no.EVENT_MESSAGE_RECEIVED:
        case no.SYNC_MESSAGE_FILL: {
          if ((_b2 = (_a4 = internalOptions.current).shouldCountNewMessages) === null || _b2 === void 0 ? void 0 : _b2.call(_a4)) {
            updateNewMessages(incomingMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          }
          (_e = (_d = internalOptions.current).onMessagesReceived) === null || _e === void 0 ? void 0 : _e.call(_d, incomingMessages);
          break;
        }
      }
    }
  });
  const init = usePreservedCallback((startingPoint, limit) => __awaiter4(void 0, void 0, void 0, function* () {
    return new Promise((resolve) => {
      var _a4, _b2;
      if (!channelRef.current || !channelRef.current.url)
        return (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
      markAsReadBySource();
      updateNewMessages([], true, (_b2 = sdk.currentUser) === null || _b2 === void 0 ? void 0 : _b2.userId);
      const updateUnsentMessages = () => {
        var _a5, _b3, _c2;
        const { pendingMessages, failedMessages } = (_a5 = collectionRef.current.instance) !== null && _a5 !== void 0 ? _a5 : {};
        if (isNotEmptyArray(pendingMessages))
          updateMessages(pendingMessages, false, (_b3 = sdk.currentUser) === null || _b3 === void 0 ? void 0 : _b3.userId);
        if (isNotEmptyArray(failedMessages))
          updateMessages(failedMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
      };
      const collectionInstance = createMessageCollection(channelRef.current, limit, Object.assign(Object.assign({}, internalOptions.current), { startingPoint }));
      collectionRef.current = { apiInitialized: false, initialized: false, instance: collectionInstance };
      collectionInstance.setMessageCollectionHandler({
        onMessagesAdded: (ctx, __, messages2) => {
          var _a5;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        },
        onMessagesUpdated: (ctx, __, messages2) => {
          var _a5, _b3, _c2;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
          if (ctx.source === no.EVENT_MESSAGE_UPDATED) {
            (_c2 = (_b3 = internalOptions.current).onMessagesUpdated) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, messages2);
          }
        },
        onMessagesDeleted: (_, __, ___, messages2) => {
          const msgIds = messages2.map((it) => it.messageId);
          const reqIds = messages2.filter(isSendableMessage2).map((it) => it.reqId);
          deleteMessages(msgIds, reqIds);
          deleteNewMessages(msgIds, reqIds);
        },
        onChannelDeleted: (_, channelUrl) => {
          var _a5, _b3;
          (_b3 = (_a5 = internalOptions.current).onChannelDeleted) === null || _b3 === void 0 ? void 0 : _b3.call(_a5, channelUrl);
        },
        onChannelUpdated: (_, channel2) => {
          var _a5, _b3;
          forceUpdate();
          (_b3 = (_a5 = internalOptions.current).onChannelUpdated) === null || _b3 === void 0 ? void 0 : _b3.call(_a5, channel2);
        },
        onHugeGapDetected: () => {
          init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
        }
      });
      collectionInstance.initialize(ms.CACHE_AND_REPLACE_BY_API).onCacheResult((err, messages2) => {
        var _a5, _b3, _c2;
        if (err)
          sdk.isCacheEnabled && ((_a5 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "[useGroupChannelMessages/onCacheResult]", err));
        else if (messages2) {
          (_b3 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "[useGroupChannelMessages/onCacheResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          updateUnsentMessages();
          if (messages2.length > 0) {
            collectionRef.current.initialized = true;
            resolve();
          }
        }
      }).onApiResult((err, messages2) => {
        var _a5, _b3, _c2, _d, _e;
        if (err)
          (_a5 = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "[useGroupChannelMessages/onApiResult]", err);
        else if (messages2) {
          (_b3 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "[useGroupChannelMessages/onApiResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          if (!internalOptions.current.startingPoint)
            (_e = (_d = internalOptions.current).onMessagesReceived) === null || _e === void 0 ? void 0 : _e.call(_d, messages2);
          if (sdk.isCacheEnabled)
            updateUnsentMessages();
        }
        collectionRef.current.initialized = true;
        collectionRef.current.apiInitialized = true;
        resolve();
      });
    });
  }));
  useGroupChannelHandler(sdk, {
    onUserBanned(eventChannel, bannedUser) {
      var _a4, _b2, _c2;
      if (eventChannel.isGroupChannel() && !isDifferentChannel(eventChannel, channelRef.current)) {
        if (bannedUser.userId === ((_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId)) {
          (_c2 = (_b2 = internalOptions.current).onCurrentUserBanned) === null || _c2 === void 0 ? void 0 : _c2.call(_b2);
        } else {
          forceUpdate();
        }
      }
    }
  });
  (0, import_react12.useLayoutEffect)(() => {
    const timeout = setTimeout(() => __awaiter4(void 0, void 0, void 0, function* () {
      if (sdk.currentUser && channelRef.current) {
        updateInitialized(false);
        updateLoading(true);
        yield init(initialStartingPoint, initialLimit);
        updateLoading(false);
        updateInitialized(true);
      }
    }));
    return () => clearTimeout(timeout);
  }, [sdk, (_b = sdk.currentUser) === null || _b === void 0 ? void 0 : _b.userId, (_c = channelRef.current) === null || _c === void 0 ? void 0 : _c.url, internalOptions.current.replyType]);
  (0, import_react12.useEffect)(() => {
    return () => {
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
    };
  }, []);
  const refresh = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    if (sdk.currentUser && channelRef.current) {
      updateRefreshing(true);
      yield init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
      updateRefreshing(false);
    }
  }));
  const loadPrevious = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    var _d;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasPrevious) && !isFetching.current.prev) {
      try {
        isFetching.current.prev = true;
        const list = yield collection.loadPrevious();
        updateMessages(list, false, (_d = sdk.currentUser) === null || _d === void 0 ? void 0 : _d.userId);
      } catch (_e) {
      } finally {
        isFetching.current.prev = false;
      }
    }
  }));
  const hasPrevious = usePreservedCallback(() => {
    const { initialized: initialized2, instance } = collectionRef.current;
    if (initialized2 && instance) {
      return instance.hasPrevious;
    } else {
      return false;
    }
  });
  const loadNext = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    var _f;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasNext) && !isFetching.current.next) {
      try {
        isFetching.current.next = true;
        const list = yield collection.loadNext();
        updateMessages(list, false, (_f = sdk.currentUser) === null || _f === void 0 ? void 0 : _f.userId);
      } catch (_g2) {
      } finally {
        isFetching.current.next = false;
      }
    }
  }));
  const hasNext = usePreservedCallback(() => {
    const { initialized: initialized2, apiInitialized, instance } = collectionRef.current;
    if (apiInitialized && initialized2 && instance) {
      return instance.hasNext;
    } else {
      return false;
    }
  });
  const sendUserMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendUserMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendFileMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessages = usePreservedCallback((paramsList, onPending) => __awaiter4(void 0, void 0, void 0, function* () {
    var _h;
    if (!channelRef.current || !channelRef.current.url) {
      (_h = logger === null || logger === void 0 ? void 0 : logger.error) === null || _h === void 0 ? void 0 : _h.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve) => {
      const messages2 = [];
      channelRef.current.sendFileMessages(paramsList).onPending((pendingMessage) => {
        var _a4;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a4;
        if (sentMessage.isFileMessage() && sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
          messages2.push(sentMessage);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      }).onFailed((_, failedMessage) => {
        var _a4;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
          messages2.push(failedMessage);
        } else {
          messages2.push(null);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      });
    });
  }));
  const sendMultipleFilesMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendMultipleFilesMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onFileUploaded(() => {
        forceUpdate();
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const updateUserMessage = usePreservedCallback((messageId, params) => __awaiter4(void 0, void 0, void 0, function* () {
    var _j, _k;
    if (!channelRef.current || !channelRef.current.url) {
      (_j = logger === null || logger === void 0 ? void 0 : logger.error) === null || _j === void 0 ? void 0 : _j.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateUserMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_k = sdk.currentUser) === null || _k === void 0 ? void 0 : _k.userId);
    }
    return updatedMessage;
  }));
  const updateFileMessage = usePreservedCallback((messageId, params) => __awaiter4(void 0, void 0, void 0, function* () {
    var _l, _m;
    if (!channelRef.current || !channelRef.current.url) {
      (_l = logger === null || logger === void 0 ? void 0 : logger.error) === null || _l === void 0 ? void 0 : _l.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateFileMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_m = sdk.currentUser) === null || _m === void 0 ? void 0 : _m.userId);
    }
    return updatedMessage;
  }));
  const resendMessage = usePreservedCallback((failedMessage) => __awaiter4(void 0, void 0, void 0, function* () {
    var _o;
    if (!channelRef.current || !channelRef.current.url) {
      (_o = logger === null || logger === void 0 ? void 0 : logger.error) === null || _o === void 0 ? void 0 : _o.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      let handler = void 0;
      if (failedMessage.isUserMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isFileMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isMultipleFilesMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (handler) {
        if ("onPending" in handler) {
          handler.onPending((message) => {
            var _a4;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
          });
        }
        if ("onFileUploaded" in handler) {
          handler.onFileUploaded(() => {
            forceUpdate();
          });
        }
        if ("onSucceeded" in handler) {
          handler.onSucceeded((message) => {
            var _a4;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
            resolve(message);
          });
        }
        if ("onFailed" in handler) {
          handler.onFailed((err, message) => {
            var _a4;
            if (message && message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
            reject(err);
          });
        }
      }
    });
  }));
  const deleteMessage = usePreservedCallback((message) => __awaiter4(void 0, void 0, void 0, function* () {
    var _p, _q;
    if (!channelRef.current || !channelRef.current.url) {
      (_p = logger === null || logger === void 0 ? void 0 : logger.error) === null || _p === void 0 ? void 0 : _p.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    if (message.sendingStatus === "succeeded") {
      if (message.isUserMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isFileMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isMultipleFilesMessage())
        yield channelRef.current.deleteMessage(message);
    } else {
      try {
        yield (_q = collectionRef.current.instance) === null || _q === void 0 ? void 0 : _q.removeFailedMessage(message.reqId);
      } finally {
        deleteMessages([message.messageId], [message.reqId]);
      }
    }
  }));
  const resetNewMessages = usePreservedCallback(() => {
    var _a4;
    updateNewMessages([], true, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
  });
  const resetWithStartingPoint = usePreservedCallback((startingPoint) => __awaiter4(void 0, void 0, void 0, function* () {
    var _r;
    if (sdk.currentUser && channelRef.current) {
      const limit = getCollectionLimitBy(startingPoint);
      updateLoading(true);
      updateMessages([], true, (_r = sdk.currentUser) === null || _r === void 0 ? void 0 : _r.userId);
      yield init(startingPoint, limit);
      updateLoading(false);
    }
  }));
  return {
    /**
     * Initialized state, only available on first render
     * */
    initialized,
    /**
     * Loading state, status is changes on first mount or when the resetWithStartingPoint is called.
     * */
    loading,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Get messages, this state is for render
     * For example, if a user receives a new messages while searching for an old message
     * for this case, new messages will be included here.
     * */
    messages,
    /**
     * If the `shouldCountNewMessages()` is true, only then push in the newMessages state.
     * (Return false for the `shouldCountNewMessages()` if the message scroll is the most recent; otherwise, return true.)
     *
     * A new message means a message that meets the below conditions
     * - Not admin message
     * - Not updated message
     * - Not current user's message
     * */
    newMessages,
    /**
     * Reset new message list
     * @return {void}
     * */
    resetNewMessages,
    /**
     * Reset message list and create a new collection for latest messages
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Load previous messages to state
     * @return {Promise<void>}
     * */
    loadPrevious,
    /**
     * Check if there are more previous messages to fetch
     * @return {boolean}
     * */
    hasPrevious,
    /**
     * Load next messages to state
     * @return {Promise<void>}
     * */
    loadNext,
    /**
     * Check if there are more next messages to fetch
     * @return {boolean}
     * */
    hasNext,
    /**
     * Send user message
     * @param {UserMessageCreateParams} params user message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<UserMessage>} succeeded message
     * */
    sendUserMessage,
    /**
     * Send file message
     * @param {FileMessageCreateParams} params file message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<FileMessage>} succeeded message
     * */
    sendFileMessage,
    /**
     * Send file messages
     * @param {FileMessageCreateParams[]} paramList file message create params
     * @param {function} [onPending] pending message callback for each message request
     * @return {Promise<FileMessage[]>} succeeded or failed message
     * */
    sendFileMessages,
    /**
     * Send multiple files message
     * @param {MultipleFilesMessageCreateParams} params multiple files message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<MultipleFilesMessage>} succeeded message
     * */
    sendMultipleFilesMessage,
    /**
     * Update user message
     * @param {number} messageId
     * @param {UserMessageUpdateParams} params user message update params
     * @return {Promise<UserMessage>}
     * */
    updateUserMessage,
    /**
     * Update file message
     * @param {number} messageId
     * @param {FileMessageUpdateParams} params file message update params
     * @return {Promise<FileMessage>}
     * */
    updateFileMessage,
    /**
     * Resend failed message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} failedMessage message to resend
     * @return {Promise<T>}
     * */
    resendMessage,
    /**
     * Delete a message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} message succeeded or failed message
     * @return {Promise<void>}
     * */
    deleteMessage,
    /**
     * Reset message list and create a new collection with starting point
     * @param {number} startingPoint
     * @param {function} callback
     * @return {void}
     * */
    resetWithStartingPoint,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_updateMessages: updateMessages,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_deleteMessages: deleteMessages
  };
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelThreadMessages/index.js
var import_react14 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelThreadMessages/reducer.js
var import_react13 = __toESM(require_react(), 1);
var LARGE_OFFSET2 = Math.floor(Number.MAX_SAFE_INTEGER / 10);

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/useIIFE.js
var useIIFE = (callback) => {
  return iife2(callback);
};
var iife2 = (callback) => typeof callback === "function" && callback();

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/mergeObject.js
function mergeObject(target, subset) {
  const object = Object.assign({}, target);
  Object.keys(subset).forEach((key) => {
    if (Object.prototype.hasOwnProperty.call(object, key) && isSameType(object[key], subset[key])) {
      if (typeof subset[key] === "object" && !Array.isArray(subset[key])) {
        object[key] = mergeObject(object[key], subset[key]);
      } else {
        object[key] = subset[key];
      }
    }
  });
  return object;
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/initialConfig.js
var createInitialConfig = () => ({
  common: {
    enableUsingDefaultUserProfile: false
  },
  groupChannel: {
    channel: {
      enableMention: false,
      enableOgtag: true,
      enableReactions: true,
      enableReactionsSupergroup: false,
      enableTypingIndicator: true,
      enableVoiceMessage: false,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      },
      replyType: "quote_reply",
      threadReplySelectType: "thread",
      typingIndicatorTypes: /* @__PURE__ */ new Set(["text"]),
      enableFeedback: false,
      enableSuggestedReplies: false,
      showSuggestedRepliesFor: "last_message_only",
      suggestedRepliesDirection: "vertical",
      enableMarkdownForUserMessage: false,
      enableFormTypeMessage: false
    },
    channelList: {
      enableMessageReceiptStatus: false,
      enableTypingIndicator: false
    },
    setting: {
      enableMessageSearch: false
    }
  },
  openChannel: {
    channel: {
      enableOgtag: true,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      }
    }
  }
});
function deleteLocalConfigs(config2) {
  delete config2.groupChannel.channel.typingIndicatorTypes;
  delete config2.groupChannel.channel.enableFeedback;
  delete config2.groupChannel.channel.enableSuggestedReplies;
  delete config2.groupChannel.channel.showSuggestedRepliesFor;
  delete config2.groupChannel.channel.suggestedRepliesDirection;
  delete config2.groupChannel.channel.enableMarkdownForUserMessage;
  delete config2.groupChannel.channel.enableFormTypeMessage;
  return config2;
}
var createInitialRemoteConfig = () => {
  const config2 = createInitialConfig();
  return deleteLocalConfigs(config2);
};
var initialConfig = createInitialConfig();
var initialRemoteConfig = createInitialRemoteConfig();

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/configManager.js
var __awaiter5 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var MemoryStorage = {
  items: {},
  getItem(key) {
    var _a3;
    return __awaiter5(this, void 0, void 0, function* () {
      return (_a3 = MemoryStorage.items[key]) !== null && _a3 !== void 0 ? _a3 : null;
    });
  },
  setItem(key, value) {
    return __awaiter5(this, void 0, void 0, function* () {
      MemoryStorage.items[key] = value;
    });
  }
};
var UIKitConfigManager = class {
  constructor(storage) {
    this.storage = storage !== null && storage !== void 0 ? storage : MemoryStorage;
  }
  init(appId) {
    this.key = `sbu@${appId}.uikitConfiguration`;
    return this.get();
  }
  get safeKey() {
    if (!this.key)
      throw new Error("Please UIKitConfigManager.init() first");
    return this.key;
  }
  update(remoteConfigPayload) {
    return __awaiter5(this, void 0, void 0, function* () {
      const storedConfigPayload = yield this.get();
      const mergedConfigPayload = {
        updatedAt: remoteConfigPayload.updatedAt,
        configuration: mergeObject(storedConfigPayload.configuration, remoteConfigPayload.configuration)
      };
      yield this.storage.setItem(this.safeKey, JSON.stringify(mergedConfigPayload));
      return mergedConfigPayload;
    });
  }
  get() {
    return __awaiter5(this, void 0, void 0, function* () {
      const initialPayload = {
        updatedAt: 0,
        configuration: initialRemoteConfig
      };
      try {
        const storedConfig = yield this.storage.getItem(this.safeKey);
        if (storedConfig) {
          return JSON.parse(storedConfig);
        } else {
          return initialPayload;
        }
      } catch (_a3) {
        return initialPayload;
      }
    });
  }
};

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateCommonConfigs.js
function updateCommonConfigs(target, local, remote) {
  var _a3, _b;
  if (remote.common && isBoolean((_a3 = remote.common) === null || _a3 === void 0 ? void 0 : _a3.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = remote.common.enableUsingDefaultUserProfile;
  }
  if (local.common && isBoolean((_b = local.common) === null || _b === void 0 ? void 0 : _b.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = local.common.enableUsingDefaultUserProfile;
  }
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateGroupChannelConfigs.js
function updateGroupChannelConfigs(target, local, remote) {
  updateChannelConfig(target, local, remote);
  updateChannelInputConfig(target, local, remote);
  updateChannelListConfig(target, local, remote);
  updateChannelSettingConfig(target, local, remote);
}
function updateChannelConfig(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) && isBoolean((_c = (_b = remote.groupChannel) === null || _b === void 0 ? void 0 : _b.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.groupChannel.channel.enableOgtag;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e = local.groupChannel) === null || _e === void 0 ? void 0 : _e.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channel) === null || _l === void 0 ? void 0 : _l.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_o = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channel) === null || _o === void 0 ? void 0 : _o.enableTypingIndicator;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) && isBoolean((_r = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channel) === null || _r === void 0 ? void 0 : _r.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_t = (_s = local.groupChannel) === null || _s === void 0 ? void 0 : _s.channel) === null || _t === void 0 ? void 0 : _t.enableTypingIndicator;
  }
  if (((_u = remote.groupChannel) === null || _u === void 0 ? void 0 : _u.channel) && isBoolean((_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.enableReactions)) {
    target.channel.enableReactions = (_y = (_x = remote.groupChannel) === null || _x === void 0 ? void 0 : _x.channel) === null || _y === void 0 ? void 0 : _y.enableReactions;
  }
  if (((_z = local.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) && isBoolean((_1 = (_0 = local.groupChannel) === null || _0 === void 0 ? void 0 : _0.channel) === null || _1 === void 0 ? void 0 : _1.enableReactions)) {
    target.channel.enableReactions = (_3 = (_2 = local.groupChannel) === null || _2 === void 0 ? void 0 : _2.channel) === null || _3 === void 0 ? void 0 : _3.enableReactions;
  }
  if (((_4 = remote.groupChannel) === null || _4 === void 0 ? void 0 : _4.channel) && isBoolean((_6 = (_5 = remote.groupChannel) === null || _5 === void 0 ? void 0 : _5.channel) === null || _6 === void 0 ? void 0 : _6.enableReactionsSupergroup)) {
    target.channel.enableReactionsSupergroup = (_8 = (_7 = remote.groupChannel) === null || _7 === void 0 ? void 0 : _7.channel) === null || _8 === void 0 ? void 0 : _8.enableReactionsSupergroup;
  }
  if (((_9 = local.groupChannel) === null || _9 === void 0 ? void 0 : _9.channel) && isBoolean((_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.enableReactionsSupergroup)) {
    console.warn("Currently, EnableReactionsSupergroup feature is turned off by default. If you wish to use this feature, contact us: https://dashboard.sendbird.com/settings/contact_us?category=feedback_and_feature_requests&product=UIKit");
  }
  if (((_12 = remote.groupChannel) === null || _12 === void 0 ? void 0 : _12.channel) && isBoolean((_14 = (_13 = remote.groupChannel) === null || _13 === void 0 ? void 0 : _13.channel) === null || _14 === void 0 ? void 0 : _14.enableMention)) {
    target.channel.enableMention = (_16 = (_15 = remote.groupChannel) === null || _15 === void 0 ? void 0 : _15.channel) === null || _16 === void 0 ? void 0 : _16.enableMention;
  }
  if (((_17 = local.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) && isBoolean((_19 = (_18 = local.groupChannel) === null || _18 === void 0 ? void 0 : _18.channel) === null || _19 === void 0 ? void 0 : _19.enableMention)) {
    target.channel.enableMention = (_21 = (_20 = local.groupChannel) === null || _20 === void 0 ? void 0 : _20.channel) === null || _21 === void 0 ? void 0 : _21.enableMention;
  }
  if (((_22 = remote.groupChannel) === null || _22 === void 0 ? void 0 : _22.channel) && isOneOf((_24 = (_23 = remote.groupChannel) === null || _23 === void 0 ? void 0 : _23.channel) === null || _24 === void 0 ? void 0 : _24.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_26 = (_25 = remote.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.replyType;
  }
  if (((_27 = local.groupChannel) === null || _27 === void 0 ? void 0 : _27.channel) && isOneOf((_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_31 = (_30 = local.groupChannel) === null || _30 === void 0 ? void 0 : _30.channel) === null || _31 === void 0 ? void 0 : _31.replyType;
  }
  if (((_32 = remote.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) && isOneOf((_34 = (_33 = remote.groupChannel) === null || _33 === void 0 ? void 0 : _33.channel) === null || _34 === void 0 ? void 0 : _34.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_36 = (_35 = remote.groupChannel) === null || _35 === void 0 ? void 0 : _35.channel) === null || _36 === void 0 ? void 0 : _36.threadReplySelectType;
  }
  if (((_37 = local.groupChannel) === null || _37 === void 0 ? void 0 : _37.channel) && isOneOf((_39 = (_38 = local.groupChannel) === null || _38 === void 0 ? void 0 : _38.channel) === null || _39 === void 0 ? void 0 : _39.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_41 = (_40 = local.groupChannel) === null || _40 === void 0 ? void 0 : _40.channel) === null || _41 === void 0 ? void 0 : _41.threadReplySelectType;
  }
  if (((_42 = remote.groupChannel) === null || _42 === void 0 ? void 0 : _42.channel) && isBoolean((_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_46 = (_45 = remote.groupChannel) === null || _45 === void 0 ? void 0 : _45.channel) === null || _46 === void 0 ? void 0 : _46.enableVoiceMessage;
  }
  if (((_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) && isBoolean((_49 = (_48 = local.groupChannel) === null || _48 === void 0 ? void 0 : _48.channel) === null || _49 === void 0 ? void 0 : _49.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.enableVoiceMessage;
  }
  if (((_52 = local.groupChannel) === null || _52 === void 0 ? void 0 : _52.channel) && isSet((_54 = (_53 = local.groupChannel) === null || _53 === void 0 ? void 0 : _53.channel) === null || _54 === void 0 ? void 0 : _54.typingIndicatorTypes)) {
    target.channel.typingIndicatorTypes = (_56 = (_55 = local.groupChannel) === null || _55 === void 0 ? void 0 : _55.channel) === null || _56 === void 0 ? void 0 : _56.typingIndicatorTypes;
  }
  if (((_57 = local.groupChannel) === null || _57 === void 0 ? void 0 : _57.channel) && isBoolean((_59 = (_58 = local.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.enableFeedback)) {
    target.channel.enableFeedback = (_61 = (_60 = local.groupChannel) === null || _60 === void 0 ? void 0 : _60.channel) === null || _61 === void 0 ? void 0 : _61.enableFeedback;
  }
  if (((_62 = local.groupChannel) === null || _62 === void 0 ? void 0 : _62.channel) && isBoolean((_64 = (_63 = local.groupChannel) === null || _63 === void 0 ? void 0 : _63.channel) === null || _64 === void 0 ? void 0 : _64.enableSuggestedReplies)) {
    target.channel.enableSuggestedReplies = (_66 = (_65 = local.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.enableSuggestedReplies;
  }
  if (((_67 = local.groupChannel) === null || _67 === void 0 ? void 0 : _67.channel) && isOneOf((_69 = (_68 = local.groupChannel) === null || _68 === void 0 ? void 0 : _68.channel) === null || _69 === void 0 ? void 0 : _69.showSuggestedRepliesFor, ["all_messages", "last_message_only"])) {
    target.channel.showSuggestedRepliesFor = (_71 = (_70 = local.groupChannel) === null || _70 === void 0 ? void 0 : _70.channel) === null || _71 === void 0 ? void 0 : _71.showSuggestedRepliesFor;
  }
  if (((_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) && isOneOf((_74 = (_73 = local.groupChannel) === null || _73 === void 0 ? void 0 : _73.channel) === null || _74 === void 0 ? void 0 : _74.suggestedRepliesDirection, ["vertical", "horizontal"])) {
    target.channel.suggestedRepliesDirection = (_76 = (_75 = local.groupChannel) === null || _75 === void 0 ? void 0 : _75.channel) === null || _76 === void 0 ? void 0 : _76.suggestedRepliesDirection;
  }
  if (((_77 = local.groupChannel) === null || _77 === void 0 ? void 0 : _77.channel) && isBoolean((_79 = (_78 = local.groupChannel) === null || _78 === void 0 ? void 0 : _78.channel) === null || _79 === void 0 ? void 0 : _79.enableMarkdownForUserMessage)) {
    target.channel.enableMarkdownForUserMessage = (_81 = (_80 = local.groupChannel) === null || _80 === void 0 ? void 0 : _80.channel) === null || _81 === void 0 ? void 0 : _81.enableMarkdownForUserMessage;
  }
  if (((_82 = local.groupChannel) === null || _82 === void 0 ? void 0 : _82.channel) && isBoolean((_84 = (_83 = local.groupChannel) === null || _83 === void 0 ? void 0 : _83.channel) === null || _84 === void 0 ? void 0 : _84.enableFormTypeMessage)) {
    target.channel.enableFormTypeMessage = (_86 = (_85 = local.groupChannel) === null || _85 === void 0 ? void 0 : _85.channel) === null || _86 === void 0 ? void 0 : _86.enableFormTypeMessage;
  }
}
function updateChannelInputConfig(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b = (_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) === null || _b === void 0 ? void 0 : _b.input) && isBoolean((_e = (_d = (_c = remote.groupChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e === void 0 ? void 0 : _e.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.groupChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o = (_m = (_l = local.groupChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o === void 0 ? void 0 : _o.enableDocument)) {
    target.channel.input.enableDocument = (_r = (_q = (_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r === void 0 ? void 0 : _r.enableDocument;
  }
  if (((_u = (_t = (_s = remote.groupChannel) === null || _s === void 0 ? void 0 : _s.channel) === null || _t === void 0 ? void 0 : _t.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.groupChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.groupChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.groupChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.groupChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.groupChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.groupChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.groupChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.groupChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.groupChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.groupChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}
function updateChannelListConfig(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channelList) && isBoolean((_c = (_b = remote.groupChannel) === null || _b === void 0 ? void 0 : _b.channelList) === null || _c === void 0 ? void 0 : _c.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = remote.groupChannel.channelList.enableTypingIndicator;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channelList) && isBoolean((_f = (_e = local.groupChannel) === null || _e === void 0 ? void 0 : _e.channelList) === null || _f === void 0 ? void 0 : _f.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channelList) === null || _h === void 0 ? void 0 : _h.enableTypingIndicator;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channelList) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channelList) === null || _l === void 0 ? void 0 : _l.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_o = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channelList) === null || _o === void 0 ? void 0 : _o.enableMessageReceiptStatus;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channelList) && isBoolean((_r = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channelList) === null || _r === void 0 ? void 0 : _r.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_t = (_s = local.groupChannel) === null || _s === void 0 ? void 0 : _s.channelList) === null || _t === void 0 ? void 0 : _t.enableMessageReceiptStatus;
  }
}
function updateChannelSettingConfig(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.setting) && isBoolean((_c = (_b = remote.groupChannel) === null || _b === void 0 ? void 0 : _b.setting) === null || _c === void 0 ? void 0 : _c.enableMessageSearch)) {
    target.setting.enableMessageSearch = remote.groupChannel.setting.enableMessageSearch;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.setting) && isBoolean((_f = (_e = local.groupChannel) === null || _e === void 0 ? void 0 : _e.setting) === null || _f === void 0 ? void 0 : _f.enableMessageSearch)) {
    target.setting.enableMessageSearch = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.setting) === null || _h === void 0 ? void 0 : _h.enableMessageSearch;
  }
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateOpenChannelConfigs.js
function updateOpenChannelConfigs(target, local, remote) {
  updateChannelConfig2(target, local, remote);
  updateChannelInputConfig2(target, local, remote);
}
function updateChannelConfig2(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h;
  if (((_a3 = remote.openChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) && isBoolean((_c = (_b = remote.openChannel) === null || _b === void 0 ? void 0 : _b.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.openChannel.channel.enableOgtag;
  }
  if (((_d = local.openChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e = local.openChannel) === null || _e === void 0 ? void 0 : _e.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.openChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
}
function updateChannelInputConfig2(target, local, remote) {
  var _a3, _b, _c, _d, _e, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b = (_a3 = remote.openChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) === null || _b === void 0 ? void 0 : _b.input) && isBoolean((_e = (_d = (_c = remote.openChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e === void 0 ? void 0 : _e.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.openChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.openChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o = (_m = (_l = local.openChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o === void 0 ? void 0 : _o.enableDocument)) {
    target.channel.input.enableDocument = (_r = (_q = (_p = local.openChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r === void 0 ? void 0 : _r.enableDocument;
  }
  if (((_u = (_t = (_s = remote.openChannel) === null || _s === void 0 ? void 0 : _s.channel) === null || _t === void 0 ? void 0 : _t.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.openChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.openChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.openChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.openChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.openChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.openChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.openChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.openChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.openChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.openChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.openChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.openChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.openChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.openChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.openChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.openChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.openChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.openChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.openChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.openChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.openChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.openChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.openChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/utils.js
function getConfigsByPriority(localConfigs, remoteConfigs) {
  const prioritizedConfigs = createInitialConfig();
  updateCommonConfigs(prioritizedConfigs.common, localConfigs, remoteConfigs);
  updateGroupChannelConfigs(prioritizedConfigs.groupChannel, localConfigs, remoteConfigs);
  updateOpenChannelConfigs(prioritizedConfigs.openChannel, localConfigs, remoteConfigs);
  return prioritizedConfigs;
}
function isRawSBUConfigPayload(json) {
  return typeof json === "object" && "configuration" in json && "updated_at" in json;
}

// node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/context.js
var __awaiter6 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
function getApplicationAttributes(sdk) {
  var _a3, _b;
  return (_b = (_a3 = sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.applicationAttributes) !== null && _b !== void 0 ? _b : [];
}
var UIKitConfigContext = (0, import_react15.createContext)({
  initDashboardConfigs: () => Promise.resolve(),
  configs: initialConfig,
  configsWithAppAttr: () => initialConfig
});
var UIKitConfigProvider = ({ storage, children, localConfigs = {} }) => {
  const [remoteConfigs, setRemoteConfigs] = (0, import_react15.useState)(createInitialRemoteConfig);
  const [manager] = (0, import_react15.useState)(() => new UIKitConfigManager(storage));
  const initDashboardConfigs = (0, import_react15.useCallback)((sdk) => __awaiter6(void 0, void 0, void 0, function* () {
    const storedConfigPayload = yield manager.init(sdk.appId);
    if (sdk.appInfo && sdk.appInfo.uikitConfigInfo.lastUpdatedAt === storedConfigPayload.updatedAt) {
      setRemoteConfigs(storedConfigPayload.configuration);
    } else {
      try {
        const response = yield sdk.getUIKitConfiguration();
        if (isRawSBUConfigPayload(response.json)) {
          const remoteConfigPayload = snakeToCamel(response.json);
          const updatedConfigPayload = yield manager.update(remoteConfigPayload);
          setRemoteConfigs(updatedConfigPayload.configuration);
        }
      } catch (_a3) {
        setRemoteConfigs(storedConfigPayload.configuration);
      }
    }
  }), [manager]);
  const configs = getConfigsByPriority(localConfigs, remoteConfigs);
  const configsWithAppAttr = usePreservedCallback((sdk) => ({
    groupChannel: {
      channel: {
        get enableReactions() {
          return configs.groupChannel.channel.enableReactions && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableReactionsSupergroup() {
          return configs.groupChannel.channel.enableReactionsSupergroup && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableOgtag() {
          return configs.groupChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      },
      setting: {
        get enableMessageSearch() {
          return configs.groupChannel.setting.enableMessageSearch && getApplicationAttributes(sdk).includes(applicationAttributes.message_search_v3);
        }
      }
    },
    openChannel: {
      channel: {
        get enableOgtag() {
          return configs.openChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      }
    }
  }));
  return import_react15.default.createElement(UIKitConfigContext.Provider, { value: { initDashboardConfigs, configs, configsWithAppAttr } }, children);
};
var useUIKitConfig = () => (0, import_react15.useContext)(UIKitConfigContext);

// node_modules/@sendbird/uikit-react/chunks/bundle-DXRcwk7R.js
var stringSet = {
  en: {
    // Group Channel - Conversation
    MESSAGE_STATUS__YESTERDAY: "Yesterday",
    CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE: "new message(s) since",
    /** @deprecated Please use `DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE` instead * */
    CHANNEL__MESSAGE_LIST__NOTIFICATION__ON: "on",
    // Channel List
    CHANNEL_PREVIEW_MOBILE_LEAVE: "Leave channel",
    // Group Channel - Settings
    CHANNEL_SETTING__HEADER__TITLE: "Channel information",
    CHANNEL_SETTING__PROFILE__EDIT: "Edit",
    CHANNEL_SETTING__MEMBERS__TITLE: "Members",
    CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS: "All members",
    CHANNEL_SETTING__MEMBERS__INVITE_MEMBER: "Invite users",
    CHANNEL_SETTING__MEMBERS__YOU: " (You)",
    CHANNEL_SETTING__MEMBERS__SELECT_TITLE: "Select members",
    CHANNEL_SETTING__MEMBERS__OPERATOR: "Operator",
    CHANNEL_SETTING__LEAVE_CHANNEL__TITLE: "Leave channel",
    CHANNEL_SETTING__OPERATORS__TITLE: "Operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ALL: "All operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ADD: "Add operator",
    CHANNEL_SETTING__OPERATORS__ADD_BUTTON: "Add",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE: "Muted members",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL: "All muted members",
    CHANNEL_SETTING__NO_UNMUTED: "No muted members yet",
    CHANNEL_SETTING__BANNED_MEMBERS__TITLE: "Banned users",
    CHANNEL_SETTING__FREEZE_CHANNEL: "Freeze Channel",
    CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    CHANNEL_SETTING__MODERATION__BAN: "Ban",
    CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    CHANNEL_SETTING__MODERATION__EMPTY_BAN: "No banned members yet",
    CHANNEL_SETTING__MODERATION__ALL_BAN: "All banned members",
    // OpenChannel - Conversation
    OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS: "participants",
    OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS: "Select participants",
    // OpenChannelList
    OPEN_CHANNEL_LIST__TITLE: "Channels",
    CREATE_OPEN_CHANNEL_LIST__TITLE: "New channel profile",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION: "Channel image",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD: "Upload",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION: "Channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER: "Enter channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBMIT: "Create",
    // OpenChannel - Settings
    OPEN_CHANNEL_SETTINGS__OPERATOR_TITLE: "Channel Information",
    OPEN_CHANNEL_SETTINGS__OPERATOR_URL: "URL",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL: "Delete channel",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE: "Delete channel?",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT: "Once deleted, this channel can't be restored.",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT: "Delete",
    OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE: "Operators",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD: "Add operator",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL: "All operators",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE: "Muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL: "All muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE: "No muted participants yet",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE: "Banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL: "All banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE: "No banned users yet",
    OPEN_CHANNEL_SETTINGS__MEMBERS__YOU: " (You)",
    OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR: "Operator",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__EMPTY_LIST: "No participants yet",
    OPEN_CHANNEL_SETTINGS__SEE_ALL: "See all participants",
    OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE: "All participants",
    OPEN_CHANNEL_SETTINGS__NO_TITLE: "(No title)",
    OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    OPEN_CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    OPEN_CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    OPEN_CHANNEL_SETTING__MODERATION__BAN: "Ban",
    OPEN_CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    // Channel - Common
    TRYING_TO_CONNECT: "Trying to connect…",
    TYPING_INDICATOR__IS_TYPING: "is typing...",
    TYPING_INDICATOR__AND: "and",
    TYPING_INDICATOR__ARE_TYPING: "are typing...",
    TYPING_INDICATOR__MULTIPLE_TYPING: "Several people are typing...",
    CHANNEL_FROZEN: "Channel frozen",
    PLACE_HOLDER__NO_CHANNEL: "No channels",
    PLACE_HOLDER__WRONG: "Something went wrong",
    PLACE_HOLDER__RETRY_TO_CONNECT: "Retry",
    PLACE_HOLDER__NO_MESSAGES: "No messages",
    TOOLTIP__AND_YOU: ", and you",
    TOOLTIP__YOU: "you",
    TOOLTIP__UNKNOWN_USER: "(no name)",
    UNKNOWN__UNKNOWN_MESSAGE_TYPE: "(Unknown message type)",
    UNKNOWN__CANNOT_READ_MESSAGE: "Cannot read this message.",
    UNKNOWN__TEMPLATE_ERROR: "(Template error)",
    FORM_VERSION_ERROR: "Form type messages are not available in this version.",
    UNKNOWN__CANNOT_READ_TEMPLATE: "Cannot read this template.",
    MESSAGE_EDITED: "(edited)",
    // Channel - Modal
    MODAL__DELETE_MESSAGE__TITLE: "Delete this message?",
    MODAL__CHANNEL_INFORMATION__TITLE: "Edit channel information",
    MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE: "Channel image",
    MODAL__CHANNEL_INFORMATION__UPLOAD: "Upload",
    MODAL__CHANNEL_INFORMATION__CHANNEL_NAME: "Channel name",
    MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER: "Enter name",
    MODAL__INVITE_MEMBER__TITLE: "Invite member",
    MODAL__INVITE_MEMBER__SELECTED: "selected",
    MODAL__CHOOSE_CHANNEL_TYPE__TITLE: "New channel",
    MODAL__CHOOSE_CHANNEL_TYPE__GROUP: "Group",
    MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP: "Super group",
    MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__TITLE: "New channel",
    MODAL__CREATE_CHANNEL__GROUP: "Group",
    MODAL__CREATE_CHANNEL__SUPER: "Super group",
    MODAL__CREATE_CHANNEL__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__SELECTED: "selected",
    MODAL__LEAVE_CHANNEL__TITLE: "Leave this channel?",
    MODAL__LEAVE_CHANNEL__FOOTER: "Leave",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED: "You're muted by the operator.",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN: "Channel is frozen.",
    // User Profile
    USER_PROFILE__MESSAGE: "Message",
    USER_PROFILE__USER_ID: "User ID",
    EDIT_PROFILE__TITLE: "My profile",
    EDIT_PROFILE__IMAGE_LABEL: "Profile image",
    EDIT_PROFILE__IMAGE_UPLOAD: "Upload",
    EDIT_PROFILE__NICKNAME_LABEL: "Nickname",
    EDIT_PROFILE__NICKNAME_PLACEHOLDER: "Enter your nickname",
    EDIT_PROFILE__USERID_LABEL: "User ID",
    EDIT_PROFILE__THEME_LABEL: "Dark theme",
    // Message Input
    MESSAGE_INPUT__PLACE_HOLDER: "Enter message",
    MESSAGE_INPUT__PLACE_HOLDER__DISABLED: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__SUGGESTED_REPLIES: "Please choose one from above",
    MESSAGE_INPUT__PLACE_HOLDER__MESSAGE_FORM: "Please fill out the message form.",
    MESSAGE_INPUT__PLACE_HOLDER__FROZEN: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED: "Chat is unavailable because you're muted",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT: "You're muted",
    MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER: "Reply to message",
    // Common UI
    BUTTON__SUBMIT: "Submit",
    BUTTON__CANCEL: "Cancel",
    BUTTON__DELETE: "Delete",
    BUTTON__SAVE: "Save",
    BUTTON__CREATE: "Create",
    BUTTON__INVITE: "Invite",
    BUTTON__OK: "OK",
    BADGE__OVER: "+",
    NO_TITLE: "No title",
    NO_NAME: "(No name)",
    NO_MEMBERS: "(No members)",
    LABEL__OPERATOR: "Operator",
    // Context Menu
    MESSAGE_MENU__COPY: "Copy",
    MESSAGE_MENU__REPLY: "Reply",
    MESSAGE_MENU__THREAD: "Reply in thread",
    MESSAGE_MENU__OPEN_IN_CHANNEL: "Open in channel",
    MESSAGE_MENU__EDIT: "Edit",
    MESSAGE_MENU__RESEND: "Resend",
    MESSAGE_MENU__DELETE: "Delete",
    MESSAGE_MENU__SAVE: "Save",
    //  * FIXME: get back legacy, remove after refactoring open channel messages *
    CONTEXT_MENU_DROPDOWN__COPY: "Copy",
    CONTEXT_MENU_DROPDOWN__EDIT: "Edit",
    CONTEXT_MENU_DROPDOWN__RESEND: "Resend",
    CONTEXT_MENU_DROPDOWN__DELETE: "Delete",
    CONTEXT_MENU_DROPDOWN__SAVE: "Save",
    // Feature - Message Search
    SEARCH: "Search",
    SEARCH_IN_CHANNEL: "Search in channel",
    SEARCH_IN: "Search in",
    SEARCHING: "Searching for messages...",
    NO_SEARCHED_MESSAGE: "No results found.",
    // Feature - Message Reply
    QUOTE_MESSAGE_INPUT__REPLY_TO: "Reply to",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE: "Photo",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF: "GIF",
    QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO: "Video",
    QUOTED_MESSAGE__REPLIED_TO: "replied to",
    QUOTED_MESSAGE__CURRENT_USER: "You",
    QUOTED_MESSAGE__UNAVAILABLE: "Message unavailable",
    // Feature - Thread
    THREAD__HEADER_TITLE: "Thread",
    CHANNEL__THREAD_REPLY: "reply",
    CHANNEL__THREAD_REPLIES: "replies",
    CHANNEL__THREAD_OVER_MAX: "99+",
    THREAD__THREAD_REPLY: "reply",
    THREAD__THREAD_REPLIES: "replies",
    THREAD__INPUT__REPLY_TO_THREAD: "Reply to thread",
    THREAD__INPUT__REPLY_IN_THREAD: "Reply in thread",
    // Feature - Mention
    MENTION_NAME__NO_NAME: "(No name)",
    MENTION_COUNT__OVER_LIMIT: "You can mention up to %d times at a time.",
    UI__FILE_VIEWER__UNSUPPORT: "Unsupported message",
    // Feature - Voice Message
    VOICE_RECORDING_PERMISSION_DENIED: "You cannot record the voice since\n        voice recording is not permitted in your device system setting",
    VOICE_MESSAGE: "Voice Message",
    // Channel preview last message file type display strings
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF: "GIF",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO: "Photo",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO: "Video",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO: "Audio",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE: "Voice message",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL: "File",
    CHANNEL_PREVIEW_LAST_MESSAGE_TEMPLATE_MESSAGE: "Message",
    // Date format
    DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE: "p 'on' MMM dd",
    DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR: "MMMM dd, yyyy",
    DATE_FORMAT__THREAD_LIST__DATE_SEPARATOR: "MMM dd, yyyy",
    DATE_FORMAT__MESSAGE_CREATED_AT: "p",
    DATE_FORMAT__UNREAD_SINCE: "p MMM dd",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY: "p",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR: "MMM d",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR: "yyyy/M/d",
    // File upload
    FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT: "Up to %d files can be attached.",
    FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT: "The maximum size per file is %d MB.",
    // Feedback button text
    FEEDBACK_LIKE: "Like",
    FEEDBACK_DISLIKE: "Dislike",
    // Mobile feedback options menu items
    EDIT_COMMENT: "Edit comment",
    REMOVE_FEEDBACK: "Remove Feedback",
    // Feedback modal title
    FEEDBACK_MODAL_TITLE: "Provide additional feedback (optional)",
    FEEDBACK_CONTENT_PLACEHOLDER: "Leave a comment",
    BUTTON__REMOVE_FEEDBACK: "Remove feedback",
    // Feedback failed modal title
    FEEDBACK_FAILED_SUBMIT: "Couldn’t submit. Try again.",
    FEEDBACK_FAILED_SAVE: "Couldn’t save. Try again.",
    FEEDBACK_FAILED_DELETE: "Couldn’t delete. Try again.",
    // Form submit failed error messages
    FORM_ITEM_REQUIRED: "This field is required",
    FORM_ITEM_INVALID: "Please check the value",
    FORM_ITEM_OPTIONAL_EMPTY: "No Response"
  }
};
var getStringSet = function(lang) {
  if (lang === void 0) {
    lang = "en";
  }
  return stringSet[lang];
};

// node_modules/@sendbird/uikit-react/chunks/bundle-MoKyCGQH.js
var import_react16 = __toESM(require_react(), 1);
var Typography = {
  H_1: "H_1",
  H_2: "H_2",
  SUBTITLE_1: "SUBTITLE_1",
  SUBTITLE_2: "SUBTITLE_2",
  BODY_1: "BODY_1",
  BODY_2: "BODY_2",
  BUTTON_1: "BUTTON_1",
  BUTTON_2: "BUTTON_2",
  BUTTON_3: "BUTTON_3",
  CAPTION_1: "CAPTION_1",
  CAPTION_2: "CAPTION_2",
  CAPTION_3: "CAPTION_3"
};
var Colors = {
  ONBACKGROUND_1: "ONBACKGROUND_1",
  ONBACKGROUND_2: "ONBACKGROUND_2",
  ONBACKGROUND_3: "ONBACKGROUND_3",
  ONBACKGROUND_4: "ONBACKGROUND_4",
  ONCONTENT_1: "ONCONTENT_1",
  ONCONTENT_2: "ONCONTENT_2",
  ONCONTENT_3: "ONCONTENT_3",
  ONCONTENT_INVERSE_1: "ONCONTENT_INVERSE_1",
  ONCONTENT_INVERSE_3: "ONCONTENT_INVERSE_3",
  PRIMARY: "PRIMARY",
  ERROR: "ERROR",
  SECONDARY_3: "SECONDARY_3"
};
function changeTypographyToClassName(type) {
  switch (type) {
    case Typography.H_1:
      return "sendbird-label--h-1";
    case Typography.H_2:
      return "sendbird-label--h-2";
    case Typography.SUBTITLE_1:
      return "sendbird-label--subtitle-1";
    case Typography.SUBTITLE_2:
      return "sendbird-label--subtitle-2";
    case Typography.BODY_1:
      return "sendbird-label--body-1";
    case Typography.BODY_2:
      return "sendbird-label--body-2";
    case Typography.BUTTON_1:
      return "sendbird-label--button-1";
    case Typography.BUTTON_2:
      return "sendbird-label--button-2";
    case Typography.BUTTON_3:
      return "sendbird-label--button-3";
    case Typography.CAPTION_1:
      return "sendbird-label--caption-1";
    case Typography.CAPTION_2:
      return "sendbird-label--caption-2";
    case Typography.CAPTION_3:
      return "sendbird-label--caption-3";
    default:
      return "";
  }
}
function changeColorToClassName(color) {
  switch (color) {
    case Colors.ONBACKGROUND_1:
      return "sendbird-label--color-onbackground-1";
    case Colors.ONBACKGROUND_2:
      return "sendbird-label--color-onbackground-2";
    case Colors.ONBACKGROUND_3:
      return "sendbird-label--color-onbackground-3";
    case Colors.ONBACKGROUND_4:
      return "sendbird-label--color-onbackground-4";
    case Colors.ONCONTENT_1:
      return "sendbird-label--color-oncontent-1";
    case Colors.ONCONTENT_2:
      return "sendbird-label--color-oncontent-2";
    case Colors.ONCONTENT_3:
      return "sendbird-label--color-oncontent-3";
    case Colors.ONCONTENT_INVERSE_1:
      return "sendbird-label--color-oncontent-inverse-1";
    case Colors.ONCONTENT_INVERSE_3:
      return "sendbird-label--color-oncontent-inverse-3";
    case Colors.PRIMARY:
      return "sendbird-label--color-primary";
    case Colors.ERROR:
      return "sendbird-label--color-error";
    case Colors.SECONDARY_3:
      return "sendbird-label--color-secondary-3";
    default:
      return "";
  }
}
var Label = (0, import_react16.forwardRef)(function(_a3, ref) {
  var _b = _a3.className, className = _b === void 0 ? [] : _b, type = _a3.type, color = _a3.color, _c = _a3.children, children = _c === void 0 ? null : _c, testID = _a3.testID;
  return (
    // Donot make this into div
    // Mention uses Label. If we use div, it would break the mention detection on Paste
    // https://github.com/sendbird/sendbird-uikit-react/pull/479
    import_react16.default.createElement("span", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-label",
      changeTypographyToClassName(type),
      changeColorToClassName(color)
    ], false).join(" "), ref, "data-testid": testID }, children)
  );
});
var LabelTypography = Typography;
var LabelColors = Colors;
var LabelStringSet = getStringSet("en");

// node_modules/@sendbird/uikit-react/chunks/bundle-BRWYGzyd.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var locale = {
  code: "en-US",
  formatDistance,
  formatLong,
  formatRelative,
  localize,
  match,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};

// node_modules/@sendbird/uikit-react/chunks/bundle-y-yf0Djs.js
var import_react17 = __toESM(require_react(), 1);
var LocalizationContextDefault = {
  stringSet: getStringSet("en"),
  dateLocale: locale
};
var LocalizationContext = import_react17.default.createContext(LocalizationContextDefault);
var LocalizationProvider = function(props) {
  var children = props.children;
  return import_react17.default.createElement(LocalizationContext.Provider, { value: __assign(__assign({}, LocalizationContextDefault), props) }, children);
};
var useLocalization = function() {
  var context = import_react17.default.useContext(LocalizationContext);
  if (!context) {
    throw new Error("`useLocalization` hook must be used within `SendbirdProvider` that includes `LocalizationProvider`.");
  }
  return context;
};

// node_modules/@sendbird/uikit-react/ui/Icon.js
var React2 = __toESM(require_react(), 1);
var import_react18 = __toESM(require_react(), 1);
var Types = {
  ADD: "ADD",
  ARROW_LEFT: "ARROW_LEFT",
  ATTACH: "ATTACH",
  AUDIO_ON_LINED: "AUDIO_ON_LINED",
  BAN: "BAN",
  BROADCAST: "BROADCAST",
  CAMERA: "CAMERA",
  CHANNELS: "CHANNELS",
  CHAT: "CHAT",
  CHAT_FILLED: "CHAT_FILLED",
  CHEVRON_DOWN: "CHEVRON_DOWN",
  CHEVRON_RIGHT: "CHEVRON_RIGHT",
  CLOSE: "CLOSE",
  COLLAPSE: "COLLAPSE",
  COPY: "COPY",
  CREATE: "CREATE",
  DELETE: "DELETE",
  DISCONNECTED: "DISCONNECTED",
  DOCUMENT: "DOCUMENT",
  DONE: "DONE",
  DONE_ALL: "DONE_ALL",
  DOWNLOAD: "DOWNLOAD",
  EDIT: "EDIT",
  EMOJI_MORE: "EMOJI_MORE",
  ERROR: "ERROR",
  EXPAND: "EXPAND",
  FILE_AUDIO: "FILE_AUDIO",
  FILE_DOCUMENT: "FILE_DOCUMENT",
  FREEZE: "FREEZE",
  GIF: "GIF",
  INFO: "INFO",
  LEAVE: "LEAVE",
  MEMBERS: "MEMBERS",
  MESSAGE: "MESSAGE",
  MODERATIONS: "MODERATIONS",
  MORE: "MORE",
  MUTE: "MUTE",
  NOTIFICATIONS: "NOTIFICATIONS",
  NOTIFICATIONS_OFF_FILLED: "NOTIFICATIONS_OFF_FILLED",
  OPERATOR: "OPERATOR",
  PHOTO: "PHOTO",
  PLAY: "PLAY",
  PLUS: "PLUS",
  QUESTION: "QUESTION",
  REFRESH: "REFRESH",
  REPLY: "REPLY",
  REMOVE: "REMOVE",
  SEARCH: "SEARCH",
  SEND: "SEND",
  SETTINGS_FILLED: "SETTINGS_FILLED",
  SLIDE_LEFT: "SLIDE_LEFT",
  SPINNER: "SPINNER",
  SUPERGROUP: "SUPERGROUP",
  THREAD: "THREAD",
  THUMBNAIL_NONE: "THUMBNAIL_NONE",
  TOGGLE_OFF: "TOGGLE_OFF",
  TOGGLE_ON: "TOGGLE_ON",
  USER: "USER",
  FEEDBACK_LIKE: "FEEDBACK_LIKE",
  FEEDBACK_DISLIKE: "FEEDBACK_DISLIKE"
};
var Colors2 = {
  DEFAULT: "DEFAULT",
  PRIMARY: "PRIMARY",
  PRIMARY_2: "PRIMARY_2",
  SECONDARY: "SECONDARY",
  SECONDARY_2: "SECONDARY_2",
  CONTENT: "CONTENT",
  CONTENT_INVERSE: "CONTENT_INVERSE",
  CONTENT_INVERSE_3: "CONTENT_INVERSE_3",
  WHITE: "WHITE",
  GRAY: "GRAY",
  THUMBNAIL_ICON: "THUMBNAIL_ICON",
  SENT: "SENT",
  READ: "READ",
  ON_BACKGROUND_1: "ON_BACKGROUND_1",
  ON_BACKGROUND_2: "ON_BACKGROUND_2",
  ON_BACKGROUND_3: "ON_BACKGROUND_3",
  ON_BACKGROUND_4: "ON_BACKGROUND_4",
  BACKGROUND_3: "BACKGROUND_3",
  ERROR: "ERROR"
};
function changeColorToClassName2(color) {
  switch (color) {
    case Colors2.PRIMARY:
      return "sendbird-icon-color--primary";
    case Colors2.PRIMARY_2:
      return "sendbird-icon-color--primary-2";
    case Colors2.SECONDARY:
      return "sendbird-icon-color--secondary";
    case Colors2.SECONDARY_2:
      return "sendbird-icon-color--secondary-2";
    case Colors2.CONTENT:
      return "sendbird-icon-color--content";
    case Colors2.CONTENT_INVERSE:
      return "sendbird-icon-color--content-inverse";
    case Colors2.CONTENT_INVERSE_3:
      return "sendbird-icon-color--content-inverse-3";
    case Colors2.WHITE:
      return "sendbird-icon-color--white";
    case Colors2.GRAY:
      return "sendbird-icon-color--gray";
    case Colors2.THUMBNAIL_ICON:
      return "sendbird-icon-color--thumbnail-icon";
    case Colors2.SENT:
      return "sendbird-icon-color--sent";
    case Colors2.READ:
      return "sendbird-icon-color--read";
    case Colors2.ON_BACKGROUND_1:
      return "sendbird-icon-color--on-background-1";
    case Colors2.ON_BACKGROUND_2:
      return "sendbird-icon-color--on-background-2";
    case Colors2.ON_BACKGROUND_3:
      return "sendbird-icon-color--on-background-3";
    case Colors2.ON_BACKGROUND_4:
      return "sendbird-icon-color--on-background-4";
    case Colors2.BACKGROUND_3:
      return "sendbird-icon-color--background-3";
    case Colors2.ERROR:
      return "sendbird-icon-color--error";
    default:
      return "";
  }
}
function changeTypeToIconClassName(type) {
  switch (type) {
    case Types.ADD:
      return "sendbird-icon-add";
    case Types.ARROW_LEFT:
      return "sendbird-icon-arrow-left";
    case Types.ATTACH:
      return "sendbird-icon-attach";
    case Types.AUDIO_ON_LINED:
      return "sendbird-icon-audio-on-lined";
    case Types.BAN:
      return "sendbird-icon-ban";
    case Types.BROADCAST:
      return "sendbird-icon-broadcast";
    case Types.CAMERA:
      return "sendbird-icon-camera";
    case Types.CHANNELS:
      return "sendbird-icon-channels";
    case Types.CHAT:
      return "sendbird-icon-chat";
    case Types.CHAT_FILLED:
      return "sendbird-icon-chat-filled";
    case Types.CHEVRON_DOWN:
      return "sendbird-icon-chevron-down";
    case Types.CHEVRON_RIGHT:
      return "sendbird-icon-chevron-right";
    case Types.CLOSE:
      return "sendbird-icon-close";
    case Types.COLLAPSE:
      return "sendbird-icon-collapse";
    case Types.COPY:
      return "sendbird-icon-copy";
    case Types.CREATE:
      return "sendbird-icon-create";
    case Types.DELETE:
      return "sendbird-icon-delete";
    case Types.DISCONNECTED:
      return "sendbird-icon-disconnected";
    case Types.DOCUMENT:
      return "sendbird-icon-document";
    case Types.DONE:
      return "sendbird-icon-done";
    case Types.DONE_ALL:
      return "sendbird-icon-done-all";
    case Types.DOWNLOAD:
      return "sendbird-icon-down-load";
    case Types.EDIT:
      return "sendbird-icon-edit";
    case Types.EMOJI_MORE:
      return "sendbird-icon-emoji-more";
    case Types.ERROR:
      return "sendbird-icon-error";
    case Types.EXPAND:
      return "sendbird-icon-expand";
    case Types.FILE_AUDIO:
      return "sendbird-icon-file-audio";
    case Types.FILE_DOCUMENT:
      return "sendbird-icon-file-document";
    case Types.FREEZE:
      return "sendbird-icon-freeze";
    case Types.GIF:
      return "sendbird-icon-gif";
    case Types.INFO:
      return "sendbird-icon-info";
    case Types.LEAVE:
      return "sendbird-icon-leave";
    case Types.MEMBERS:
      return "sendbird-icon-members";
    case Types.MESSAGE:
      return "sendbird-icon-message";
    case Types.MODERATIONS:
      return "sendbird-icon-moderations";
    case Types.MORE:
      return "sendbird-icon-more";
    case Types.MUTE:
      return "sendbird-icon-mute";
    case Types.NOTIFICATIONS:
      return "sendbird-icon-notifications";
    case Types.NOTIFICATIONS_OFF_FILLED:
      return "sendbird-icon-notifications-off-filled";
    case Types.OPERATOR:
      return "sendbird-icon-operator";
    case Types.PHOTO:
      return "sendbird-icon-photo";
    case Types.PLAY:
      return "sendbird-icon-play";
    case Types.PLUS:
      return "sendbird-iconn-plus";
    case Types.QUESTION:
      return "sendbird-icon-question";
    case Types.REFRESH:
      return "sendbird-icon-refresh";
    case Types.REMOVE:
      return "sendbird-icon-remove";
    case Types.REPLY:
      return "sendbird-icon-reply";
    case Types.SEARCH:
      return "sendbird-icon-search";
    case Types.SEND:
      return "sendbird-icon-send";
    case Types.SETTINGS_FILLED:
      return "sendbird-icon-settings-filled";
    case Types.SPINNER:
      return "sendbird-icon-spinner";
    case Types.SUPERGROUP:
      return "sendbird-icon-supergroup";
    case Types.THREAD:
      return "sendbird-icon-thread";
    case Types.THUMBNAIL_NONE:
      return "sendbird-icon-thumbnail-none";
    case Types.TOGGLE_OFF:
      return "sendbird-icon-toggle-off";
    case Types.TOGGLE_ON:
      return "sendbird-icon-toggle-on";
    case Types.USER:
      return "sendbird-icon-user";
    case Types.FEEDBACK_LIKE:
      return "sendbird-icon-feedback-like";
    case Types.FEEDBACK_DISLIKE:
      return "sendbird-icon-feedback-dislike";
    default:
      return "sendbird-icon-unknown";
  }
}
var _path$U;
function _extends$X() {
  return _extends$X = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$X.apply(null, arguments);
}
var SvgIconAdd = (props) => React2.createElement("svg", _extends$X({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$U || (_path$U = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334a2.667 2.667 0 0 0 2.666 2.666h37.334a2.667 2.667 0 0 0 2.666-2.666V13.333a2.667 2.667 0 0 0-2.666-2.666m-18.667 8a2.667 2.667 0 0 1 2.649 2.355l.018.311v8h8a2.667 2.667 0 0 1 .311 5.316l-.311.018h-8v8a2.667 2.667 0 0 1-5.316.311l-.018-.311v-8h-8a2.667 2.667 0 0 1-.311-5.316l.311-.018h8v-8A2.667 2.667 0 0 1 32 18.667",
  className: "icon-add_svg__fill"
})));
var _path$T;
function _extends$W() {
  return _extends$W = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$W.apply(null, arguments);
}
var SvgIconArrowLeft = (props) => React2.createElement("svg", _extends$W({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$T || (_path$T = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M33.886 8.781a2.67 2.67 0 0 1 .221 3.52l-.221.251-16.78 16.781H56a2.667 2.667 0 0 1 .311 5.316l-.311.018-38.895-.001 16.78 16.782a2.666 2.666 0 0 1 .222 3.52l-.221.251a2.67 2.67 0 0 1-3.52.222l-.252-.222L8.781 33.886a2.67 2.67 0 0 1-.222-3.52l.222-.252L30.114 8.781a2.67 2.67 0 0 1 3.772 0",
  className: "icon-arrow-left_svg__fill"
})));
var _path$S;
function _extends$V() {
  return _extends$V = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$V.apply(null, arguments);
}
var SvgIconAttach = (props) => React2.createElement("svg", _extends$V({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$S || (_path$S = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.334 28.926-24.506 23.34c-5.222 4.973-13.74 4.973-18.962 0-5.149-4.903-5.149-12.797 0-17.7l24.506-23.34c3.138-2.988 8.278-2.988 11.416 0 3.064 2.919 3.064 7.594 0 10.513L23.255 45.077c-1.055 1.005-2.815 1.005-3.87.001-.98-.933-.98-2.39 0-3.325l22.64-21.535a2.667 2.667 0 0 0-3.676-3.864L15.709 37.89a7.58 7.58 0 0 0-.001 11.05c3.113 2.966 8.11 2.966 11.224 0l24.533-23.338c5.272-5.021 5.272-13.217 0-18.238-5.197-4.95-13.573-4.95-18.77 0L8.187 30.704c-7.356 7.005-7.356 18.419 0 25.424 7.281 6.935 19.036 6.935 26.318 0l24.506-23.34a2.666 2.666 0 1 0-3.678-3.862z",
  className: "icon-attach_svg__fill"
})));
var _g$2;
var _defs;
function _extends$U() {
  return _extends$U = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$U.apply(null, arguments);
}
var SvgIconAudioOnLined = (props) => React2.createElement("svg", _extends$U({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _g$2 || (_g$2 = React2.createElement("g", {
  clipPath: "url(#icon-audio-on-lined_svg__a)"
}, React2.createElement("path", {
  d: "M32 0C26.11 0 21.333 4.776 21.333 10.667V32c0 5.891 4.776 10.667 10.667 10.667S42.667 37.89 42.667 32V10.667C42.667 4.776 37.89 0 32 0m-5.333 10.667a5.333 5.333 0 0 1 10.666 0V32a5.333 5.333 0 0 1-10.666 0z",
  className: "icon-audio-on-lined_svg__fill",
  clipRule: "evenodd"
}), React2.createElement("path", {
  d: "M16 26.667a2.667 2.667 0 1 0-5.333 0V32c0 10.879 8.143 19.856 18.666 21.168v5.499h-8a2.667 2.667 0 0 0 0 5.333h21.334a2.667 2.667 0 1 0 0-5.333h-8v-5.499C45.19 51.856 53.333 42.88 53.333 32v-5.333a2.667 2.667 0 1 0-5.333 0V32c0 8.837-7.163 16-16 16s-16-7.163-16-16z",
  className: "icon-audio-on-lined_svg__fill"
}))), _defs || (_defs = React2.createElement("defs", null, React2.createElement("clipPath", {
  id: "icon-audio-on-lined_svg__a"
}, React2.createElement("path", {
  fill: "#fff",
  d: "M0 0h64v64H0z"
})))));
var _path$R;
function _extends$T() {
  return _extends$T = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$T.apply(null, arguments);
}
var SvgIconBan = (props) => React2.createElement("svg", _extends$T({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$R || (_path$R = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m12.333 21.333a1 1 0 0 1 1 1v3.334a1 1 0 0 1-1 1H19.667a1 1 0 0 1-1-1v-3.334a1 1 0 0 1 1-1z",
  className: "icon-ban_svg__fill"
})));
var _path$Q;
function _extends$S() {
  return _extends$S = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$S.apply(null, arguments);
}
var SvgIconBroadcast = (props) => React2.createElement("svg", _extends$S({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$Q || (_path$Q = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M58.545 5.498q.121.389.122.796v46.079a2.666 2.666 0 0 1-3.462 2.546l-17.951-5.61c-.645 5.273-5.14 9.358-10.587 9.358C20.776 58.667 16 53.89 16 48v-5.334h-5.333a8 8 0 0 1-7.997-7.75l-.003-.25V24a8 8 0 0 1 8-8H16L55.205 3.749a2.665 2.665 0 0 1 3.34 1.75zM21.333 44.587V48a5.333 5.333 0 0 0 10.652.398L32 47.92zm32-34.667-32 9.997v18.83l32 9.997zM16 21.333h-5.333a2.67 2.67 0 0 0-2.65 2.356L8 24v10.667a2.667 2.667 0 0 0 2.667 2.666H16z",
  className: "icon-broadcast_svg__fill"
})));
var _path$P;
function _extends$R() {
  return _extends$R = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$R.apply(null, arguments);
}
var SvgIconCamera = (props) => React2.createElement("svg", _extends$R({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$P || (_path$P = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M40 5.333c.892 0 1.724.446 2.219 1.188l4.541 6.812H56a8 8 0 0 1 7.986 7.53l.014.47v29.334a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V21.333a8 8 0 0 1 8-8h9.237l4.544-6.812a2.67 2.67 0 0 1 1.888-1.167l.331-.02zm-1.43 5.334H25.428l-4.542 6.812a2.66 2.66 0 0 1-1.887 1.167l-.331.02H8a2.67 2.67 0 0 0-2.667 2.667v29.334A2.667 2.667 0 0 0 8 53.333h48a2.667 2.667 0 0 0 2.667-2.666V21.333A2.667 2.667 0 0 0 56 18.667H45.333a2.67 2.67 0 0 1-2.218-1.188zM32 21.333c7.364 0 13.333 5.97 13.333 13.334S39.363 48 32 48s-13.333-5.97-13.333-13.333S24.637 21.333 32 21.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-camera_svg__fill"
})));
var _path$O;
function _extends$Q() {
  return _extends$Q = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$Q.apply(null, arguments);
}
var SvgIconChannels = (props) => React2.createElement("svg", _extends$Q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$O || (_path$O = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m42.65 5.333.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04h9.466a2.667 2.667 0 0 1 .311 5.315l-.31.018H43.271l-1.184 10.666h11.245a2.667 2.667 0 0 1 .312 5.316l-.31.018H41.495l-1.512 13.627a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04H25.496l-1.512 13.628a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04h-9.464a2.667 2.667 0 0 1-.311-5.315l.31-.018h10.057l1.186-10.667H10.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h11.835l1.515-13.627a2.67 2.67 0 0 1 2.634-2.373l.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04H38.5l1.515-13.628a2.67 2.67 0 0 1 2.634-2.373zm-5.927 32 1.186-10.667H27.272l-1.184 10.667z",
  className: "icon-channels_svg__fill"
})));
var _path$N;
function _extends$P() {
  return _extends$P = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$P.apply(null, arguments);
}
var SvgIconChat = (props) => React2.createElement("svg", _extends$P({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$N || (_path$N = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8",
  className: "icon-chat_svg__fill"
})));
var _path$M;
function _extends$O() {
  return _extends$O = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$O.apply(null, arguments);
}
var SvgIconChatFilled = (props) => React2.createElement("svg", _extends$O({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$M || (_path$M = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667",
  className: "icon-chat-filled_svg__fill"
})));
var _path$L;
function _extends$N() {
  return _extends$N = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$N.apply(null, arguments);
}
var SvgIconChevronDown = (props) => React2.createElement("svg", _extends$N({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$L || (_path$L = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.121 21.879a3 3 0 0 0-4.242 0 3 3 0 0 0 0 4.242l18 18a3 3 0 0 0 4.242 0l18-18a3 3 0 0 0 0-4.242 3 3 0 0 0-4.242 0L32 37.757z",
  className: "icon-chevron-down_svg__fill"
})));
var _path$K;
function _extends$M() {
  return _extends$M = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$M.apply(null, arguments);
}
var SvgIconChevronRight = (props) => React2.createElement("svg", _extends$M({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$K || (_path$K = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M22.114 46.114a2.668 2.668 0 0 0 3.772 3.772l16-16a2.67 2.67 0 0 0 0-3.772l-16-16a2.668 2.668 0 0 0-3.772 3.772L36.23 32z",
  className: "icon-chevron-right_svg__fill"
})));
var _path$J;
function _extends$L() {
  return _extends$L = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$L.apply(null, arguments);
}
var SvgIconClose = (props) => React2.createElement("svg", _extends$L({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$J || (_path$J = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M52.552 11.448a2.666 2.666 0 0 1 .222 3.52l-.222.251-16.781 16.78 16.781 16.782a2.665 2.665 0 0 1 0 3.771 2.666 2.666 0 0 1-3.52.222l-.251-.222L32 35.771 15.219 52.552a2.665 2.665 0 0 1-3.771 0 2.666 2.666 0 0 1-.222-3.52l.222-.251L28.228 32l-16.78-16.781a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 16.78 16.78 16.782-16.78a2.665 2.665 0 0 1 3.771 0",
  className: "icon-close_svg__fill"
})));
var _path$I;
function _extends$K() {
  return _extends$K = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$K.apply(null, arguments);
}
var SvgIconCollapse = (props) => React2.createElement("svg", _extends$K({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$I || (_path$I = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16 8a2.667 2.667 0 0 0-2.649 2.356l-.018.31v42.667a2.667 2.667 0 0 0 5.316.311l.018-.31V34.666h25.56l-6.113 6.114a2.67 2.67 0 0 0-.221 3.52l.221.251a2.666 2.666 0 0 0 3.52.222l.252-.222 10.666-10.666a2.666 2.666 0 0 0 .222-3.52l-.222-.252-10.666-10.666a2.666 2.666 0 0 0-3.993 3.52l.221.251 6.113 6.114h-25.56V10.667A2.667 2.667 0 0 0 16 8",
  className: "icon-collapse_svg__fill"
})));
var _path$H;
function _extends$J() {
  return _extends$J = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$J.apply(null, arguments);
}
var SvgIconCopy = (props) => React2.createElement("svg", _extends$J({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$H || (_path$H = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M53.333 21.333a8 8 0 0 1 8 8v24a8 8 0 0 1-8 8h-24a8 8 0 0 1-8-8v-24a8 8 0 0 1 8-8zm0 5.334h-24a2.667 2.667 0 0 0-2.666 2.666v24A2.667 2.667 0 0 0 29.333 56h24A2.667 2.667 0 0 0 56 53.333v-24a2.667 2.667 0 0 0-2.667-2.666m-18.666-24a8 8 0 0 1 7.986 7.53l.014.47v2.666a2.667 2.667 0 0 1-5.316.311l-.018-.31v-2.667a2.67 2.67 0 0 0-2.355-2.65L34.667 8h-24a2.67 2.67 0 0 0-2.65 2.356l-.017.31v24a2.67 2.67 0 0 0 2.356 2.65l.31.017h2.667a2.667 2.667 0 0 1 .311 5.316l-.31.018h-2.667a8 8 0 0 1-7.987-7.53l-.013-.47v-24c0-4.26 3.33-7.743 7.53-7.987l.47-.013z",
  className: "icon-copy_svg__fill"
})));
var _path$G;
function _extends$I() {
  return _extends$I = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$I.apply(null, arguments);
}
var SvgIconCreate = (props) => React2.createElement("svg", _extends$I({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$G || (_path$G = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8m2.667 16v5.333H40c3.556 0 3.556 5.334 0 5.334h-5.333V40c0 3.556-5.334 3.556-5.334 0v-5.333H24c-3.556 0-3.556-5.334 0-5.334h5.333V24c0-3.556 5.334-3.556 5.334 0",
  className: "icon-create_svg__fill"
})));
var _path$F;
function _extends$H() {
  return _extends$H = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$H.apply(null, arguments);
}
var SvgIconDelete = (props) => React2.createElement("svg", _extends$H({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$F || (_path$F = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667c4.26 0 7.743 3.33 7.987 7.53l.013.47v2.666H56a2.667 2.667 0 0 1 .311 5.316l-.311.018h-2.668l.001 34.666c0 4.26-3.33 7.743-7.53 7.987l-.47.013H18.667a8 8 0 0 1-7.987-7.53l-.013-.47V18.667H8a2.667 2.667 0 0 1-.311-5.316L8 13.333h10.666v-2.666a8 8 0 0 1 7.53-7.987l.47-.013zm10.666 16H16v34.666a2.67 2.67 0 0 0 2.356 2.65l.31.017h26.667a2.67 2.67 0 0 0 2.65-2.356l.017-.31zm-21.332 8a2.667 2.667 0 0 1 2.648 2.355l.018.311v16a2.667 2.667 0 0 1-5.316.311l-.017-.31v-16a2.667 2.667 0 0 1 2.667-2.667m10.666 0a2.67 2.67 0 0 1 2.65 2.355l.017.311v16a2.667 2.667 0 0 1-5.315.311l-.018-.31v-16a2.667 2.667 0 0 1 2.666-2.667m0-18.667H26.667a2.67 2.67 0 0 0-2.65 2.356l-.017.31v2.667h16v-2.666a2.67 2.67 0 0 0-2.356-2.65L37.334 8z",
  className: "icon-delete_svg__fill"
})));
var _path$E;
function _extends$G() {
  return _extends$G = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$G.apply(null, arguments);
}
var SvgIconDisconnected = (props) => React2.createElement("svg", _extends$G({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$E || (_path$E = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m54.534 6.069-.248.217-9.736 9.735-.04.04-9.573 9.573q-.226.178-.405.404L6.286 54.286a2.423 2.423 0 0 0 3.18 3.645l.248-.217 13.374-13.373a2.42 2.42 0 0 0 1.88-.401 12.12 12.12 0 0 1 14.04 0 2.424 2.424 0 1 0 2.808-3.952 16.95 16.95 0 0 0-11.303-3.072l6.743-6.744a24.1 24.1 0 0 1 10.159 5.021 2.424 2.424 0 0 0 3.11-3.719 29 29 0 0 0-9.34-5.23l5.633-5.634a36.2 36.2 0 0 1 9.225 5.934 2.425 2.425 0 0 0 3.211-3.633 41 41 0 0 0-8.796-5.941l7.256-7.256a2.423 2.423 0 0 0-3.18-3.645m-35.04 21.474a29 29 0 0 0-6.032 3.942 2.424 2.424 0 0 0 3.137 3.697 24 24 0 0 1 5.022-3.282 2.425 2.425 0 0 0-2.127-4.357M4.748 22.909a2.424 2.424 0 0 0 3.207 3.636 36.36 36.36 0 0 1 26.978-8.977 2.424 2.424 0 0 0 .389-4.832A41.2 41.2 0 0 0 4.748 22.909",
  className: "icon-disconnected_svg__fill"
})));
var _path$D;
function _extends$F() {
  return _extends$F = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$F.apply(null, arguments);
}
var SvgIconDocument = (props) => React2.createElement("svg", _extends$F({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$D || (_path$D = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667a3 3 0 0 1 .274.014l.085.01.058.008q.07.01.141.026l.029.007q.075.016.146.037l.034.01q.357.107.663.303l.034.022q.053.034.104.072l.057.043q.045.033.085.068.091.075.176.16l-.126-.117q.075.065.143.135L55.21 19.438q.07.07.134.143l.035.04q.04.047.076.096l.04.054.07.1.024.038c.16.253.279.535.347.836l.01.048q.014.064.024.13l.006.048.007.051.004.041q.014.135.014.27v32a8 8 0 0 1-8 8H16a8 8 0 0 1-8-8V10.667a8 8 0 0 1 8-8zM34.666 8H16a2.667 2.667 0 0 0-2.667 2.667v42.666A2.667 2.667 0 0 0 16 56h32a2.667 2.667 0 0 0 2.667-2.667L50.666 24H37.333a2.667 2.667 0 0 1-2.648-2.356l-.018-.31zm12.227 10.667-6.894-6.894.001 6.894z",
  className: "icon-document_svg__fill"
})));
var _path$C;
function _extends$E() {
  return _extends$E = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$E.apply(null, arguments);
}
var SvgIconDone = (props) => React2.createElement("svg", _extends$E({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$C || (_path$C = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.552 31.448a2.665 2.665 0 1 0-3.771 3.771l13.333 13.333a2.666 2.666 0 0 0 3.772 0L55.219 19.22a2.667 2.667 0 0 0-3.771-3.771L24 42.895z",
  className: "icon-done_svg__fill"
})));
var _path$B;
function _extends$D() {
  return _extends$D = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$D.apply(null, arguments);
}
var SvgIconDoneAll = (props) => React2.createElement("svg", _extends$D({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$B || (_path$B = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M5.886 31.448 19.219 44.78a2.667 2.667 0 0 1-3.771 3.771L2.114 35.22a2.667 2.667 0 0 1 3.772-3.771zm52.228-16a2.666 2.666 0 1 1 3.772 3.771L32.552 48.552a2.665 2.665 0 0 1-3.771 0L15.448 35.22a2.665 2.665 0 0 1 0-3.771 2.665 2.665 0 0 1 3.771 0l11.448 11.447zm-9.562 0a2.665 2.665 0 0 1 0 3.771L32.556 35.215a2.665 2.665 0 0 1-3.771 0 2.664 2.664 0 0 1 0-3.77L44.78 15.447a2.665 2.665 0 0 1 3.771 0z",
  className: "icon-done-all_svg__fill"
})));
var _path$A;
function _extends$C() {
  return _extends$C = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$C.apply(null, arguments);
}
var SvgIconDownload = (props) => React2.createElement("svg", _extends$C({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$A || (_path$A = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 42.667a2.667 2.667 0 0 1 2.649 2.355l.018.311v8c0 4.26-3.33 7.743-7.53 7.987l-.47.013H13.333a8 8 0 0 1-7.986-7.53l-.014-.47v-8a2.667 2.667 0 0 1 5.316-.311l.018.311v8a2.67 2.67 0 0 0 2.355 2.65l.311.017h37.334a2.667 2.667 0 0 0 2.648-2.356l.018-.31v-8A2.667 2.667 0 0 1 56 42.667m-36.552-8.781a2.666 2.666 0 0 1 3.52-3.993l.251.221 6.114 6.114V5.333a2.667 2.667 0 0 1 5.316-.311l.018.311v30.894l6.114-6.113a2.67 2.67 0 0 1 3.52-.221l.251.221a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.658 10.657a2 2 0 0 1-.135.128l.127-.119a3 3 0 0 1-.195.176l-.056.045-.086.064-.056.04-.086.056-.06.036-.081.046-.079.04a3 3 0 0 1-.14.065l-.09.036q-.034.014-.067.025l-.09.03-.063.019q-.064.018-.13.034l-.013.003-.144.028-.064.01q-.045.008-.092.012l-.084.008-.103.006-.069.002h-.095q-.042 0-.082-.003l.139.003q-.126 0-.249-.011l-.061-.007-.092-.012-.09-.015-.118-.025-.04-.01a3 3 0 0 1-.34-.11l-.015-.006q-.074-.03-.145-.063l-.042-.02L30.71 45l-.067-.039q-.045-.026-.087-.054l-.062-.041q-.045-.03-.088-.063l-.04-.03-.008-.007a3 3 0 0 1-.251-.223z",
  className: "icon-download_svg__fill"
})));
var _path$z;
function _extends$B() {
  return _extends$B = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$B.apply(null, arguments);
}
var SvgIconEdit = (props) => React2.createElement("svg", _extends$B({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 65 65"
}, props), _path$z || (_path$z = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 56a2.667 2.667 0 0 1 .311 5.315l-.311.018H8a2.667 2.667 0 0 1-.311-5.316L8 56zM35.448 3.448a2.665 2.665 0 0 1 3.771 0l10.667 10.666a2.67 2.67 0 0 1 0 3.772L20.552 47.219c-.5.5-1.178.781-1.885.781H8a2.667 2.667 0 0 1-2.667-2.667V34.667c0-.708.281-1.386.781-1.886zm1.885 5.659L10.667 35.77v6.896h6.89L44.227 16z",
  className: "icon-edit_svg__fill"
})));
var _path$y;
function _extends$A() {
  return _extends$A = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$A.apply(null, arguments);
}
var SvgIconEmojiMore = (props) => React2.createElement("svg", _extends$A({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$y || (_path$y = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32.097 3.22c2.65 0 5.255.357 7.763 1.054a2.134 2.134 0 0 1-1.144 4.111 24.7 24.7 0 0 0-6.619-.899c-13.603 0-24.63 11.027-24.63 24.63s11.027 24.63 24.63 24.63 24.63-11.027 24.63-24.63c0-2.227-.295-4.413-.87-6.518a2.13 2.13 0 0 1 1.494-2.62 2.13 2.13 0 0 1 2.62 1.494 29 29 0 0 1 1.023 7.644c0 15.96-12.938 28.897-28.897 28.897-15.96 0-28.897-12.937-28.897-28.897S16.138 3.22 32.097 3.22m10.705 34.792a2.133 2.133 0 0 1 2.024 2.808c-1.873 5.623-6.937 9.488-12.729 9.488s-10.856-3.865-12.73-9.488a2.134 2.134 0 0 1 1.875-2.803l.15-.005zm-3.477 4.266H24.867l.294.382c1.539 1.887 3.718 3.113 6.115 3.342l.314.024.507.015c2.617 0 5.037-1.188 6.743-3.151l.193-.23zM21.392 21.954c1.087 0 1.985.814 2.116 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.134-2.133m21.41 0c1.088 0 1.985.814 2.117 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.133-2.133M54.853 0a.8.8 0 0 1 .8.8v7.786h7.76a.8.8 0 0 1 .8.8v2.667a.8.8 0 0 1-.8.8h-7.76v7.758a.8.8 0 0 1-.8.8h-2.666a.8.8 0 0 1-.8-.8v-7.758h-7.785a.8.8 0 0 1-.8-.8V9.387a.8.8 0 0 1 .8-.8l7.784-.001V.8a.8.8 0 0 1 .8-.8z",
  className: "icon-emoji-more_svg__fill"
})));
var _path$x;
function _extends$z() {
  return _extends$z = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$z.apply(null, arguments);
}
var SvgIconError = (props) => React2.createElement("svg", _extends$z({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$x || (_path$x = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.06a8 8 0 0 1 6.561 3.424l.287.439 22.608 37.744a8 8 0 0 1 .022 7.962 8 8 0 0 1-6.356 4.014l-.535.024H9.384a8 8 0 0 1-6.862-4.038 8.01 8.01 0 0 1-.226-7.493l.27-.506L25.16 8.91A8 8 0 0 1 32 5.06m0 5.333c-.816 0-1.58.372-2.076.99l-.196.28-22.565 37.67a2.67 2.67 0 0 0 1.909 3.973l.341.027h45.144a2.67 2.67 0 0 0 2.45-3.659l-.148-.304L34.28 11.676A2.67 2.67 0 0 0 32 10.393m0 32.274A2.667 2.667 0 1 1 32 48a2.667 2.667 0 0 1 0-5.333m0-21.334a2.667 2.667 0 0 1 2.649 2.356l.018.311v10.667a2.667 2.667 0 0 1-5.316.311l-.018-.311V24A2.667 2.667 0 0 1 32 21.333",
  className: "icon-error_svg__fill"
})));
var _path$w;
function _extends$y() {
  return _extends$y = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$y.apply(null, arguments);
}
var SvgIconExpand = (props) => React2.createElement("svg", _extends$y({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$w || (_path$w = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M48 8a2.667 2.667 0 0 1 2.649 2.356l.018.31V32l-.001.027v21.306a2.667 2.667 0 0 1-5.315.311l-.018-.31V34.665H19.772l6.114 6.115a2.67 2.67 0 0 1 .221 3.52l-.221.251a2.666 2.666 0 0 1-3.52.222l-.252-.222-10.666-10.666a2.666 2.666 0 0 1-.222-3.52l.222-.252 10.666-10.666a2.666 2.666 0 0 1 3.993 3.52l-.221.251-6.113 6.114h25.56V10.667A2.667 2.667 0 0 1 48 8",
  className: "icon-expand_svg__fill"
})));
var _path$v;
function _extends$x() {
  return _extends$x = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$x.apply(null, arguments);
}
var SvgIconFileAudio = (props) => React2.createElement("svg", _extends$x({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$v || (_path$v = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M30.52 12.51c1.685-1.226 4.139-.103 4.139 1.893v35.194c0 1.996-2.454 3.119-4.138 1.893l-12.45-9.909H7.898c-1.416 0-2.564-1.074-2.564-2.399V24.818c0-1.325 1.148-2.4 2.564-2.4h10.175zm20.427.163c10.293 10.667 10.293 27.987 0 38.654a2.137 2.137 0 0 1-3.156-.047c-.86-.942-.84-2.448.044-3.364 8.49-8.799 8.49-23.033 0-31.832-.884-.916-.904-2.422-.044-3.364a2.137 2.137 0 0 1 3.156-.047m-8.492 8.799c5.597 5.8 5.597 15.231 0 21.031a2.136 2.136 0 0 1-3.156-.046c-.86-.942-.84-2.448.044-3.364 3.794-3.932 3.794-10.279 0-14.211-.884-.916-.904-2.422-.044-3.363a2.136 2.136 0 0 1 3.156-.047",
  className: "icon-file-audio_svg__fill"
})));
var _path$u;
function _extends$w() {
  return _extends$w = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$w.apply(null, arguments);
}
var SvgIconFileDocument = (props) => React2.createElement("svg", _extends$w({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$u || (_path$u = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M39.414 6.4a2.4 2.4 0 0 1 1.71.701l12.642 12.75c.407.41.634.953.634 1.516v29.765c0 3.542-4.342 6.468-8 6.468H16.16c-3.658 0-6.4-2.926-6.4-6.468L9.6 12.868c0-3.542 2.902-6.468 6.56-6.468zm3.331 35.173-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m0-8.533-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m-11.807-8.507h-9.6l-.153.006a2.15 2.15 0 0 0-1.985 2.154c0 1.193.957 2.16 2.138 2.16h9.6l.152-.005a2.15 2.15 0 0 0 1.985-2.155c0-1.193-.957-2.16-2.137-2.16",
  className: "icon-file-document_svg__fill"
})));
var _path$t;
function _extends$v() {
  return _extends$v = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$v.apply(null, arguments);
}
var SvgIconFreeze = (props) => React2.createElement("svg", _extends$v({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$t || (_path$t = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m41.636 3.226.251.222a2.67 2.67 0 0 1 .222 3.52l-.222.251-7.219 7.218V27.38l11.209-6.472 2.643-9.86a2.667 2.667 0 0 1 5.218 1.051l-.067.329-2.237 8.35 8.352 2.24a2.67 2.67 0 0 1 1.952 2.938l-.067.328a2.67 2.67 0 0 1-2.937 1.952l-.329-.066-9.861-2.643L37.334 32l11.209 6.47 9.862-2.64.329-.067a2.67 2.67 0 0 1 2.937 1.952l.067.328a2.67 2.67 0 0 1-1.952 2.938l-8.353 2.237 2.238 8.353.067.329a2.666 2.666 0 0 1-5.218 1.052l-2.643-9.861-11.209-6.472v12.944l7.219 7.218a2.667 2.667 0 0 1-3.52 3.993l-.251-.222L32 54.437l-6.114 6.115a2.666 2.666 0 0 1-3.52.222l-.251-.222a2.666 2.666 0 0 1-.222-3.52l.222-.251 7.218-7.22V36.62l-11.209 6.47-2.642 9.863a2.666 2.666 0 0 1-5.218-1.052l.067-.329 2.236-8.351-8.35-2.24a2.665 2.665 0 0 1-1.953-2.937l.067-.328a2.665 2.665 0 0 1 2.937-1.952l.329.066 9.861 2.642L26.667 32l-11.209-6.472-9.86 2.643-.329.066a2.665 2.665 0 0 1-2.937-1.952l-.067-.328a2.67 2.67 0 0 1 1.952-2.938l8.35-2.239-2.235-8.351-.067-.329a2.667 2.667 0 0 1 5.218-1.052l2.642 9.862 11.209 6.47V14.439L22.116 7.22a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 6.114 6.112 6.115-6.112a2.666 2.666 0 0 1 3.52-.222z",
  className: "icon-freeze_svg__fill"
})));
var _path$s;
function _extends$u() {
  return _extends$u = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$u.apply(null, arguments);
}
var SvgIconGif = (props) => React2.createElement("svg", _extends$u({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$s || (_path$s = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.664 45.333q3.233 0 5.89-.953 2.658-.954 4.113-2.683V31.34h-10.29v3.94h4.902v4.474q-1.292 1.284-4.327 1.283-3.017 0-4.58-2.085-1.561-2.085-1.562-6.168v-1.657q.018-4.047 1.455-6.097t4.184-2.05q2.155 0 3.385 1.034t1.59 3.262h5.243q-.486-4.206-3.107-6.408t-7.273-2.201q-3.34 0-5.827 1.506t-3.807 4.35q-1.32 2.843-1.32 6.728v1.765q.036 3.78 1.428 6.578 1.392 2.797 3.95 4.269 2.56 1.47 5.953 1.47m20.67 0V18.667H32v26.666h5.333zm10.396 0V34.436h9.721v-4.432H47.73v-6.887h10.937v-4.45h-16v26.666z",
  className: "icon-gif_svg__fill"
})));
var _path$r;
function _extends$t() {
  return _extends$t = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$t.apply(null, arguments);
}
var SvgIconInfo = (props) => React2.createElement("svg", _extends$t({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$r || (_path$r = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m1.667 21.333a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3.334a1 1 0 0 1-1-1v-14a1 1 0 0 1 1-1zm-1.667-8a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-info_svg__fill"
})));
var _path$q;
function _extends$s() {
  return _extends$s = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$s.apply(null, arguments);
}
var SvgIconLeave = (props) => React2.createElement("svg", _extends$s({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$q || (_path$q = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.333a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a2.67 2.67 0 0 0-2.65 2.355L8 13.333v37.334a2.667 2.667 0 0 0 2.356 2.648l.31.018H32a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a8 8 0 0 1-7.987-7.53l-.013-.47V13.333a8 8 0 0 1 7.53-7.986l.47-.014zm17.634 13.893.252.222 10.666 10.666a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.666 10.666a2.666 2.666 0 0 1-3.993-3.52l.221-.251 4.78-4.782L20 36a2.667 2.667 0 0 1-.311-5.315l.311-.018h33.56l-7.446-7.448a2.67 2.67 0 0 1-.221-3.52l.221-.251a2.666 2.666 0 0 1 3.52-.222",
  className: "icon-leave_svg__fill"
})));
var _path$p;
function _extends$r() {
  return _extends$r = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$r.apply(null, arguments);
}
var SvgIconMembers = (props) => React2.createElement("svg", _extends$r({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$p || (_path$p = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L42.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H13.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L0 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM54 37.765a13.33 13.33 0 0 1 9.986 12.297l.014.605V56a2.667 2.667 0 0 1-5.315.311L58.667 56v-5.331a8 8 0 0 0-6-7.74A2.667 2.667 0 1 1 54 37.765M24 5.333c7.364 0 13.333 5.97 13.333 13.334S31.363 32 24 32s-13.333-5.97-13.333-13.333S16.637 5.333 24 5.333m19.328.43a13.333 13.333 0 0 1 0 25.834 2.667 2.667 0 1 1-1.323-5.167 8 8 0 0 0 0-15.5 2.667 2.667 0 1 1 1.323-5.167M24 10.667a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-members_svg__fill"
})));
var _path$o;
function _extends$q() {
  return _extends$q = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$q.apply(null, arguments);
}
var SvgIconMessage = (props) => React2.createElement("svg", _extends$q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$o || (_path$o = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8M18.667 29.333a2.667 2.667 0 1 1-.001 5.333 2.667 2.667 0 0 1 .001-5.333m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-message_svg__fill"
})));
var _path$n;
function _extends$p() {
  return _extends$p = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$p.apply(null, arguments);
}
var SvgIconModerations = (props) => React2.createElement("svg", _extends$p({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$n || (_path$n = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M18.667 34.667a2.667 2.667 0 0 1 .311 5.316l-.311.017h-5.334v16a2.667 2.667 0 0 1-5.316.311L8 56V40H2.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h16zM32 29.333a2.667 2.667 0 0 1 2.649 2.356l.018.311v24a2.667 2.667 0 0 1-5.316.311L29.333 56V32A2.667 2.667 0 0 1 32 29.333M61.333 40a2.667 2.667 0 0 1 .311 5.315l-.31.018h-5.335L56 56a2.667 2.667 0 0 1-5.315.311L50.667 56l-.001-10.668-5.333.001a2.667 2.667 0 0 1-.311-5.316l.311-.017zm-8-34.667a2.67 2.67 0 0 1 2.65 2.356L56 8v24a2.667 2.667 0 0 1-5.315.311L50.667 32V8a2.667 2.667 0 0 1 2.666-2.667m-42.666 0a2.667 2.667 0 0 1 2.648 2.356l.018.311v18.667a2.667 2.667 0 0 1-5.316.311L8 26.667V8a2.667 2.667 0 0 1 2.667-2.667m21.333 0a2.667 2.667 0 0 1 2.649 2.356l.018.311-.001 10.666H40a2.668 2.668 0 0 1 .311 5.317L40 24H24a2.667 2.667 0 0 1-.311-5.315l.311-.018h5.333V8A2.667 2.667 0 0 1 32 5.333",
  className: "icon-moderations_svg__fill"
})));
var _path$m;
function _extends$o() {
  return _extends$o = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$o.apply(null, arguments);
}
var SvgIconMore = (props) => React2.createElement("svg", _extends$o({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$m || (_path$m = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 45.333a5.333 5.333 0 1 1 0 10.666 5.333 5.333 0 0 1 0-10.666M32 28a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 28m0-17.333c2.946 0 5.333 2.387 5.333 5.333S34.946 21.333 32 21.333 26.667 18.946 26.667 16s2.387-5.333 5.333-5.333",
  className: "icon-more_svg__fill"
})));
var _path$l;
function _extends$n() {
  return _extends$n = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$n.apply(null, arguments);
}
var SvgIconMute = (props) => React2.createElement("svg", _extends$n({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$l || (_path$l = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.62 19.616.067.123A26.55 26.55 0 0 1 58.667 32c0 4.326-1.03 8.41-2.864 12.025q-1.518 4.089-.67 6.363 1.066 2.855 2.662 4.758 2.31 2.379-1.506 3.33-3.135.782-10.879-1.646l-.488-.155-1.594-.527A26.6 26.6 0 0 1 32 58.667a26.55 26.55 0 0 1-12.326-3.014l-.059-.03 4-4A21.2 21.2 0 0 0 32 53.333c2.993 0 5.89-.614 8.562-1.786l.498-.226 1.925-.905 3.613 1.196.695.219q1.093.337 2.054.595l.472.125.485.121-.167-.42-.2-.594c-.814-2.685-.484-5.681.713-9.065l.154-.425.106-.284.528-1.084a21.2 21.2 0 0 0 1.895-8.8 21.2 21.2 0 0 0-1.71-8.385zm2.266-13.502a2.67 2.67 0 0 1 .221 3.52l-.221.252-48 48a2.668 2.668 0 0 1-3.993-3.52l.221-.252 5.238-5.237a26.56 26.56 0 0 1-6.015-16.412L5.333 32C5.333 17.272 17.273 5.333 32 5.333a26.55 26.55 0 0 1 16.877 6.02l5.237-5.239a2.67 2.67 0 0 1 3.772 0M32 10.667c-11.782 0-21.333 9.55-21.333 21.333 0 4.836 1.614 9.401 4.48 13.084l29.936-29.938A21.25 21.25 0 0 0 32 10.666z",
  className: "icon-mute_svg__fill"
})));
var _path$k;
function _extends$m() {
  return _extends$m = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$m.apply(null, arguments);
}
var SvgIconNotifications = (props) => React2.createElement("svg", _extends$m({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$k || (_path$k = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c11.56 0 20.972 9.194 21.323 20.669l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H5.333l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333M32 8c-8.636 0-15.674 6.842-15.989 15.4L16 24v13.333c0 1.562-.336 3.046-.939 4.383l-.275.564-.218.387h34.861l-.215-.387a10.6 10.6 0 0 1-1.146-3.74l-.055-.674-.013-.533V24c0-8.837-7.163-16-16-16",
  className: "icon-notifications_svg__fill"
})));
var _path$j;
function _extends$l() {
  return _extends$l = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$l.apply(null, arguments);
}
var SvgIconNotificationsOffFilled = (props) => React2.createElement("svg", _extends$l({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$j || (_path$j = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c7.173 0 13.52 3.54 17.387 8.97l5.686-5.687a2.105 2.105 0 0 1 2.85-.117l.127.117a2.105 2.105 0 0 1 0 2.977L8.927 58.05c-.78.781-2.023.82-2.85.117l-.127-.117a2.105 2.105 0 0 1 0-2.977L13.023 48h-7.69l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333m20.85 16.795c.271 1.253.433 2.548.473 3.874l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H24.31z",
  className: "icon-notifications-off-filled_svg__fill"
})));
var _path$i;
function _extends$k() {
  return _extends$k = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$k.apply(null, arguments);
}
var SvgIconOperator = (props) => React2.createElement("svg", _extends$k({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$i || (_path$i = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M29.83 6.45a2.667 2.667 0 0 1 4.34 0l11.697 16.374L57 13.918c1.88-1.504 4.573.054 4.32 2.35l-.047.29-8 37.334A2.666 2.666 0 0 1 50.666 56H13.333a2.666 2.666 0 0 1-2.607-2.108l-8-37.333c-.525-2.452 2.315-4.207 4.273-2.641l11.132 8.906zM32 12.587l-11.163 15.63a2.667 2.667 0 0 1-3.836.532l-7.497-5.997 5.984 27.915h33.021l5.984-27.915L47 28.749a2.667 2.667 0 0 1-3.632-.281l-.204-.251zM32 32a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 32",
  className: "icon-operator_svg__fill"
})));
var _path$h;
function _extends$j() {
  return _extends$j = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$j.apply(null, arguments);
}
var SvgIconPhoto = (props) => React2.createElement("svg", _extends$j({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$h || (_path$h = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm-8 25.107L19.77 53.332l30.896.001a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.564L42.666 30.44zm8-19.773H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.119 1.731 2.498L40.781 24.78a2.67 2.67 0 0 1 3.52-.222l.251.222 8.78 8.78.001-20.228a2.667 2.667 0 0 0-2.498-2.661zm-28 5.333a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667",
  className: "icon-photo_svg__fill"
})));
var _path$g;
function _extends$i() {
  return _extends$i = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$i.apply(null, arguments);
}
var SvgIconPlay = (props) => React2.createElement("svg", _extends$i({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$g || (_path$g = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M51.908 34.75c1.9-1.233 1.896-3.26.013-4.514L19.376 8.577c-1.893-1.26-3.404-.391-3.376 1.968l.522 42.888c.028 2.347 1.596 3.247 3.493 2.016z",
  className: "icon-play_svg__fill"
})));
var _path$f;
function _extends$h() {
  return _extends$h = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$h.apply(null, arguments);
}
var SvgIconPlus = (props) => React2.createElement("svg", _extends$h({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$f || (_path$f = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 29.333h18.666c3.556 0 3.556 5.334 0 5.334H34.667v18.666c0 3.556-5.334 3.556-5.334 0V34.667H10.667c-3.556 0-3.556-5.334 0-5.334h18.666V10.667c0-3.556 5.334-3.556 5.334 0z",
  className: "icon-plus_svg__fill"
})));
var _path$e;
function _extends$g() {
  return _extends$g = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$g.apply(null, arguments);
}
var SvgIconQuestion = (props) => React2.createElement("svg", _extends$g({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$e || (_path$e = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C15.8 61.333 2.667 48.2 2.667 32S15.8 2.667 32 2.667 61.333 15.8 61.333 32 48.2 61.333 32 61.333M32 56c13.255 0 24-10.745 24-24S45.255 8 32 8 8 18.745 8 32s10.745 24 24 24m2.213-18.63a2.667 2.667 0 1 1-5.333 0v-2.69c0-1.148.734-2.168 1.823-2.53.173-.058.532-.195 1.01-.407.809-.36 1.616-.79 2.354-1.282 1.835-1.223 2.813-2.528 2.813-3.786a5.333 5.333 0 0 0-10.364-1.777 2.667 2.667 0 0 1-5.032-1.77 10.668 10.668 0 0 1 20.729 3.551c0 3.413-2.022 6.109-5.187 8.22a21 21 0 0 1-2.813 1.578zm-5.333 7.523a2.667 2.667 0 1 1 5.333 0v.44a2.667 2.667 0 1 1-5.333 0v-.44",
  className: "icon-question_svg__fill"
})));
var _path$d;
function _extends$f() {
  return _extends$f = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$f.apply(null, arguments);
}
var SvgIconRefresh = (props) => React2.createElement("svg", _extends$f({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$d || (_path$d = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m46.14 14.43.562.537 6.631 6.167v-7.8a2.67 2.67 0 0 1 2.356-2.65l.311-.017a2.667 2.667 0 0 1 2.649 2.355l.018.311v16a2.67 2.67 0 0 1-2.356 2.65L56 32H40a2.667 2.667 0 0 1-.311-5.315l.311-.018h11.452l-8.44-7.85c-5.964-5.893-15.168-7.182-22.563-3.156-7.38 4.018-11.172 12.357-9.314 20.455 1.859 8.107 8.935 14.032 17.362 14.518 8.43.487 16.162-4.585 18.967-12.426a2.667 2.667 0 0 1 5.022 1.797C48.88 50.082 38.973 56.582 28.19 55.959c-10.785-.623-19.862-8.222-22.254-18.65C3.542 26.872 8.426 16.135 17.9 10.977c9.227-5.024 20.65-3.579 28.241 3.453z",
  className: "icon-refresh_svg__fill"
})));
var _path$c;
function _extends$e() {
  return _extends$e = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$e.apply(null, arguments);
}
var SvgIconRemove = (props) => React2.createElement("svg", _extends$e({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$c || (_path$c = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667m9.886 19.447a2.67 2.67 0 0 0-3.772 0L32 28.23l-6.114-6.115-.134-.124a2.667 2.667 0 0 0-3.638.124l-.124.134a2.667 2.667 0 0 0 .124 3.638L28.23 32l-6.115 6.114-.124.134a2.667 2.667 0 0 0 .124 3.638l.134.124a2.667 2.667 0 0 0 3.638-.124L32 35.77l6.114 6.115.134.124a2.667 2.667 0 0 0 3.638-.124l.124-.134a2.667 2.667 0 0 0-.124-3.638L35.77 32l6.115-6.114.124-.134a2.667 2.667 0 0 0-.124-3.638z",
  className: "icon-remove_svg__fill"
})));
var _path$b;
function _extends$d() {
  return _extends$d = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$d.apply(null, arguments);
}
var SvgIconReplyFilled = (props) => React2.createElement("svg", _extends$d({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 12 12"
}, props), _path$b || (_path$b = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.774 10.5c.062 0 .12-.025.164-.07a.22.22 0 0 0 .062-.164c-.069-1.447-.495-2.678-1.268-3.66-.618-.785-1.455-1.409-2.49-1.855a9.3 9.3 0 0 0-2.406-.655 10 10 0 0 0-.862-.078V2.225a.23.23 0 0 0-.128-.203.23.23 0 0 0-.24.028L.084 5.692A.22.22 0 0 0 0 5.865c0 .068.03.132.082.175l4.523 3.737c.067.056.16.068.24.03a.22.22 0 0 0 .13-.202v-1.95c1.134-.08 2.178.003 3.107.25a6.4 6.4 0 0 1 2.087.96c1.018.724 1.398 1.5 1.401 1.507a.23.23 0 0 0 .204.128",
  className: "icon-reply-filled_svg__fill"
})));
var _path$a;
function _extends$c() {
  return _extends$c = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$c.apply(null, arguments);
}
var SvgIconSearch = (props) => React2.createElement("svg", _extends$c({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$a || (_path$a = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M26.667 48C14.885 48 5.333 38.449 5.333 26.667S14.885 5.333 26.667 5.333 48 14.885 48 26.667c0 4.93-1.672 9.469-4.48 13.081l13.67 13.67a2.668 2.668 0 0 1-3.772 3.772l-13.67-13.67A21.24 21.24 0 0 1 26.667 48m0-5.333c8.836 0 16-7.164 16-16s-7.164-16-16-16-16 7.163-16 16 7.163 16 16 16",
  className: "icon-search_svg__fill"
})));
var _path$9;
function _extends$b() {
  return _extends$b = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$b.apply(null, arguments);
}
var SvgIconSend = (props) => React2.createElement("svg", _extends$b({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$9 || (_path$9 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M59.795 29.43 7.329 2.979C4.691 1.802 1.76 4.153 2.932 6.798l6.925 18.609a2 2 0 0 0 1.544 1.275l32.273 5.394L11.4 37.47a2 2 0 0 0-1.544 1.275L2.932 57.353c-.879 2.645 1.76 4.997 4.397 3.527l52.466-26.453c2.051-.882 2.051-3.82 0-4.996z",
  className: "icon-send_svg__fill"
})));
var _path$8;
function _extends$a() {
  return _extends$a = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$a.apply(null, arguments);
}
var SvgIconSettingsFilled = (props) => React2.createElement("svg", _extends$a({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$8 || (_path$8 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667A5.33 5.33 0 0 1 37.333 8v.24A4.4 4.4 0 0 0 40 12.267a4.4 4.4 0 0 0 4.853-.88l.16-.16a5.33 5.33 0 0 1 7.547 0 5.333 5.333 0 0 1 0 7.546l-.16.16a4.4 4.4 0 0 0-.88 4.854V24a4.4 4.4 0 0 0 4.027 2.667H56c2.946 0 5.333 2.387 5.333 5.333S58.946 37.333 56 37.333h-.24A4.4 4.4 0 0 0 51.733 40a4.4 4.4 0 0 0 .88 4.853l.16.16a5.33 5.33 0 0 1 0 7.547 5.333 5.333 0 0 1-7.546 0l-.16-.16a4.4 4.4 0 0 0-4.854-.88 4.4 4.4 0 0 0-2.666 4.027V56a5.333 5.333 0 0 1-10.667 0v-.24A4.4 4.4 0 0 0 24 51.733a4.4 4.4 0 0 0-4.853.88l-.16.16a5.33 5.33 0 0 1-7.547 0 5.333 5.333 0 0 1 0-7.546l.16-.16a4.4 4.4 0 0 0 .88-4.854 4.4 4.4 0 0 0-4.027-2.666H8A5.333 5.333 0 0 1 8 26.88h.24A4.4 4.4 0 0 0 12.267 24a4.4 4.4 0 0 0-.88-4.853l-.16-.16a5.33 5.33 0 0 1 0-7.547 5.333 5.333 0 0 1 7.546 0l.16.16a4.4 4.4 0 0 0 4.854.88H24a4.4 4.4 0 0 0 2.667-4.027V8A5.33 5.33 0 0 1 32 2.667M32 24a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-settings-filled_svg__fill"
})));
var _path$7;
function _extends$9() {
  return _extends$9 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$9.apply(null, arguments);
}
var SvgIconSlideLeft = (props) => React2.createElement("svg", _extends$9({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 32 32"
}, props), _path$7 || (_path$7 = React2.createElement("path", {
  d: "M21.943 24.39a1.333 1.333 0 0 1-1.886 1.886l-9.333-9.333a1.333 1.333 0 0 1 0-1.886l9.333-9.333a1.333 1.333 0 1 1 1.886 1.885L13.553 16z",
  className: "icon-slide-left_svg__fill",
  clipRule: "evenodd"
})));
var _path$6;
function _extends$8() {
  return _extends$8 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$8.apply(null, arguments);
}
var SvgIconSpinner = (props) => React2.createElement("svg", _extends$8({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$6 || (_path$6 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C48.2 61.333 61.333 48.2 61.333 32S48.2 2.667 32 2.667 2.667 15.8 2.667 32a2.838 2.838 0 1 0 5.678 0C8.344 18.935 18.934 8.344 32 8.344c13.065 0 23.656 10.591 23.656 23.656S45.065 55.656 32 55.656a2.838 2.838 0 1 0 0 5.677",
  className: "icon-spinner_svg__fill"
})));
var _path$5;
function _extends$7() {
  return _extends$7 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$7.apply(null, arguments);
}
var SvgIconSupergroup = (props) => React2.createElement("svg", _extends$7({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$5 || (_path$5 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.889 43.013c6.608 0 12.121 4.685 12.43 10.734l.014.537V58a2.667 2.667 0 0 1-5.316.311L44 58v-3.716c0-3.07-2.87-5.718-6.636-5.925l-.475-.013H27.11c-3.838 0-6.86 2.525-7.096 5.557l-.015.381V58a2.667 2.667 0 0 1-5.315.311L14.667 58v-3.716c0-6.126 5.324-10.986 11.864-11.26l.58-.011zm18.578-17.291q.401 0 .784.118c4.632 1.426 7.518 4.801 7.736 9.688l.013.594v12.8a2.667 2.667 0 0 1-5.315.311l-.018-.311V36.124c-.002-2.595-1.163-4.171-3.528-5.034l-.104-.037-2.502.002a2.667 2.667 0 0 1-2.648-2.356l-.018-.31a2.67 2.67 0 0 1 2.355-2.65l.311-.017zm-44 0 .31.018a2.666 2.666 0 0 1 2.356 2.648l-.018.311a2.666 2.666 0 0 1-2.648 2.356l-2.51-.002-.119.042c-2.246.85-3.503 2.574-3.505 5.147v12.68l-.018.31A2.666 2.666 0 0 1 0 48.922V36.24l.014-.591c.225-4.874 3.203-8.415 7.712-9.809q.384-.117.788-.118zM32 19.958c5.512 0 10 4.409 10 9.871s-4.488 9.872-10 9.872-10-4.41-10-9.872 4.488-9.871 10-9.871m0 5.333c-2.588 0-4.667 2.043-4.667 4.538s2.08 4.538 4.667 4.538c2.588 0 4.667-2.042 4.667-4.538 0-2.495-2.08-4.538-4.667-4.538M17.333 2.667c5.513 0 10 4.409 10 9.871s-4.487 9.871-10 9.871c-5.512 0-10-4.409-10-9.871s4.488-9.871 10-9.871m29.334 0c5.512 0 10 4.409 10 9.871s-4.488 9.871-10 9.871c-5.513 0-10-4.409-10-9.871s4.487-9.871 10-9.871M17.333 8c-2.587 0-4.666 2.042-4.666 4.538s2.079 4.538 4.666 4.538S22 15.034 22 12.538 19.921 8 17.333 8m29.334 0C44.079 8 42 10.042 42 12.538s2.079 4.538 4.667 4.538 4.666-2.042 4.666-4.538S49.254 8 46.667 8",
  className: "icon-supergroup_svg__fill"
})));
var _path$4;
var _path2;
function _extends$6() {
  return _extends$6 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$6.apply(null, arguments);
}
var SvgIconThread = (props) => React2.createElement("svg", _extends$6({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _path$4 || (_path$4 = React2.createElement("path", {
  d: "M38.824 25.895a2.95 2.95 0 0 1 4.16-.074L57.1 39.378a2.92 2.92 0 0 1 .002 4.213L42.985 57.177a2.95 2.95 0 0 1-4.158-.07 2.92 2.92 0 0 1 .07-4.14l11.928-11.48-11.926-11.451a2.92 2.92 0 0 1-.075-4.14",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})), _path2 || (_path2 = React2.createElement("path", {
  d: "M8.866 6c1.583 0 2.866 1.216 2.866 2.716V25.5c0 7.672 6.846 14.068 15.475 14.068h22.927c1.583 0 2.866 1.216 2.866 2.716S51.717 45 50.134 45H27.207C15.604 45 6 36.35 6 25.5V8.716C6 7.216 7.283 6 8.866 6",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})));
var _path$3;
function _extends$5() {
  return _extends$5 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$5.apply(null, arguments);
}
var SvgIconThumbnailNone = (props) => React2.createElement("svg", _extends$5({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$3 || (_path$3 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 5.333a2.667 2.667 0 0 1 0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.118 1.73 2.497l28.384-28.383a2.667 2.667 0 0 1 3.771 0l8.781 8.78v-4.228a2.667 2.667 0 0 1 2.498-2.661l.169-.005a2.667 2.667 0 0 1 2.667 2.666v21.334a8 8 0 0 1-8 8H13.33a8 8 0 0 1-7.998-8V13.333a8 8 0 0 1 8-8zm8 25.105L19.77 53.333h30.897a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.563zM22.667 16a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667M56.78 3.448a2.665 2.665 0 0 1 3.771 0 2.665 2.665 0 0 1 0 3.771l-4.782 4.78 4.782 4.782c.998.998 1.04 2.59.125 3.638l-.125.133a2.665 2.665 0 0 1-3.771 0l-4.782-4.781-4.78 4.781a2.667 2.667 0 0 1-3.638.125l-.133-.125a2.665 2.665 0 0 1 0-3.771L48.228 12l-4.78-4.781a2.667 2.667 0 0 1-.125-3.638l.125-.133a2.665 2.665 0 0 1 3.771 0l4.78 4.78z",
  className: "icon-thumbnail-none_svg__fill"
})));
var _g$1;
function _extends$4() {
  return _extends$4 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$4.apply(null, arguments);
}
var SvgIconToggleoff = (props) => React2.createElement("svg", _extends$4({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g$1 || (_g$1 = React2.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, React2.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleoff_svg__fill",
  rx: 20
}), React2.createElement("circle", {
  cx: 24,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), React2.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), React2.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleoff_svg__fill"
}))));
var _g;
function _extends$3() {
  return _extends$3 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$3.apply(null, arguments);
}
var SvgIconToggleon = (props) => React2.createElement("svg", _extends$3({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g || (_g = React2.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, React2.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleon_svg__fill",
  rx: 20
}), React2.createElement("circle", {
  cx: 64,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), React2.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), React2.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleon_svg__fill"
}))));
var _path$2;
function _extends$2() {
  return _extends$2 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$2.apply(null, arguments);
}
var SvgIconUser = (props) => React2.createElement("svg", _extends$2({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$2 || (_path$2 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M42.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L50.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H21.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L8 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM32 5.333c7.364 0 13.333 5.97 13.333 13.334S39.363 32 32 32s-13.333-5.97-13.333-13.333S24.637 5.333 32 5.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-user_svg__fill"
})));
var _path$1;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$1.apply(null, arguments);
}
var SvgIconFeedbackLike = (props) => React2.createElement("svg", _extends$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path$1 || (_path$1 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.346 5.336v-.001c.405-.523 1.182-.524 1.58-.037.162.2.25.443.25.69v3.678c0 .518.42.938.938.938H18.6c.359 0 .7.179.911.488l.001.001.369.548.003.004c.174.256.226.583.134.895l-1.532 5.316c-.131.459-.559.782-1.044.782h-7.075c-.3 0-.593-.127-.8-.345l-1.13-1.222v-6.647zm-4.73 3.078 3.245-4.223.002-.002c1.125-1.456 3.339-1.521 4.517-.075.421.52.671 1.177.671 1.874v2.74h2.55c.99 0 1.908.496 2.462 1.31l.002.004.368.547.002.002a2.93 2.93 0 0 1 .382 2.475v.003l-1.528 5.302a2.96 2.96 0 0 1-2.847 2.142h-7.075a2.99 2.99 0 0 1-2.166-.935l-.007-.007-.066-.072a2.13 2.13 0 0 1-1.821 1.025H4.192a2.13 2.13 0 0 1-2.13-2.13v-8.3a2.13 2.13 0 0 1 2.13-2.13h2.115c.493 0 .948.168 1.31.45m-3.678 1.68c0-.141.114-.255.254-.255h2.115c.14 0 .254.114.254.255v8.3c0 .14-.114.255-.254.255H4.192a.255.255 0 0 1-.255-.255z",
  clipRule: "evenodd"
})));
var _path;
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t4 = arguments[e2];
      for (var r2 in t4)
        ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends.apply(null, arguments);
}
var SvgIconFeedbackDislike = (props) => React2.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path || (_path = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.654 18.664v.001c-.405.523-1.182.524-1.58.037-.162-.2-.25-.444-.25-.69v-3.678a.94.94 0 0 0-.938-.938H5.4c-.359 0-.7-.179-.911-.488l-.001-.001-.369-.548-.003-.004a1.05 1.05 0 0 1-.134-.895l1.532-5.316c.131-.459.559-.782 1.044-.782h7.075c.3 0 .593.127.8.345l1.13 1.222v6.647zm4.73-3.078-3.245 4.223-.002.002c-1.125 1.456-3.339 1.521-4.517.075a2.98 2.98 0 0 1-.671-1.874v-2.74h-2.55c-.99 0-1.908-.496-2.462-1.31l-.002-.004-.368-.547-.002-.002a2.93 2.93 0 0 1-.382-2.475v-.003L3.711 5.63a2.96 2.96 0 0 1 2.847-2.142h7.075c.823 0 1.608.345 2.166.935l.007.007.066.072a2.13 2.13 0 0 1 1.821-1.025h2.115a2.13 2.13 0 0 1 2.13 2.13v8.3a2.13 2.13 0 0 1-2.13 2.13h-2.115a2.12 2.12 0 0 1-1.31-.45m3.678-1.68c0 .141-.114.255-.254.255h-2.115a.255.255 0 0 1-.255-.255v-8.3c0-.14.115-.255.255-.255h2.115c.14 0 .255.114.255.255z",
  clipRule: "evenodd"
})));
function changeTypeToIconComponent(type) {
  switch (type) {
    case Types.ADD:
      return import_react18.default.createElement(SvgIconAdd, null);
    case Types.ARROW_LEFT:
      return import_react18.default.createElement(SvgIconArrowLeft, null);
    case Types.ATTACH:
      return import_react18.default.createElement(SvgIconAttach, null);
    case Types.AUDIO_ON_LINED:
      return import_react18.default.createElement(SvgIconAudioOnLined, null);
    case Types.BAN:
      return import_react18.default.createElement(SvgIconBan, null);
    case Types.BROADCAST:
      return import_react18.default.createElement(SvgIconBroadcast, null);
    case Types.CAMERA:
      return import_react18.default.createElement(SvgIconCamera, null);
    case Types.CHANNELS:
      return import_react18.default.createElement(SvgIconChannels, null);
    case Types.CHAT:
      return import_react18.default.createElement(SvgIconChat, null);
    case Types.CHAT_FILLED:
      return import_react18.default.createElement(SvgIconChatFilled, null);
    case Types.CHEVRON_DOWN:
      return import_react18.default.createElement(SvgIconChevronDown, null);
    case Types.CHEVRON_RIGHT:
      return import_react18.default.createElement(SvgIconChevronRight, null);
    case Types.CLOSE:
      return import_react18.default.createElement(SvgIconClose, null);
    case Types.COLLAPSE:
      return import_react18.default.createElement(SvgIconCollapse, null);
    case Types.COPY:
      return import_react18.default.createElement(SvgIconCopy, null);
    case Types.CREATE:
      return import_react18.default.createElement(SvgIconCreate, null);
    case Types.DELETE:
      return import_react18.default.createElement(SvgIconDelete, null);
    case Types.DISCONNECTED:
      return import_react18.default.createElement(SvgIconDisconnected, null);
    case Types.DOCUMENT:
      return import_react18.default.createElement(SvgIconDocument, null);
    case Types.DONE:
      return import_react18.default.createElement(SvgIconDone, null);
    case Types.DONE_ALL:
      return import_react18.default.createElement(SvgIconDoneAll, null);
    case Types.DOWNLOAD:
      return import_react18.default.createElement(SvgIconDownload, null);
    case Types.EDIT:
      return import_react18.default.createElement(SvgIconEdit, null);
    case Types.EMOJI_MORE:
      return import_react18.default.createElement(SvgIconEmojiMore, null);
    case Types.ERROR:
      return import_react18.default.createElement(SvgIconError, null);
    case Types.EXPAND:
      return import_react18.default.createElement(SvgIconExpand, null);
    case Types.FILE_AUDIO:
      return import_react18.default.createElement(SvgIconFileAudio, null);
    case Types.FILE_DOCUMENT:
      return import_react18.default.createElement(SvgIconFileDocument, null);
    case Types.FREEZE:
      return import_react18.default.createElement(SvgIconFreeze, null);
    case Types.GIF:
      return import_react18.default.createElement(SvgIconGif, null);
    case Types.INFO:
      return import_react18.default.createElement(SvgIconInfo, null);
    case Types.LEAVE:
      return import_react18.default.createElement(SvgIconLeave, null);
    case Types.MEMBERS:
      return import_react18.default.createElement(SvgIconMembers, null);
    case Types.MESSAGE:
      return import_react18.default.createElement(SvgIconMessage, null);
    case Types.MODERATIONS:
      return import_react18.default.createElement(SvgIconModerations, null);
    case Types.MORE:
      return import_react18.default.createElement(SvgIconMore, null);
    case Types.MUTE:
      return import_react18.default.createElement(SvgIconMute, null);
    case Types.NOTIFICATIONS:
      return import_react18.default.createElement(SvgIconNotifications, null);
    case Types.NOTIFICATIONS_OFF_FILLED:
      return import_react18.default.createElement(SvgIconNotificationsOffFilled, null);
    case Types.OPERATOR:
      return import_react18.default.createElement(SvgIconOperator, null);
    case Types.PHOTO:
      return import_react18.default.createElement(SvgIconPhoto, null);
    case Types.PLAY:
      return import_react18.default.createElement(SvgIconPlay, null);
    case Types.PLUS:
      return import_react18.default.createElement(SvgIconPlus, null);
    case Types.QUESTION:
      return import_react18.default.createElement(SvgIconQuestion, null);
    case Types.REFRESH:
      return import_react18.default.createElement(SvgIconRefresh, null);
    case Types.REMOVE:
      return import_react18.default.createElement(SvgIconRemove, null);
    case Types.REPLY:
      return import_react18.default.createElement(SvgIconReplyFilled, null);
    case Types.SEARCH:
      return import_react18.default.createElement(SvgIconSearch, null);
    case Types.SEND:
      return import_react18.default.createElement(SvgIconSend, null);
    case Types.SETTINGS_FILLED:
      return import_react18.default.createElement(SvgIconSettingsFilled, null);
    case Types.SLIDE_LEFT:
      return import_react18.default.createElement(SvgIconSlideLeft, null);
    case Types.SPINNER:
      return import_react18.default.createElement(SvgIconSpinner, null);
    case Types.SUPERGROUP:
      return import_react18.default.createElement(SvgIconSupergroup, null);
    case Types.THREAD:
      return import_react18.default.createElement(SvgIconThread, null);
    case Types.THUMBNAIL_NONE:
      return import_react18.default.createElement(SvgIconThumbnailNone, null);
    case Types.TOGGLE_OFF:
      return import_react18.default.createElement(SvgIconToggleoff, null);
    case Types.TOGGLE_ON:
      return import_react18.default.createElement(SvgIconToggleon, null);
    case Types.USER:
      return import_react18.default.createElement(SvgIconUser, null);
    case Types.FEEDBACK_LIKE:
      return import_react18.default.createElement(SvgIconFeedbackLike, null);
    case Types.FEEDBACK_DISLIKE:
      return import_react18.default.createElement(SvgIconFeedbackDislike, null);
    default:
      return "icon";
  }
}
function Icon(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, type = _a3.type, _c = _a3.fillColor, fillColor = _c === void 0 ? Colors2.DEFAULT : _c, _d = _a3.width, width = _d === void 0 ? 26 : _d, _e = _a3.height, height = _e === void 0 ? 26 : _e, _f = _a3.onClick, onClick = _f === void 0 ? noop : _f, _g2 = _a3.children, children = _g2 === void 0 ? null : _g2, testID = _a3.testID;
  var iconStyle = {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    minWidth: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px"),
    minHeight: typeof height === "string" ? height : "".concat(height, "px")
  };
  return import_react18.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-icon",
    changeTypeToIconClassName(type),
    changeColorToClassName2(fillColor)
  ], false).join(" "), "data-testid": testID, role: "button", onClick, onKeyDown: onClick, tabIndex: 0, style: iconStyle }, children || changeTypeToIconComponent(type));
}
var IconTypes = Types;
var IconColors = Colors2;

// node_modules/@sendbird/uikit-react/ui/Loader.js
var import_react19 = __toESM(require_react(), 1);
function Loader(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, _c = _a3.width, width = _c === void 0 ? "26px" : _c, _d = _a3.height, height = _d === void 0 ? "26px" : _d, children = _a3.children, testID = _a3.testID;
  return import_react19.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-loader"
  ], false).join(" "), "data-testid": testID, style: {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px")
  } }, children || import_react19.default.createElement(Icon, { type: IconTypes.SPINNER, width: "26px", height: "26px" }));
}

// node_modules/@sendbird/uikit-react/ui/PlaceHolder.js
var import_react20 = __toESM(require_react(), 1);
var PlaceHolderTypes = {
  LOADING: "LOADING",
  NO_CHANNELS: "NO_CHANNELS",
  NO_MESSAGES: "NO_MESSAGES",
  WRONG: "WRONG",
  SEARCH_IN: "SEARCH_IN",
  SEARCHING: "SEARCHING",
  NO_RESULTS: "NO_RESULTS"
};
function PlaceHolder(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, type = _a3.type, iconSize = _a3.iconSize, _c = _a3.searchInString, searchInString = _c === void 0 ? "" : _c, retryToConnect = _a3.retryToConnect;
  var stringSet2 = (0, import_react20.useContext)(LocalizationContext).stringSet;
  return import_react20.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-place-holder"
    ], false).join(" ") },
    type === PlaceHolderTypes.LOADING && import_react20.default.createElement(
      Loader,
      { width: iconSize || "48px", height: iconSize || "48px" },
      import_react20.default.createElement(Icon, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: iconSize || "48px", height: iconSize || "48px" })
    ),
    (type === PlaceHolderTypes.NO_CHANNELS || type === PlaceHolderTypes.NO_MESSAGES || type === PlaceHolderTypes.WRONG) && import_react20.default.createElement(
      "div",
      { className: "sendbird-place-holder__body" },
      type === PlaceHolderTypes.NO_CHANNELS && import_react20.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.CHAT, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.WRONG && import_react20.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.ERROR, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.NO_MESSAGES && import_react20.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.MESSAGE, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      import_react20.default.createElement(
        Label,
        { className: "sendbird-place-holder__body__text", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 },
        type === PlaceHolderTypes.NO_CHANNELS && stringSet2.PLACE_HOLDER__NO_CHANNEL,
        type === PlaceHolderTypes.WRONG && stringSet2.PLACE_HOLDER__WRONG,
        type === PlaceHolderTypes.NO_MESSAGES && stringSet2.PLACE_HOLDER__NO_MESSAGES
      ),
      retryToConnect && import_react20.default.createElement(
        "div",
        { className: "sendbird-place-holder__body__reconnect", role: "button", onClick: retryToConnect, onKeyPress: retryToConnect, tabIndex: 0 },
        import_react20.default.createElement(Icon, { className: "sendbird-place-holder__body__reconnect__icon", type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "20px", height: "20px" }),
        import_react20.default.createElement(Label, { className: "sendbird-place-holder__body__reconnect__text", type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.PLACE_HOLDER__RETRY_TO_CONNECT)
      )
    ),
    (type === PlaceHolderTypes.NO_RESULTS || type === PlaceHolderTypes.SEARCH_IN || type === PlaceHolderTypes.SEARCHING) && import_react20.default.createElement(
      "div",
      { className: "sendbird-place-holder__body--align-top" },
      type === PlaceHolderTypes.SEARCH_IN && import_react20.default.createElement(
        "div",
        { className: "sendbird-place-holder__body--align-top__text" },
        import_react20.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__search-in", type: LabelTypography.BUTTON_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCH_IN),
        import_react20.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__channel-name", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'".concat(searchInString)),
        import_react20.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__quote", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'")
      ),
      type === PlaceHolderTypes.SEARCHING && import_react20.default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__searching", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCHING),
      type === PlaceHolderTypes.NO_RESULTS && import_react20.default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__no-result", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.NO_SEARCHED_MESSAGE)
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/ImageRenderer.js
var import_react21 = __toESM(require_react(), 1);
var numberToPx = function(value) {
  if (value === null)
    return void 0;
  return typeof value === "number" ? "".concat(value, "px") : value;
};
function getDynamicMinLengthInPx(sideLength, maxSideLength, defaultMinLength) {
  var _a3;
  return "min(".concat(maxSideLength !== null && maxSideLength !== void 0 ? maxSideLength : defaultMinLength, ", ").concat((_a3 = numberToPx(sideLength)) !== null && _a3 !== void 0 ? _a3 : defaultMinLength, ")");
}
function useDynamicSideLength(_a3) {
  var width = _a3.width, height = _a3.height, maxSideLength = _a3.maxSideLength, defaultMinLength = _a3.defaultMinLength;
  var dynamicMinWidth = (0, import_react21.useMemo)(function() {
    return getDynamicMinLengthInPx(width, maxSideLength, defaultMinLength);
  }, [width]);
  var dynamicMinHeight = (0, import_react21.useMemo)(function() {
    return getDynamicMinLengthInPx(height, maxSideLength, defaultMinLength);
  }, [height]);
  return [dynamicMinWidth, dynamicMinHeight];
}
var useIsElementInViewport = function() {
  var _a3 = (0, import_react21.useState)(false), isVisible = _a3[0], setIsVisible = _a3[1];
  var _b = (0, import_react21.useState)(null), element = _b[0], setElement = _b[1];
  var ref = (0, import_react21.useCallback)(function(node) {
    if (node !== null)
      setElement(node);
  }, []);
  (0, import_react21.useEffect)(function() {
    if (!element)
      return;
    var observer = new IntersectionObserver(function(entries) {
      var entry = entries[0];
      setIsVisible(entry.isIntersecting);
    });
    observer.observe(element);
    return function() {
      observer.disconnect();
    };
  }, [element]);
  return [ref, isVisible];
};
var useLazyImageLoader = function() {
  var isLoaded = (0, import_react21.useRef)(false);
  var _a3 = useIsElementInViewport(), ref = _a3[0], isVisible = _a3[1];
  if (isVisible)
    isLoaded.current = true;
  return [ref, isLoaded.current];
};
function getBorderRadiusForImageRenderer(circle, borderRadius) {
  if (circle === void 0) {
    circle = false;
  }
  if (borderRadius === void 0) {
    borderRadius = null;
  }
  return circle ? "50%" : numberToPx(borderRadius);
}
function getBorderRadiusForMultipleImageRenderer(borderRadius, index, totalCount) {
  var value = typeof borderRadius === "string" ? parseInt(borderRadius, 10) : borderRadius;
  var lastIndex = totalCount - 1;
  var topLeft = index === 0 ? value * 2 : value;
  var topRight = index === 1 ? value * 2 : value;
  var bottomRight = index === lastIndex ? value * 2 : value;
  var bottomLeft = index === lastIndex - 1 ? value * 2 : value;
  return "".concat(topLeft, "px ").concat(topRight, "px ").concat(bottomRight, "px ").concat(bottomLeft, "px");
}
var ImageRenderer = function(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, url = _a3.url, _c = _a3.alt, alt = _c === void 0 ? "" : _c, _d = _a3.width, width = _d === void 0 ? null : _d, _e = _a3.maxSideLength, maxSideLength = _e === void 0 ? null : _e, _f = _a3.height, height = _f === void 0 ? null : _f, _g2 = _a3.circle, circle = _g2 === void 0 ? false : _g2, _h = _a3.fixedSize, fixedSize = _h === void 0 ? false : _h, _j = _a3.placeHolder, placeHolder = _j === void 0 ? null : _j, _k = _a3.defaultComponent, defaultComponent = _k === void 0 ? null : _k, _l = _a3.borderRadius, borderRadius = _l === void 0 ? null : _l, _m = _a3.onLoad, onLoad = _m === void 0 ? noop : _m, _o = _a3.onError, onError = _o === void 0 ? noop : _o, shadeOnHover = _a3.shadeOnHover, _p = _a3.isUploaded, isUploaded = _p === void 0 ? true : _p;
  var _q = useLazyImageLoader(), ref = _q[0], isVisible = _q[1];
  var internalUrl = isVisible ? url : null;
  var _r = (0, import_react21.useState)(false), defaultComponentVisible = _r[0], setDefaultComponentVisible = _r[1];
  var _s = (0, import_react21.useState)(true), placeholderVisible = _s[0], setPlaceholderVisible = _s[1];
  var _t = useDynamicSideLength({
    width,
    height,
    maxSideLength,
    defaultMinLength: "400px"
  }), dynamicMinWidth = _t[0], dynamicMinHeight = _t[1];
  var renderPlaceholder = function() {
    if (typeof placeHolder === "function") {
      return placeHolder({
        style: {
          width: "100%",
          minWidth: dynamicMinWidth,
          maxWidth: fixedSize ? dynamicMinWidth : "400px",
          height: dynamicMinHeight,
          position: "absolute",
          display: "flex",
          justifyContent: "center",
          alignItems: "center"
        }
      });
    }
    return placeHolder;
  };
  var renderDefault = function() {
    if (typeof defaultComponent === "function")
      return defaultComponent();
    return defaultComponent;
  };
  var renderImage = function() {
    var backgroundStyle = internalUrl ? {
      backgroundRepeat: "no-repeat",
      backgroundPosition: "center",
      backgroundSize: "cover",
      backgroundImage: "url(".concat(internalUrl, ")")
    } : {};
    return import_react21.default.createElement("div", { className: "sendbird-image-renderer__image", style: __assign({ width: "100%", minWidth: dynamicMinWidth, maxWidth: fixedSize ? dynamicMinWidth : "400px", height: dynamicMinHeight, position: "absolute", borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, backgroundStyle) });
  };
  return dynamicMinWidth && dynamicMinHeight && import_react21.default.createElement(
    "div",
    { ref, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), ["sendbird-image-renderer"], false).join(" "), style: {
      width: "100%",
      minWidth: dynamicMinWidth,
      maxWidth: fixedSize ? dynamicMinWidth : "400px",
      height: dynamicMinHeight
    } },
    placeholderVisible && renderPlaceholder(),
    !internalUrl || defaultComponentVisible ? renderDefault() : renderImage(),
    shadeOnHover && import_react21.default.createElement("div", { className: "sendbird-multiple-files-image-renderer__image-cover", style: __assign({ borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, isUploaded ? {} : { display: "inline-flex" }) }),
    internalUrl && import_react21.default.createElement(HiddenImageLoader, { src: internalUrl, alt, onLoadStart: function() {
      setPlaceholderVisible(true);
      setDefaultComponentVisible(false);
    }, onLoad: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(false);
      onLoad();
    }, onError: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(true);
      onError();
    } })
  );
};
var HiddenImageLoader = function(props) {
  var src = props.src, alt = props.alt, _a3 = props.onLoadStart, onLoadStart = _a3 === void 0 ? noop : _a3, _b = props.onLoad, onLoad = _b === void 0 ? noop : _b, _c = props.onError, onError = _c === void 0 ? noop : _c;
  var reloadCtx = (0, import_react21.useRef)({
    currSrc: src,
    prevSrc: src,
    loadFailure: false
  });
  if (reloadCtx.current.currSrc !== src) {
    reloadCtx.current.prevSrc = reloadCtx.current.currSrc;
    reloadCtx.current.currSrc = src;
  }
  (0, import_react21.useLayoutEffect)(function() {
    if (src) {
      var sourceChanged = reloadCtx.current.prevSrc !== reloadCtx.current.currSrc;
      var loadFailure = reloadCtx.current.loadFailure;
      if (sourceChanged || loadFailure) {
        onLoadStart();
      }
    }
  }, [src, navigator.onLine]);
  return import_react21.default.createElement("img", { className: "sendbird-image-renderer__hidden-image-loader", src, alt, onLoad: function() {
    reloadCtx.current.loadFailure = false;
    onLoad();
  }, onError: function() {
    reloadCtx.current.loadFailure = true;
    onError();
  } });
};

// node_modules/@sendbird/uikit-react/chunks/bundle-MdZYxYNf.js
var pxToNumber = function(px) {
  if (typeof px === "number") {
    return px;
  }
  if (typeof px === "string") {
    var parsed = Number.parseFloat(px);
    if (!Number.isNaN(parsed)) {
      return parsed;
    }
  }
  return NaN;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BkCv3z1C.js
var import_react22 = __toESM(require_react(), 1);
var AvatarDefault = function(props) {
  var width = props.width, height = props.height, text = props.text;
  var iconWidth = pxToNumber(width);
  var iconHeight = pxToNumber(height);
  if (typeof iconWidth === "number" && !Number.isNaN(iconWidth)) {
    iconWidth *= 0.575;
  }
  if (typeof iconHeight === "number" && !Number.isNaN(iconHeight)) {
    iconHeight *= 0.575;
  }
  return import_react22.default.createElement("div", { className: classnames("sendbird-avatar-img--default", text && "text"), style: { width, height } }, text ? import_react22.default.createElement("div", { className: "sendbird-avatar-text" }, text) : import_react22.default.createElement(Icon, { type: IconTypes.USER, fillColor: IconColors.CONTENT, width: iconWidth, height: iconHeight }));
};
var imageRendererClassName = "sendbird-avatar-img";
var AvatarInner = function(_a3) {
  var _b = _a3.src, src = _b === void 0 ? "" : _b, _c = _a3.alt, alt = _c === void 0 ? "" : _c, height = _a3.height, width = _a3.width, customDefaultComponent = _a3.customDefaultComponent;
  var defaultComponent = function() {
    return customDefaultComponent ? customDefaultComponent({ width, height }) : import_react22.default.createElement(AvatarDefault, { width, height });
  };
  if (typeof src === "string") {
    return import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src, height, width, alt, defaultComponent });
  }
  if (src && src.length) {
    if (src.length === 1) {
      return import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent });
    }
    if (src.length === 2) {
      return import_react22.default.createElement(
        "div",
        { className: "sendbird-avatar--inner__two-child" },
        import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent }),
        import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent })
      );
    }
    if (src.length === 3) {
      return import_react22.default.createElement(
        import_react22.default.Fragment,
        null,
        import_react22.default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--upper" },
          import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent })
        ),
        import_react22.default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--lower" },
          import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent }),
          import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[2], height, width, alt, defaultComponent })
        )
      );
    }
    return import_react22.default.createElement("div", { className: "sendbird-avatar--inner__four-child" }, src.slice(0, 4).map(function(url, index) {
      return import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url, height, width, alt, key: "".concat(url, "-").concat(index), defaultComponent });
    }));
  }
  return import_react22.default.createElement(ImageRenderer, { className: imageRendererClassName, url: "", height, width, alt, defaultComponent });
};
function Avatar(_a3, ref) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, _c = _a3.src, src = _c === void 0 ? "" : _c, _d = _a3.alt, alt = _d === void 0 ? "" : _d, _e = _a3.width, width = _e === void 0 ? "56px" : _e, _f = _a3.height, height = _f === void 0 ? "56px" : _f, _g2 = _a3.zIndex, zIndex = _g2 === void 0 ? 0 : _g2, _h = _a3.left, left = _h === void 0 ? "" : _h, _j = _a3.bottom, bottom = _j === void 0 ? "" : _j, onClick = _a3.onClick, customDefaultComponent = _a3.customDefaultComponent;
  return import_react22.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-avatar"
    ], false).join(" "), role: "button", ref, style: {
      height,
      width,
      zIndex,
      left,
      bottom
    }, onClick, onKeyDown: onClick, tabIndex: 0 },
    import_react22.default.createElement(AvatarInner, { src, width, height, alt, customDefaultComponent })
  );
}
var Avatar$1 = import_react22.default.forwardRef(Avatar);

// node_modules/@sendbird/uikit-react/chunks/bundle-ByD0lt6-.js
var DEFAULT_URL_PREFIX = "https://static.sendbird.com/sample/cover/cover_";
var getOpenChannelAvatar = function(channel) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    return channel.coverUrl;
  }
  return void 0;
};
var getChannelAvatarSource = function(channel, currentUserId) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (!new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return channel.coverUrl;
    }
  }
  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function(member) {
    return member.userId !== currentUserId;
  }).map(function(_a3) {
    var profileUrl = _a3.profileUrl;
    return profileUrl;
  });
};
var generateDefaultAvatar = function(channel) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return true;
    }
    return false;
  }
  return true;
};

// node_modules/@sendbird/uikit-react/ui/ChannelAvatar.js
var import_react23 = __toESM(require_react(), 1);
function ChannelAvatar(_a3) {
  var channel = _a3.channel, userId = _a3.userId, theme = _a3.theme, _b = _a3.width, width = _b === void 0 ? 56 : _b, _c = _a3.height, height = _c === void 0 ? 56 : _c;
  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;
  var memoizedAvatar = (0, import_react23.useMemo)(function() {
    return isBroadcast ? generateDefaultAvatar(channel) ? import_react23.default.createElement(
      "div",
      { className: "sendbird-chat-header--default-avatar", style: {
        width,
        height,
        display: "flex",
        justifyContent: "center",
        alignItems: "center"
      } },
      import_react23.default.createElement(Icon, { type: IconTypes.BROADCAST, fillColor: IconColors.CONTENT, width: width * 0.575, height: height * 0.575 })
    ) : import_react23.default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--broadcast-channel", src: getChannelAvatarSource(channel, userId), width, height, alt: channel === null || channel === void 0 ? void 0 : channel.name }) : import_react23.default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--group-channel", src: getChannelAvatarSource(channel, userId), width: "".concat(width, "px"), height: "".concat(height, "px"), alt: channel === null || channel === void 0 ? void 0 : channel.name });
  }, [getChannelAvatarSource(channel, userId), theme]);
  return import_react23.default.createElement(import_react23.default.Fragment, null, memoizedAvatar);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-DvgqpwmQ.js
var import_react24 = __toESM(require_react(), 1);
var DEFAULT_MOBILE = false;
var MOBILE_CLASSNAME = "sendbird--mobile-mode";
var MediaQueryContext = import_react24.default.createContext({
  breakpoint: DEFAULT_MOBILE,
  isMobile: false
});
var addClassNameToBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.add(MOBILE_CLASSNAME);
  } catch (_a3) {
  }
};
var removeClassNameFromBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.remove(MOBILE_CLASSNAME);
  } catch (_a3) {
  }
};
var MediaQueryProvider = function(props) {
  var children = props.children, logger = props.logger;
  var breakpoint = (props === null || props === void 0 ? void 0 : props.breakpoint) || false;
  var _a3 = (0, import_react24.useState)(false), isMobile = _a3[0], setIsMobile = _a3[1];
  (0, import_react24.useEffect)(function() {
    var _a4;
    var updateSize = function() {
      var _a5;
      if (typeof breakpoint === "boolean") {
        setIsMobile(breakpoint);
        if (breakpoint) {
          addClassNameToBody();
        } else {
          removeClassNameFromBody();
        }
      } else {
        var mq = window.matchMedia("(max-width: ".concat(breakpoint, ")"));
        (_a5 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "MediaQueryProvider: Screensize updated to ".concat(breakpoint));
        if (mq.matches) {
          setIsMobile(true);
          addClassNameToBody();
        } else {
          setIsMobile(false);
          removeClassNameFromBody();
        }
      }
    };
    updateSize();
    window.addEventListener("resize", updateSize);
    (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MediaQueryProvider: addEventListener", { updateSize });
    return function() {
      var _a5;
      window.removeEventListener("resize", updateSize);
      (_a5 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "MediaQueryProvider: removeEventListener", { updateSize });
    };
  }, [breakpoint]);
  return import_react24.default.createElement(MediaQueryContext.Provider, { value: { breakpoint, isMobile } }, children);
};
var useMediaQueryContext = function() {
  return import_react24.default.useContext(MediaQueryContext);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DU7VpG0M.js
var Colors3;
(function(Colors4) {
  Colors4["ONBACKGROUND_1"] = "ONBACKGROUND_1";
  Colors4["ONBACKGROUND_2"] = "ONBACKGROUND_2";
  Colors4["ONBACKGROUND_3"] = "ONBACKGROUND_3";
  Colors4["ONBACKGROUND_4"] = "ONBACKGROUND_4";
  Colors4["ONCONTENT_1"] = "ONCONTENT_1";
  Colors4["PRIMARY"] = "PRIMARY";
  Colors4["ERROR"] = "ERROR";
})(Colors3 || (Colors3 = {}));
var changeColorToClassName3 = function(color) {
  switch (color) {
    case Colors3.ONBACKGROUND_1:
      return "sendbird-color--onbackground-1";
    case Colors3.ONBACKGROUND_2:
      return "sendbird-color--onbackground-2";
    case Colors3.ONBACKGROUND_3:
      return "sendbird-color--onbackground-3";
    case Colors3.ONBACKGROUND_4:
      return "sendbird-color--onbackground-4";
    case Colors3.ONCONTENT_1:
      return "sendbird-color--oncontent-1";
    case Colors3.PRIMARY:
      return "sendbird-color--primary";
    case Colors3.ERROR:
      return "sendbird-color--error";
    default:
      return "";
  }
};

// node_modules/@sendbird/uikit-react/ui/TextButton.js
var import_react25 = __toESM(require_react(), 1);
var TextButton = function(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, _c = _a3.color, color = _c === void 0 ? Colors3.ONBACKGROUND_1 : _c, _d = _a3.disabled, disabled = _d === void 0 ? false : _d, _e = _a3.disableUnderline, disableUnderline = _e === void 0 ? false : _e, _f = _a3.onClick, onClick = _f === void 0 ? function() {
  } : _f, children = _a3.children;
  return import_react25.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    changeColorToClassName3(color),
    disableUnderline ? "sendbird-textbutton--not-underline" : "sendbird-textbutton",
    disabled ? "sendbird-textbutton--disabled" : ""
  ], false).join(" "), role: "button", tabIndex: 0, onClick: function(e2) {
    return onClick(e2);
  }, onKeyPress: function(e2) {
    return onClick(e2);
  } }, children);
};

// node_modules/@sendbird/uikit-react/ui/IconButton.js
var import_react26 = __toESM(require_react(), 1);
var IconButton = import_react26.default.forwardRef(function(props, ref) {
  var _a3 = props.className, className = _a3 === void 0 ? "" : _a3, children = props.children, _b = props.disabled, disabled = _b === void 0 ? false : _b, _c = props.width, width = _c === void 0 ? "56px" : _c, _d = props.height, height = _d === void 0 ? "56px" : _d, _e = props.type, type = _e === void 0 ? "button" : _e, _f = props.style, style = _f === void 0 ? {} : _f, _g2 = props.onBlur, onBlur = _g2 === void 0 ? function() {
  } : _g2, _h = props.onClick, onClick = _h === void 0 ? function() {
  } : _h, testID = props.testID;
  var _j = (0, import_react26.useState)(false), isPressed = _j[0], setIsPressed = _j[1];
  return import_react26.default.createElement(
    "button",
    { "data-testid": testID, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-iconbutton",
      isPressed ? "sendbird-iconbutton--pressed" : ""
    ], false).join(" "), disabled, ref, type, style: __assign(__assign({}, style), { height, width }), onClick: function(e2) {
      if (disabled) {
        return;
      }
      setIsPressed(true);
      onClick === null || onClick === void 0 ? void 0 : onClick(e2);
    }, onBlur: function(e2) {
      setIsPressed(false);
      onBlur === null || onBlur === void 0 ? void 0 : onBlur(e2);
    } },
    import_react26.default.createElement("span", { className: "sendbird-iconbutton__inner" }, children)
  );
});

// node_modules/@sendbird/uikit-react/ui/Header.js
var import_react27 = __toESM(require_react(), 1);
var Header = function(_a3) {
  var _b;
  var className = _a3.className, renderLeft = _a3.renderLeft, renderRight = _a3.renderRight, renderMiddle = _a3.renderMiddle;
  var isMobile = false;
  try {
    isMobile = (_b = useMediaQueryContext === null || useMediaQueryContext === void 0 ? void 0 : useMediaQueryContext()) === null || _b === void 0 ? void 0 : _b.isMobile;
  } catch (err) {
  }
  return import_react27.default.createElement(
    "div",
    { className: classnames("sendbird-ui-header", className), "data-testid": "sendbird-ui-header" },
    renderLeft ? import_react27.default.createElement("div", { className: classnames("sendbird-ui-header__left", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderLeft === null || renderLeft === void 0 ? void 0 : renderLeft()) : null,
    import_react27.default.createElement("div", { className: "sendbird-ui-header__middle" }, renderMiddle === null || renderMiddle === void 0 ? void 0 : renderMiddle()),
    renderRight ? import_react27.default.createElement("div", { className: classnames("sendbird-ui-header__right", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderRight === null || renderRight === void 0 ? void 0 : renderRight()) : null
  );
};
var Title = function(_a3) {
  var title = _a3.title, subtitle = _a3.subtitle, onClickSubtitle = _a3.onClickSubtitle;
  return import_react27.default.createElement(
    "div",
    { className: "sendbird-ui-header__middle" },
    title && import_react27.default.createElement(Label, { className: "sendbird-ui-header__middle__title", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, title),
    subtitle && (onClickSubtitle ? import_react27.default.createElement(
      TextButton,
      { className: "sendbird-ui-header__middle__subtitle__container", onClick: onClickSubtitle, disableUnderline: true },
      import_react27.default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, subtitle)
    ) : import_react27.default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, subtitle))
  );
};
var IconButton2 = function(_a3) {
  var className = _a3.className, onClick = _a3.onClick, type = _a3.type, color = _a3.color, _b = _a3.width, width = _b === void 0 ? "32px" : _b, _c = _a3.height, height = _c === void 0 ? "32px" : _c, _d = _a3.renderIcon, renderIcon = _d === void 0 ? function(props) {
    return import_react27.default.createElement(Icon2, __assign({}, props));
  } : _d;
  return import_react27.default.createElement(IconButton, { className, width, height, onClick }, renderIcon({ type, color }));
};
var Icon2 = function(_a3) {
  var className = _a3.className, type = _a3.type, color = _a3.color, _b = _a3.width, width = _b === void 0 ? "22px" : _b, _c = _a3.height, height = _c === void 0 ? "22px" : _c, _d = _a3.onClick, onClick = _d === void 0 ? noop : _d;
  return import_react27.default.createElement(Icon, { className, type, fillColor: color, width, height, onClick: function(e2) {
    return onClick === null || onClick === void 0 ? void 0 : onClick(e2);
  } });
};
var Header$1 = Object.assign(Header, { Title, IconButton: IconButton2, Icon: Icon2 });

// node_modules/@sendbird/uikit-react/ui/Button.js
var import_react28 = __toESM(require_react(), 1);
var ButtonTypes;
(function(ButtonTypes2) {
  ButtonTypes2["PRIMARY"] = "PRIMARY";
  ButtonTypes2["SECONDARY"] = "SECONDARY";
  ButtonTypes2["DANGER"] = "DANGER";
  ButtonTypes2["DISABLED"] = "DISABLED";
  ButtonTypes2["WARNING"] = "WARNING";
})(ButtonTypes || (ButtonTypes = {}));
var ButtonSizes;
(function(ButtonSizes2) {
  ButtonSizes2["BIG"] = "BIG";
  ButtonSizes2["SMALL"] = "SMALL";
})(ButtonSizes || (ButtonSizes = {}));
function changeTypeToClassName(type) {
  switch (type) {
    case ButtonTypes.PRIMARY:
      return "sendbird-button--primary";
    case ButtonTypes.SECONDARY:
      return "sendbird-button--secondary";
    case ButtonTypes.DANGER:
      return "sendbird-button--danger";
    case ButtonTypes.DISABLED:
      return "sendbird-button--disabled";
    case ButtonTypes.WARNING:
      return "sendbird-button--warning";
    default:
      return "";
  }
}
function changeSizeToClassName(size) {
  switch (size) {
    case ButtonSizes.BIG:
      return "sendbird-button--big";
    case ButtonSizes.SMALL:
      return "sendbird-button--small";
    default:
      return "";
  }
}
function Button(_a3) {
  var className = _a3.className, _b = _a3.type, type = _b === void 0 ? ButtonTypes.PRIMARY : _b, _c = _a3.size, size = _c === void 0 ? ButtonSizes.BIG : _c, _d = _a3.children, children = _d === void 0 ? "Button" : _d, _e = _a3.disabled, disabled = _e === void 0 ? false : _e, _f = _a3.onClick, onClick = _f === void 0 ? function() {
  } : _f, _g2 = _a3.labelType, labelType = _g2 === void 0 ? LabelTypography.BUTTON_1 : _g2, _h = _a3.labelColor, labelColor = _h === void 0 ? LabelColors.ONCONTENT_1 : _h;
  var injectingClassNames = __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-button",
    disabled ? "sendbird-button__disabled" : "",
    changeTypeToClassName(type),
    changeSizeToClassName(size)
  ], false).join(" ");
  return import_react28.default.createElement(
    "button",
    { className: injectingClassNames, type: "button", onClick, disabled },
    import_react28.default.createElement(Label, { className: "sendbird-button__text", type: labelType, color: labelColor }, children)
  );
}

// node_modules/@sendbird/uikit-react/ui/SortByRow.js
var import_react29 = __toESM(require_react(), 1);
var componentClassName = "sendbird-sort-by-row";
function SortByRow(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, maxItemCount = _a3.maxItemCount, itemWidth = _a3.itemWidth, itemHeight = _a3.itemHeight, children = _a3.children;
  if (Array.isArray(children) && children.length > maxItemCount) {
    var result = [];
    for (var i2 = 0; i2 < children.length; i2 += maxItemCount) {
      result.push(import_react29.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        componentClassName
      ], false).join(" "), key: uuidv4(), style: {
        width: itemWidth * maxItemCount,
        height: itemHeight
      } }, children.slice(i2, i2 + maxItemCount)));
    }
    return import_react29.default.createElement(import_react29.default.Fragment, null, result);
  }
  return import_react29.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    componentClassName
  ], false).join(" "), style: {
    width: itemWidth * (Array.isArray(children) ? children.length : 1),
    height: itemHeight
  } }, children);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BEUsrftF.js
var import_react30 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var APP_LAYOUT_ROOT = "sendbird-app__layout";
var HEIGHT_PADDING = 60;
var MenuItems$1 = (
  /** @class */
  function(_super) {
    __extends(MenuItems2, _super);
    function MenuItems2(props) {
      var _this = _super.call(this, props) || this;
      _this.menuRef = import_react30.default.createRef();
      _this.setupEvents = function() {
        var closeDropdown = _this.props.closeDropdown;
        var menuRef = _this.menuRef;
        var handleClickOutside = function(event) {
          var _a3, _b;
          if ((menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) && !((_b = (_a3 = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a3 === void 0 ? void 0 : _a3.contains) === null || _b === void 0 ? void 0 : _b.call(_a3, event.target))) {
            closeDropdown === null || closeDropdown === void 0 ? void 0 : closeDropdown();
          }
        };
        _this.setState({
          handleClickOutside
        });
        document.addEventListener("mousedown", handleClickOutside);
      };
      _this.cleanUpEvents = function() {
        var handleClickOutside = _this.state.handleClickOutside;
        document.removeEventListener("mousedown", handleClickOutside);
      };
      _this.getMenuPosition = function() {
        var _a3, _b, _c;
        var _d = _this.props, parentRef = _d.parentRef, openLeft = _d.openLeft;
        var portalElement = document.getElementById(APP_LAYOUT_ROOT);
        var portalRect = ((_a3 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a3 === void 0 ? void 0 : _a3.call(portalElement)) || {
          top: 0,
          left: 0,
          width: window.innerWidth,
          height: window.innerHeight
        };
        var parentRect = (_c = (_b = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect) === null || _c === void 0 ? void 0 : _c.call(_b);
        var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
        var y2 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
        var menuStyle = {
          top: y2,
          left: x
        };
        if (!_this.menuRef.current)
          return menuStyle;
        var rect = _this.menuRef.current.getBoundingClientRect();
        if (y2 + rect.height + HEIGHT_PADDING > portalRect.height) {
          menuStyle.top -= rect.height;
        }
        if (x + rect.width > portalRect.width && !openLeft) {
          menuStyle.left -= rect.width;
        }
        if (menuStyle.top < 0) {
          menuStyle.top = rect.height < portalRect.height ? (portalRect.height - rect.height) / 2 : 0;
        }
        menuStyle.top += 32;
        if (openLeft) {
          var padding = Number.isNaN(rect.width - 30) ? 108 : rect.width - 30;
          menuStyle.left -= padding;
        }
        if (menuStyle.left < 0) {
          menuStyle.left = rect.width < portalRect.width ? (portalRect.width - rect.width) / 2 : 0;
        }
        _this.setState({ menuStyle });
        return menuStyle;
      };
      _this.state = {
        menuStyle: { top: 0, left: 0 },
        handleClickOutside: function() {
        }
      };
      return _this;
    }
    MenuItems2.prototype.componentDidMount = function() {
      this.setupEvents();
      this.getMenuPosition();
    };
    MenuItems2.prototype.componentWillUnmount = function() {
      this.cleanUpEvents();
    };
    MenuItems2.prototype.render = function() {
      var portalElement = document.getElementById(MENU_ROOT_ID);
      if (!portalElement)
        return import_react30.default.createElement(import_react30.default.Fragment, null);
      var menuStyle = this.state.menuStyle;
      var _a3 = this.props, children = _a3.children, style = _a3.style, _b = _a3.className, className = _b === void 0 ? "" : _b, testID = _a3.testID, id2 = _a3.id;
      return (0, import_react_dom.createPortal)(import_react30.default.createElement(
        "div",
        { className: classnames(MENU_OBSERVING_CLASS_NAME, className), "data-testid": testID, id: id2 },
        import_react30.default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
        import_react30.default.createElement("ul", { className: "".concat(className, " sendbird-dropdown__menu"), ref: this.menuRef, style: __assign({ display: "inline-block", position: "fixed", left: "".concat(Math.round(menuStyle.left), "px"), top: "".concat(Math.round(menuStyle.top), "px") }, style), "data-testid": "sendbird-dropdown-menu" }, children)
      ), portalElement);
    };
    return MenuItems2;
  }(import_react30.default.Component)
);
var MuteMenuItem = function(_a3) {
  var channel = _a3.channel, user = _a3.user, _b = _a3.className, className = _b === void 0 ? "" : _b, children = _a3.children, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID, _e = _a3.onChange, onChange = _e === void 0 ? function() {
  } : _e, _f = _a3.onError, onError = _f === void 0 ? function() {
  } : _f;
  var _g2 = (0, import_react30.useState)(user.isMuted), isMuted = _g2[0], setIsMuted = _g2[1];
  var isProcessing = (0, import_react30.useRef)(false);
  var onClickHandler = (0, import_react30.useCallback)(function() {
    if (!isProcessing.current) {
      isProcessing.current = true;
      if (isMuted) {
        channel.unmuteUser(user).then(function() {
          setIsMuted(false);
          onChange(channel, user, false);
          isProcessing.current = false;
        }).catch(function(err) {
          onError(err);
          isProcessing.current = false;
        });
      } else {
        channel.muteUser(user).then(function() {
          setIsMuted(true);
          onChange(channel, user, true);
          isProcessing.current = false;
        }).catch(function(err) {
          onError(err);
          isProcessing.current = false;
        });
      }
    }
  }, [isProcessing, isMuted]);
  return import_react30.default.createElement(MenuItem, { className, disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children);
};
var OperatorMenuItem = function(_a3) {
  var channel = _a3.channel, user = _a3.user, _b = _a3.className, className = _b === void 0 ? "" : _b, children = _a3.children, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID, _e = _a3.onChange, onChange = _e === void 0 ? function() {
  } : _e, _f = _a3.onError, onError = _f === void 0 ? function() {
  } : _f;
  var _g2 = (0, import_react30.useState)(channel instanceof xe ? channel.isOperator(user) : user.role === V.OPERATOR), isOperator2 = _g2[0], setIsOperator = _g2[1];
  var isProcessing = (0, import_react30.useRef)(false);
  var onClickHandler = (0, import_react30.useCallback)(function() {
    if (!isProcessing.current) {
      isProcessing.current = true;
      if (isOperator2) {
        channel.removeOperators([user.userId]).then(function() {
          setIsOperator(false);
          onChange(channel, user, false);
          isProcessing.current = false;
        }).catch(function(err) {
          onError(err);
          isProcessing.current = false;
        });
      } else {
        channel.addOperators([user.userId]).then(function() {
          setIsOperator(true);
          onChange(channel, user, true);
          isProcessing.current = false;
        }).catch(function(err) {
          onError(err);
          isProcessing.current = false;
        });
      }
    }
  }, [isProcessing, isOperator2]);
  return import_react30.default.createElement(MenuItem, { className, disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children);
};
var defaultParentRect = { x: 0, y: 0, left: 0, top: 0, height: 0 };
var EmojiListItems$1 = function(_a3) {
  var id2 = _a3.id, children = _a3.children, parentRef = _a3.parentRef, parentContainRef = _a3.parentContainRef, _b = _a3.spaceFromTrigger, spaceFromTrigger = _b === void 0 ? { x: 0, y: 0 } : _b, closeDropdown = _a3.closeDropdown;
  var _c = (0, import_react30.useState)({ left: 0, top: 0 }), reactionStyle = _c[0], setReactionStyle = _c[1];
  var reactionRef = (0, import_react30.useRef)(null);
  (0, import_react30.useEffect)(function() {
    if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
      parentContainRef.current.classList.add("sendbird-reactions--pressed");
    }
    return function() {
      if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
        parentContainRef.current.classList.remove("sendbird-reactions--pressed");
      }
    };
  }, []);
  (0, import_react30.useEffect)(function() {
    var handleClickOutSide = function(event) {
      var _a4, _b2;
      if ((reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) && !((_b2 = (_a4 = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _a4 === void 0 ? void 0 : _a4.contains) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, event.target))) {
        closeDropdown();
      }
    };
    document.addEventListener("mousedown", handleClickOutSide);
    return function() {
      document.removeEventListener("mousedown", handleClickOutSide);
    };
  }, []);
  (0, import_react30.useEffect)(function() {
    var _a4, _b2, _c2, _d;
    var spaceFromTriggerX = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.x) || 0;
    var spaceFromTriggerY = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.y) || 0;
    var portalElement = document.getElementById(APP_LAYOUT_ROOT);
    var portalRect = ((_a4 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a4 === void 0 ? void 0 : _a4.call(portalElement)) || {
      top: 0,
      left: 0,
      width: window.innerWidth,
      height: window.innerHeight
    };
    var parentRect = (_c2 = (_b2 = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b2 === void 0 ? void 0 : _b2.getBoundingClientRect()) !== null && _c2 !== void 0 ? _c2 : defaultParentRect;
    var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
    var y2 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
    var reactionStyle2 = {
      top: y2,
      left: x
    };
    if (!(reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current)) {
      setReactionStyle(reactionStyle2);
    } else {
      var rect = (_d = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _d === void 0 ? void 0 : _d.getBoundingClientRect();
      if (reactionStyle2.top < rect.height) {
        reactionStyle2.top += parentRect.height;
        reactionStyle2.top += spaceFromTriggerY;
      } else {
        reactionStyle2.top -= rect.height;
        reactionStyle2.top -= spaceFromTriggerY;
      }
      reactionStyle2.left -= rect.width / 2;
      reactionStyle2.left += parentRect.height / 2 - 2;
      reactionStyle2.left += spaceFromTriggerX;
      var maximumLeft = portalRect.width - rect.width;
      if (maximumLeft < reactionStyle2.left) {
        reactionStyle2.left = maximumLeft;
      }
      if (reactionStyle2.left < 0) {
        reactionStyle2.left = 0;
      }
      setReactionStyle(reactionStyle2);
    }
  }, []);
  var rootElement = document.getElementById(EMOJI_MENU_ROOT_ID);
  if (rootElement) {
    return (0, import_react_dom.createPortal)(import_react30.default.createElement(
      "div",
      { className: MENU_OBSERVING_CLASS_NAME, id: id2 },
      import_react30.default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
      import_react30.default.createElement(
        "ul",
        { className: "sendbird-dropdown__reaction-bar", "data-testid": "sendbird-dropdown__reaction-bar", ref: reactionRef, style: {
          display: "inline-block",
          position: "fixed",
          left: "".concat(Math.round(reactionStyle.left), "px"),
          top: "".concat(Math.round(reactionStyle.top), "px")
        } },
        import_react30.default.createElement(SortByRow, { className: "sendbird-dropdown__reaction-bar__row", maxItemCount: 8, itemWidth: 44, itemHeight: 40 }, children)
      )
    ), rootElement);
  }
  return null;
};
var MessageMenuContext = (0, import_react30.createContext)(void 0);
var MessageMenuProvider = function(_a3) {
  var children = _a3.children, value = _a3.value;
  return import_react30.default.createElement(MessageMenuContext.Provider, { value }, children);
};
var useMessageMenuContext = function() {
  var context = (0, import_react30.useContext)(MessageMenuContext);
  if (!context) {
    throw new Error("useMessageMenuContext must be used within a MessageMenuProvider.");
  }
  return context;
};
var MenuItem$1 = function(_a3) {
  var className = _a3.className, disabled = _a3.disabled, _b = _a3.tabIndex, tabIndex = _b === void 0 ? 0 : _b, testID = _a3.testID, onClick = _a3.onClick, children = _a3.children;
  var handleClickEvent = function(e2) {
    if (!disabled && onClick) {
      onClick(e2);
    }
  };
  return import_react30.default.createElement(
    "li",
    { className: classnames("sendbird-menu-item", className), role: "menuitem", "aria-disabled": disabled, "data-testid": testID, tabIndex, onClick: handleClickEvent, onKeyDown: function(e2) {
      if (e2.code === "Enter")
        handleClickEvent(e2);
    } },
    import_react30.default.createElement(Label, { className: "sendbird-menu-item__text", type: LabelTypography.SUBTITLE_2, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, children)
  );
};
var BottomSheetMenuItem = function(_a3) {
  var className = _a3.className, _b = _a3.disabled, disabled = _b === void 0 ? false : _b, _c = _a3.tabIndex, tabIndex = _c === void 0 ? 0 : _c, testID = _a3.testID, onClick = _a3.onClick, children = _a3.children;
  return import_react30.default.createElement("div", { className: classnames("sendbird-message__bottomsheet--action", className), role: "menuitem", tabIndex, "aria-disabled": disabled, onClick, "data-testid": testID }, children);
};
var MENU_OBSERVING_CLASS_NAME = "sendbird-observing-message-menu";
var getObservingId = function(txt) {
  return "m_".concat(txt);
};
var MenuItems = MenuItems$1;
var EmojiListItems = EmojiListItems$1;
var MenuItem = function(_a3) {
  var _b = _a3.className, className = _b === void 0 ? "" : _b, children = _a3.children, onClick = _a3.onClick, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID;
  return import_react30.default.createElement(MenuItem$1, { className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), [
    "sendbird-dropdown__menu-item",
    disable ? "disable" : ""
  ], false)), disabled: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick }, children);
};
var MENU_ROOT_ID = "sendbird-dropdown-portal";
var MenuRoot = function() {
  return import_react30.default.createElement("div", { id: MENU_ROOT_ID, className: MENU_ROOT_ID });
};
var EMOJI_MENU_ROOT_ID = "sendbird-emoji-list-portal";
var EmojiReactionListRoot = function() {
  return import_react30.default.createElement("div", { id: EMOJI_MENU_ROOT_ID });
};
function ContextMenu(_a3) {
  var menuTrigger = _a3.menuTrigger, menuItems = _a3.menuItems, isOpen = _a3.isOpen, onClick = _a3.onClick;
  var _b = (0, import_react30.useState)(false), showMenu = _b[0], setShowMenu = _b[1];
  return import_react30.default.createElement(
    "div",
    { className: "sendbird-context-menu", onClick },
    menuTrigger === null || menuTrigger === void 0 ? void 0 : menuTrigger(function() {
      return setShowMenu(!showMenu);
    }),
    (showMenu || isOpen) && menuItems(function() {
      return setShowMenu(false);
    })
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-ZMBEGemL.js
var import_react31 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);
var MODAL_ROOT = "sendbird-modal-root";
var ModalRoot = function() {
  return import_react31.default.createElement("div", { id: MODAL_ROOT, className: MODAL_ROOT });
};
var ModalHeader = function(_a3) {
  var titleText = _a3.titleText, onCloseClick = _a3.onCloseClick;
  return import_react31.default.createElement(
    "div",
    { className: "sendbird-modal__header" },
    import_react31.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, titleText),
    import_react31.default.createElement(
      "div",
      { className: "sendbird-modal__close" },
      import_react31.default.createElement(
        IconButton,
        { width: "32px", height: "32px", onClick: onCloseClick },
        import_react31.default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.DEFAULT, width: "24px", height: "24px" })
      )
    )
  );
};
var ModalBody = function(_a3) {
  var children = _a3.children;
  return import_react31.default.createElement(
    "div",
    { className: "sendbird-modal__body" },
    import_react31.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_2 }, children)
  );
};
var ModalFooter = function(_a3) {
  var submitText = _a3.submitText, _b = _a3.disabled, disabled = _b === void 0 ? false : _b, _c = _a3.hideCancelButton, hideCancelButton = _c === void 0 ? false : _c, _d = _a3.type, type = _d === void 0 ? ButtonTypes.DANGER : _d, onSubmit = _a3.onSubmit, onCancel = _a3.onCancel;
  var stringSet2 = (0, import_react31.useContext)(LocalizationContext).stringSet;
  return import_react31.default.createElement(
    "div",
    { className: "sendbird-modal__footer" },
    !hideCancelButton && import_react31.default.createElement(
      Button,
      { type: ButtonTypes.SECONDARY, onClick: onCancel },
      import_react31.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.BUTTON__CANCEL)
    ),
    import_react31.default.createElement(Button, { type, disabled, onClick: onSubmit }, submitText)
  );
};
function Modal(props) {
  var _a3;
  var _b = props.children, children = _b === void 0 ? null : _b, _c = props.className, className = _c === void 0 ? "" : _c, _d = props.contentClassName, contentClassName = _d === void 0 ? "" : _d, _e = props.isCloseOnClickOutside, isCloseOnClickOutside = _e === void 0 ? false : _e, _f = props.isFullScreenOnMobile, isFullScreenOnMobile = _f === void 0 ? false : _f, titleText = props.titleText, submitText = props.submitText, _g2 = props.disabled, disabled = _g2 === void 0 ? false : _g2, _h = props.hideFooter, hideFooter = _h === void 0 ? false : _h, _j = props.type, type = _j === void 0 ? ButtonTypes.DANGER : _j, renderHeader = props.renderHeader, _k = props.onSubmit, onSubmit = _k === void 0 ? noop : _k, onClose = props.onClose, onCancel = props.onCancel, customFooter = props.customFooter;
  var handleClose = (_a3 = onClose !== null && onClose !== void 0 ? onClose : onCancel) !== null && _a3 !== void 0 ? _a3 : noop;
  var eventHandlers = useSendbird().state.eventHandlers;
  var id2 = (0, import_react31.useState)(function() {
    return "sbu-modal-".concat(uuidv4());
  })[0];
  (0, import_react31.useEffect)(function() {
    var _a4, _b2;
    return (_b2 = (_a4 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.modal) === null || _a4 === void 0 ? void 0 : _a4.onMounted) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, { close: handleClose, id: id2 });
  }, []);
  var isMobile = useMediaQueryContext().isMobile;
  return (0, import_react_dom2.createPortal)(import_react31.default.createElement(
    "div",
    { className: classnames("sendbird-modal", className, isFullScreenOnMobile && isMobile && "sendbird-modal--full-mobile") },
    import_react31.default.createElement(
      "div",
      { className: classnames.apply(void 0, __spreadArray(["sendbird-modal__content"], Array.isArray(contentClassName) ? contentClassName : [contentClassName], false)) },
      (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || import_react31.default.createElement(ModalHeader, { titleText: titleText !== null && titleText !== void 0 ? titleText : "", onCloseClick: handleClose }),
      import_react31.default.createElement(ModalBody, null, children),
      !hideFooter && (customFooter !== null && customFooter !== void 0 ? customFooter : import_react31.default.createElement(ModalFooter, { disabled, onCancel: handleClose, onSubmit, submitText: submitText !== null && submitText !== void 0 ? submitText : "", type }))
    ),
    import_react31.default.createElement("div", { className: classnames("sendbird-modal__backdrop", isCloseOnClickOutside && "sendbird-modal__backdrop--clickoutside"), onClick: function(e2) {
      e2 === null || e2 === void 0 ? void 0 : e2.stopPropagation();
      if (isCloseOnClickOutside) {
        handleClose();
      }
    } })
  ), document.getElementById(MODAL_ROOT));
}

// node_modules/@sendbird/uikit-react/ui/MutedAvatarOverlay.js
var import_react32 = __toESM(require_react(), 1);
function MutedAvatarOverlay(props) {
  var _a3 = props.height, height = _a3 === void 0 ? 24 : _a3, _b = props.width, width = _b === void 0 ? 24 : _b;
  return import_react32.default.createElement(
    "div",
    { className: "sendbird-muted-avatar", style: {
      height: "".concat(height, "px"),
      width: "".concat(width, "px")
    } },
    import_react32.default.createElement(
      "div",
      { className: "sendbird-muted-avatar__icon" },
      import_react32.default.createElement("div", { className: "sendbird-muted-avatar__bg", style: {
        height: "".concat(height, "px"),
        width: "".concat(width, "px")
      } }),
      import_react32.default.createElement(Icon, { type: IconTypes.MUTE, fillColor: IconColors.WHITE, width: "".concat(height - 8, "px"), height: "".concat(width - 8, "px") })
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/Checkbox.js
var import_react33 = __toESM(require_react(), 1);
function Checkbox(_a3) {
  var id2 = _a3.id, _b = _a3.checked, checked = _b === void 0 ? false : _b, disabled = _a3.disabled, onChange = _a3.onChange;
  var _c = (0, import_react33.useState)(checked), isChecked = _c[0], setIsCheck = _c[1];
  return import_react33.default.createElement(
    "label",
    { className: [
      "sendbird-checkbox",
      disabled ? "disabled" : ""
    ].join(" "), htmlFor: id2 },
    import_react33.default.createElement("input", { disabled, id: id2, type: "checkbox", checked: isChecked, onClick: function() {
      if (!disabled)
        setIsCheck(!isChecked);
    }, onChange }),
    import_react33.default.createElement("span", { className: [
      "sendbird-checkbox--checkmark",
      disabled ? "disabled" : ""
    ].join(" ") })
  );
}

// node_modules/@sendbird/uikit-react/sendbirdSelectors.js
var getSdk = function(state) {
  var _a3 = state.stores, stores2 = _a3 === void 0 ? {} : _a3;
  var _b = stores2.sdkStore, sdkStore = _b === void 0 ? {} : _b;
  var sdk = sdkStore.sdk;
  return sdk;
};
var getPubSub = function(state) {
  var _a3 = state.config, config2 = _a3 === void 0 ? {} : _a3;
  var pubSub = config2.pubSub;
  return pubSub;
};
var getConnect = function(state) {
  return function(userId, accessToken) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!((sdk === null || sdk === void 0 ? void 0 : sdk.connect) && typeof sdk.connect === "function")) {
        reject(new Error('Not found the function "connect'));
      }
      if (!accessToken) {
        sdk.connect(userId).then(function(res) {
          return resolve(res);
        }).catch(function(err) {
          return reject(err);
        });
      } else {
        sdk.connect(userId, accessToken).then(function(res) {
          return resolve(res);
        }).catch(function(err) {
          return reject(err);
        });
      }
    });
  };
};
var getDisconnect = function(state) {
  return function() {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!(sdk.disconnect && typeof sdk.disconnect === "function")) {
        reject(new Error('Not found the function "disconnect'));
      }
      sdk.disconnect().then(function(res) {
        return resolve(res);
      }).catch(function(err) {
        return reject(err);
      });
    });
  };
};
var getUpdateUserInfo = function(state) {
  return function(nickname, profileUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === "function")) {
        reject(new Error('Not found the function "updateCurrentUserInfo"'));
      }
      var userParams = { nickname };
      if (profileUrl) {
        userParams.profileUrl = profileUrl;
      }
      sdk.updateCurrentUserInfo(userParams).then(function(res) {
        return resolve(res);
      }).catch(function(err) {
        return reject(err);
      });
    });
  };
};
var getCreateGroupChannel = function(state) {
  return function(params) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      var pubSub = getPubSub(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.groupChannel) {
        reject(new Error("Not found GroupChannelModule"));
      }
      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === "function")) {
        reject(new Error('Not found the function "createChannel"'));
      }
      sdk.groupChannel.createChannel(params).then(function(channel) {
        resolve(channel);
        pubSub.publish(pubSubTopics.CREATE_CHANNEL, { channel });
      }).catch(reject);
    });
  };
};
var getCreateOpenChannel = function(state) {
  return function(params) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.openChannel) {
        reject(new Error("Not found OpenChannelModule"));
      }
      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === "function")) {
        reject(new Error('Not found the function "createChannel"'));
      }
      sdk.openChannel.createChannel(params).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getGetGroupChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.groupChannel) {
        reject(new Error("Not found GroupChannelModule"));
      }
      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === "function")) {
        reject(new Error('Not found the function "getChannel"'));
      }
      sdk.groupChannel.getChannel(channelUrl).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getGetOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.openChannel) {
        reject(new Error("Not found OpenChannelModule"));
      }
      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === "function")) {
        reject(new Error('Not found the function "getChannel"'));
      }
      sdk.openChannel.getChannel(channelUrl).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getLeaveGroupChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetGroupChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.leave().then(function() {
          resolve();
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getEnterOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetOpenChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.enter().then(function() {
          resolve(channel);
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getExitOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetOpenChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.exit().then(function() {
          resolve(channel);
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getFreezeChannel = function() {
  return function(channel) {
    return new Promise(function(resolve, reject) {
      if (!(channel.freeze && typeof (channel === null || channel === void 0 ? void 0 : channel.freeze) === "function")) {
        reject(new Error('Not found the function "freeze"'));
      }
      channel.freeze().then(function() {
        resolve();
      }).catch(reject);
    });
  };
};
var getUnfreezeChannel = function() {
  return function(channel) {
    return new Promise(function(resolve, reject) {
      if (!(channel.unfreeze && typeof (channel === null || channel === void 0 ? void 0 : channel.unfreeze) === "function")) {
        reject(new Error('Not found the function "unfreeze"'));
      }
      channel.unfreeze().then(function() {
        resolve();
      }).catch(reject);
    });
  };
};
var UikitMessageHandler = (
  /** @class */
  function() {
    function UikitMessageHandler2() {
      this._onPending = noop;
      this._onFailed = noop;
      this._onSucceeded = noop;
    }
    UikitMessageHandler2.prototype.triggerPending = function(message) {
      this._onPending(message);
    };
    UikitMessageHandler2.prototype.triggerFailed = function(error, message) {
      this._onFailed(error, (message === null || message === void 0 ? void 0 : message.isResendable) ? message : null);
    };
    UikitMessageHandler2.prototype.triggerSucceeded = function(message) {
      this._onSucceeded(message);
    };
    UikitMessageHandler2.prototype.onPending = function(handler) {
      if (typeof handler === "function") {
        this._onPending = handler;
      }
      return this;
    };
    UikitMessageHandler2.prototype.onFailed = function(handler) {
      if (typeof handler === "function") {
        this._onFailed = handler;
      }
      return this;
    };
    UikitMessageHandler2.prototype.onSucceeded = function(handler) {
      if (typeof handler === "function") {
        this._onSucceeded = handler;
      }
      return this;
    };
    return UikitMessageHandler2;
  }()
);
var getSendUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, params) {
    var handler = new UikitMessageHandler();
    var pubSub = getPubSub(state);
    channel.sendUserMessage(params).onFailed(function(error, message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, { error, message, channel, publishingModules });
      handler.triggerFailed(error, message);
    }).onPending(function(message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_START, { message, channel, publishingModules });
      handler.triggerPending(message);
    }).onSucceeded(function(message) {
      pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, { message, channel, publishingModules });
      handler.triggerSucceeded(message);
    });
    return handler;
  };
};
var getSendFileMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, params) {
    var handler = new UikitMessageHandler();
    var pubSub = getPubSub(state);
    channel.sendFileMessage(params).onFailed(function(error, message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, { error, message, channel, publishingModules });
      handler.triggerFailed(error, message);
    }).onPending(function(message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_START, { message, channel, publishingModules });
      handler.triggerPending(message);
    }).onSucceeded(function(message) {
      pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, { message, channel, publishingModules });
      handler.triggerSucceeded(message);
    });
    return handler;
  };
};
var getUpdateUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, messageId, params) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.updateUserMessage(messageId, params).then(function(message) {
        pubSub.publish(pubSubTopics.UPDATE_USER_MESSAGE, { message, channel, fromSelector: true, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getDeleteMessage = function(state) {
  return function(channel, message) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      var messageId = message.messageId;
      channel.deleteMessage(message).then(function() {
        pubSub.publish(pubSubTopics.DELETE_MESSAGE, { messageId, channel });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getResendUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, failedMessage) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.resendUserMessage(failedMessage).then(function(message) {
        pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, { message, channel, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getResendFileMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, failedMessage, blob) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.resendFileMessage(failedMessage, blob).then(function(message) {
        pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, { message, channel, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var sendbirdSelectors = {
  getSdk,
  getPubSub,
  getConnect,
  getDisconnect,
  getUpdateUserInfo,
  getCreateGroupChannel,
  getCreateOpenChannel,
  getGetGroupChannel,
  getGetOpenChannel,
  getLeaveGroupChannel,
  getEnterOpenChannel,
  getExitOpenChannel,
  getFreezeChannel,
  getUnfreezeChannel,
  getSendUserMessage,
  getSendFileMessage,
  getUpdateUserMessage,
  getDeleteMessage,
  getResendUserMessage,
  getResendFileMessage
};

// node_modules/@sendbird/uikit-react/ui/UserProfile.js
var import_react34 = __toESM(require_react(), 1);
function UserProfile(_a3) {
  var _b, _c;
  var user = _a3.user, currentUserId = _a3.currentUserId, _d = _a3.disableMessaging, disableMessaging = _d === void 0 ? false : _d, onSuccess = _a3.onSuccess;
  var state = useSendbird().state;
  var createChannel = getCreateGroupChannel(state);
  var logger = (_b = state === null || state === void 0 ? void 0 : state.config) === null || _b === void 0 ? void 0 : _b.logger;
  var stringSet2 = (0, import_react34.useContext)(LocalizationContext).stringSet;
  var currentUserId_ = currentUserId || ((_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.userId);
  var onStartDirectMessage = useUserProfileContext().onStartDirectMessage;
  return import_react34.default.createElement(
    "div",
    { className: "sendbird__user-profile" },
    import_react34.default.createElement(
      "section",
      { className: "sendbird__user-profile-avatar" },
      import_react34.default.createElement(Avatar$1, { height: "80px", width: "80px", src: user === null || user === void 0 ? void 0 : user.profileUrl })
    ),
    import_react34.default.createElement(
      "section",
      { className: "sendbird__user-profile-name" },
      import_react34.default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, (user === null || user === void 0 ? void 0 : user.nickname) || stringSet2.NO_NAME)
    ),
    (user === null || user === void 0 ? void 0 : user.userId) !== currentUserId_ && !disableMessaging && import_react34.default.createElement(
      "section",
      { className: "sendbird__user-profile-message" },
      import_react34.default.createElement(Button, { type: ButtonTypes.SECONDARY, onClick: function() {
        var params = {
          isDistinct: false,
          invitedUserIds: (user === null || user === void 0 ? void 0 : user.userId) ? [user === null || user === void 0 ? void 0 : user.userId] : [],
          operatorUserIds: [currentUserId_]
        };
        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();
        createChannel(params).then(function(groupChannel) {
          logger.info("UserProfile, channel create", groupChannel);
          onStartDirectMessage === null || onStartDirectMessage === void 0 ? void 0 : onStartDirectMessage(groupChannel);
        });
      } }, stringSet2.USER_PROFILE__MESSAGE)
    ),
    import_react34.default.createElement("div", { className: "sendbird__user-profile-separator" }),
    import_react34.default.createElement(
      "section",
      { className: "sendbird__user-profile-userId" },
      import_react34.default.createElement(Label, { className: "sendbird__user-profile-userId--label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.USER_PROFILE__USER_ID),
      import_react34.default.createElement(Label, { className: "sendbird__user-profile-userId--value", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, user === null || user === void 0 ? void 0 : user.userId)
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/UserListItem.js
var import_react35 = __toESM(require_react(), 1);
var import_react_dom3 = __toESM(require_react_dom(), 1);
function UserListItem(_a3) {
  var user = _a3.user, channel = _a3.channel, _b = _a3.className, className = _b === void 0 ? void 0 : _b, checked = _a3.checked, checkBox = _a3.checkBox, isOperator2 = _a3.isOperator, disabled = _a3.disabled, disableMessaging = _a3.disableMessaging, action = _a3.action, onChange = _a3.onChange, _c = _a3.avatarSize, avatarSize = _c === void 0 ? "40px" : _c, onClick = _a3.onClick, onUserAvatarClick = _a3.onUserAvatarClick, renderListItemMenu = _a3.renderListItemMenu, _d = _a3.size, size = _d === void 0 ? "normal" : _d;
  var operator = isOperator2 !== null && isOperator2 !== void 0 ? isOperator2 : (user === null || user === void 0 ? void 0 : user.role) === "operator";
  var uniqueKey = user.userId;
  var actionRef = (0, import_react35.useRef)(null);
  var parentRef = (0, import_react35.useRef)(null);
  var avatarRef = (0, import_react35.useRef)(null);
  var _e = useUserProfileContext(), disableUserProfile = _e.disableUserProfile, renderUserProfile = _e.renderUserProfile;
  var stringSet2 = useLocalization().stringSet;
  var config2 = useSendbird().state.config;
  var currentUser = config2.userId;
  var itemClassName = size === "small" ? "sendbird-user-list-item--small" : "sendbird-user-list-item";
  var avatarClassName = size === "small" ? "sendbird-user-list-item--small__avatar" : "sendbird-user-list-item__avatar";
  var titleClassName = size === "small" ? "sendbird-user-list-item--small__title" : "sendbird-user-list-item__title";
  var subtitleClassName = size === "small" ? "sendbird-user-list-item--small__subtitle" : "sendbird-user-list-item__subtitle";
  var checkboxClassName = size === "small" ? "sendbird-user-list-item--small__checkbox" : "sendbird-user-list-item__checkbox";
  var actionClassName = size === "small" ? "sendbird-user-list-item--small__action" : "sendbird-user-list-item__action";
  var operatorClassName = size === "small" ? "sendbird-user-list-item--small__operator" : "sendbird-user-list-item__operator";
  return import_react35.default.createElement(
    "div",
    { className: classnames.apply(void 0, __spreadArray([itemClassName], Array.isArray(className) ? className : [className], false)), ref: parentRef },
    import_react35.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return import_react35.default.createElement(
        import_react35.default.Fragment,
        null,
        import_react35.default.createElement(Avatar$1, { className: avatarClassName, ref: avatarRef, src: (user === null || user === void 0 ? void 0 : user.profileUrl) || (user === null || user === void 0 ? void 0 : user.plainProfileUrl) || "", width: avatarSize, height: avatarSize, onClick: function() {
          var _a4;
          if (!disableUserProfile) {
            toggleDropdown();
            (_a4 = onUserAvatarClick !== null && onUserAvatarClick !== void 0 ? onUserAvatarClick : onClick) === null || _a4 === void 0 ? void 0 : _a4();
          }
        } }),
        (user === null || user === void 0 ? void 0 : user.isMuted) && import_react35.default.createElement(MutedAvatarOverlay, { height: pxToNumber(avatarSize), width: pxToNumber(avatarSize) })
      );
    }, menuItems: function(closeDropdown) {
      return renderUserProfile ? renderUserProfile({
        user,
        currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : "",
        close: closeDropdown,
        avatarRef
      }) : import_react35.default.createElement(
        MenuItems,
        { openLeft: true, parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
        import_react35.default.createElement(UserProfile, { disableMessaging, user, currentUserId: currentUser, onSuccess: closeDropdown })
      );
    } }),
    import_react35.default.createElement(
      Label,
      { className: titleClassName, type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 },
      user.nickname || stringSet2.NO_NAME,
      currentUser === user.userId && stringSet2.CHANNEL_SETTING__MEMBERS__YOU
    ),
    !user.nickname && import_react35.default.createElement(Label, { className: subtitleClassName, type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, user.userId),
    checkBox && import_react35.default.createElement(
      "label",
      { className: checkboxClassName, htmlFor: uniqueKey },
      import_react35.default.createElement(Checkbox, { id: uniqueKey, checked, disabled, onChange: function(event) {
        return onChange === null || onChange === void 0 ? void 0 : onChange(event);
      } })
    ),
    operator && import_react35.default.createElement(Label, { className: classnames(operatorClassName, checkBox && "checkbox"), type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.LABEL__OPERATOR),
    !checkBox && !renderListItemMenu && action && import_react35.default.createElement("div", { className: actionClassName, ref: actionRef }, action({ actionRef, parentRef })),
    !checkBox && renderListItemMenu && import_react35.default.createElement("div", { className: actionClassName, ref: actionRef }, renderListItemMenu({ channel, user }))
  );
}

// node_modules/@sendbird/uikit-react/ui/Input.js
var import_react36 = __toESM(require_react(), 1);
var InputLabel = function(_a3) {
  var children = _a3.children;
  return import_react36.default.createElement(Label, { className: "sendbird-input-label", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_1 }, children);
};
var Input = import_react36.default.forwardRef(function(props, ref) {
  var name = props.name, required = props.required, disabled = props.disabled, value = props.value, placeHolder = props.placeHolder, _a3 = props.autoFocus, autoFocus = _a3 === void 0 ? false : _a3;
  var _b = (0, import_react36.useState)(value), inputValue = _b[0], setInputValue = _b[1];
  return import_react36.default.createElement(
    "div",
    { className: "sendbird-input" },
    import_react36.default.createElement("input", { className: "sendbird-input__input", ref, name, required, disabled, value: inputValue, onChange: function(e2) {
      setInputValue(e2.target.value);
    }, autoFocus }),
    placeHolder && !inputValue && import_react36.default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
  );
});

// node_modules/@sendbird/uikit-react/chunks/bundle-CVdCKMn9.js
var scrollToRenderedMessage = function(scrollRef, initialTimeStamp, setIsScrolled) {
  var _a3;
  try {
    var container = scrollRef.current;
    var element = (_a3 = container === null || container === void 0 ? void 0 : container.querySelectorAll('[data-sb-created-at="'.concat(initialTimeStamp, '"]'))) === null || _a3 === void 0 ? void 0 : _a3[0];
    if (container && element instanceof HTMLElement) {
      container.scrollTop = element.offsetTop;
    }
  } catch (_b) {
  } finally {
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
  }
};
var scrollIntoLast = function(initialTry, scrollRef, setIsScrolled) {
  if (initialTry === void 0) {
    initialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = initialTry;
  if (currentTry > MAX_TRIES) {
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
    return;
  }
  try {
    var scrollDOM = (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) || document.querySelector(".sendbird-conversation__messages-padding");
    if (scrollDOM)
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast(currentTry + 1, scrollRef, setIsScrolled);
    }, 500 * currentTry);
  }
};
var isOperator = function(groupChannel) {
  var myRole = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myRole;
  return myRole === "operator";
};
var isDisabledBecauseFrozen = function(groupChannel) {
  var isFrozen = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.isFrozen;
  return isFrozen && !isOperator(groupChannel);
};
var isDisabledBecauseMuted = function(groupChannel) {
  var myMutedState = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myMutedState;
  return myMutedState === "muted";
};
var getAllEmojisMapFromEmojiContainer = function(emojiContainer) {
  var _a3 = emojiContainer.emojiCategories, emojiCategories = _a3 === void 0 ? [] : _a3;
  var allEmojisMap = /* @__PURE__ */ new Map();
  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {
    var emojis = emojiCategories[categoryIndex].emojis;
    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {
      var _b = emojis[emojiIndex], key = _b.key, url = _b.url;
      allEmojisMap.set(key, url);
    }
  }
  return allEmojisMap;
};
var getNicknamesMapFromMembers = function(members) {
  if (members === void 0) {
    members = [];
  }
  var nicknamesMap = /* @__PURE__ */ new Map();
  for (var memberIndex = 0; memberIndex < members.length; memberIndex += 1) {
    var _a3 = members[memberIndex], userId = _a3.userId, nickname = _a3.nickname;
    nicknamesMap.set(userId, nickname);
  }
  return nicknamesMap;
};
var getUniqueListBy = function(arr, key) {
  var entries = arr.map(function(item) {
    return [item[key], item];
  });
  return Array.from(new Map(entries).values());
};
var getUniqueListByMessageId = function(arr) {
  return getUniqueListBy(arr, "messageId");
};
var sortByCreatedAt = function(messages) {
  return messages.sort(function(a2, b2) {
    return a2.createdAt - b2.createdAt;
  });
};
var mergeAndSortMessages = function(oldMessages, newMessages) {
  var lastOldMessage = oldMessages[oldMessages.length - 1];
  var firstNewMessage = newMessages[0];
  if ((lastOldMessage === null || lastOldMessage === void 0 ? void 0 : lastOldMessage.createdAt) < (firstNewMessage === null || firstNewMessage === void 0 ? void 0 : firstNewMessage.createdAt)) {
    return __spreadArray(__spreadArray([], oldMessages, true), newMessages, true);
  }
  var mergedMessages = __spreadArray(__spreadArray([], oldMessages, true), newMessages, true);
  var unique = getUniqueListByMessageId(mergedMessages);
  return sortByCreatedAt(unique);
};
var passUnsuccessfullMessages = function(allMessages, newMessage) {
  if ("sendingStatus" in newMessage && (newMessage.sendingStatus === Z.SUCCEEDED || newMessage.sendingStatus === Z.PENDING)) {
    var lastIndexOfSucceededMessage = allMessages.map(function(message) {
      if ("sendingStatus" in message && message.sendingStatus)
        return message.sendingStatus;
      return message.isAdminMessage() ? Z.SUCCEEDED : null;
    }).lastIndexOf(Z.SUCCEEDED);
    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {
      var messages = __spreadArray([], allMessages, true);
      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);
      return messages;
    }
  }
  return __spreadArray(__spreadArray([], allMessages, true), [newMessage], false);
};
var isAboutSame = function(a2, b2, px) {
  return Math.abs(a2 - b2) <= px;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-COBh1gnD.js
var import_react37 = __toESM(require_react(), 1);
function useThrottleCallback(callback, delay2, options) {
  if (options === void 0) {
    options = {
      leading: true,
      trailing: false
    };
  }
  var timer = (0, import_react37.useRef)(null);
  var trailingArgs = (0, import_react37.useRef)(null);
  (0, import_react37.useEffect)(function() {
    return function() {
      if (timer.current)
        clearTimeout(timer.current);
    };
  }, []);
  return usePreservedCallback(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (timer.current) {
      trailingArgs.current = args;
      return;
    }
    if (options.leading) {
      callback.apply(void 0, args);
    } else {
      trailingArgs.current = args;
    }
    var invoke = function() {
      if (options.trailing && trailingArgs.current) {
        callback.apply(void 0, trailingArgs.current);
        trailingArgs.current = null;
        timer.current = setTimeout(invoke, delay2);
      } else {
        timer.current = null;
      }
    };
    timer.current = setTimeout(invoke, delay2);
  });
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BcyPGc4o.js
var BUFFER_DELAY = 100;
function useOnScrollPositionChangeDetector(params) {
  var onReachedTop = params.onReachedTop, onReachedBottom = params.onReachedBottom, onInBetween = params.onInBetween;
  var cb = usePreservedCallback(function(event) {
    if (event === null || event === void 0 ? void 0 : event.target) {
      var _a3 = event.target, scrollTop = _a3.scrollTop, scrollHeight = _a3.scrollHeight, clientHeight = _a3.clientHeight;
      var positionEvent = {
        distanceFromBottom: scrollHeight - scrollTop - clientHeight
      };
      if (onReachedTop && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
        onReachedTop(positionEvent);
      } else if (onReachedBottom && isAboutSame(scrollHeight, clientHeight + scrollTop, SCROLL_BUFFER)) {
        onReachedBottom(positionEvent);
      } else if (onInBetween) {
        onInBetween(positionEvent);
      }
    }
  });
  return useThrottleCallback(cb, BUFFER_DELAY, { trailing: true });
}

// node_modules/@sendbird/uikit-react/chunks/bundle-C7sqWYfV.js
var isEmpty = function(val) {
  return val === null || val === void 0;
};
function compareIds(a2, b2) {
  if (isEmpty(a2) || isEmpty(b2)) {
    return false;
  }
  var aString = a2.toString();
  var bString = b2.toString();
  return aString === bString;
}

export {
  __extends,
  __assign,
  __rest,
  __awaiter,
  __generator,
  __spreadArray,
  PublishingModuleType,
  shouldPubSubPublishToChannel,
  shouldPubSubPublishToThread,
  PUBSUB_TOPICS,
  pubSubTopics,
  uuidv4,
  delay,
  noop,
  deleteNullish,
  openURL,
  classnames,
  shimExports,
  isEqual$1,
  createStore,
  useStore,
  SendbirdContext,
  createSendbirdContextStore,
  useSendbirdStore,
  useSendbird,
  useUserProfileContext,
  UserProfileProvider,
  S,
  K,
  OutgoingMessageStates,
  getOutgoingMessageState,
  isSafari,
  isMobileIOS,
  _typeof,
  requiredArgs,
  toDate,
  getMimeTypesUIKitAccepts,
  UIKitMessageTypes,
  isImage,
  isVideo,
  isGif,
  isSupportedFileView,
  isAudio,
  getUIKitFileTypes,
  getUIKitFileType,
  isSentMessage,
  isReadMessage,
  isFailedMessage,
  isPendingMessage,
  isSentStatus,
  isAdminMessage,
  isUserMessage,
  isFileMessage,
  isMultipleFilesMessage,
  isThreadMessage,
  isFormMessage,
  isTemplateMessage,
  isValidTemplateMessageType,
  uiContainerType,
  isOGMessage,
  isTextMessage,
  isThumbnailMessage,
  isImageMessage,
  isVideoMessage,
  isGifMessage,
  isAudioMessage,
  isImageFileInfo,
  isVoiceMessageMimeType,
  isVoiceMessage,
  isEditedMessage,
  getUIKitMessageTypes,
  getUIKitMessageType,
  getClassName,
  isReactedBy,
  getEmojiTooltipString,
  getSuggestedReplies,
  truncateString,
  copyToClipboard,
  getEmojiListAll,
  getEmojiMapAll,
  getEmojiListByCategoryIds,
  getEmojiUrl,
  getSenderName,
  filterMessageListParams,
  filterChannelListParams,
  getChannelsWithUpsertedChannel,
  arrayEqual,
  isSendableMessage,
  isChannelJustCreated,
  getHTMLTextDirection,
  isDefaultChannelName,
  useAsyncEffect,
  useAsyncLayoutEffect,
  useGroupChannelHandler,
  usePreservedCallback,
  useGroupChannelList,
  useGroupChannelMessages,
  useIIFE,
  UIKitConfigProvider,
  useUIKitConfig,
  getStringSet,
  changeColorToClassName,
  Label,
  LabelTypography,
  LabelColors,
  LabelStringSet,
  locale,
  LocalizationContext,
  LocalizationProvider,
  useLocalization,
  Icon,
  IconTypes,
  IconColors,
  Loader,
  PlaceHolderTypes,
  PlaceHolder,
  getBorderRadiusForMultipleImageRenderer,
  ImageRenderer,
  pxToNumber,
  AvatarDefault,
  Avatar$1,
  getOpenChannelAvatar,
  ChannelAvatar,
  MediaQueryProvider,
  useMediaQueryContext,
  Colors3 as Colors,
  changeColorToClassName3 as changeColorToClassName2,
  TextButton,
  IconButton,
  Header$1,
  ButtonTypes,
  ButtonSizes,
  Button,
  APP_LAYOUT_ROOT,
  MuteMenuItem,
  OperatorMenuItem,
  MessageMenuProvider,
  useMessageMenuContext,
  MenuItem$1,
  BottomSheetMenuItem,
  MENU_OBSERVING_CLASS_NAME,
  getObservingId,
  MenuItems,
  EmojiListItems,
  MenuItem,
  MENU_ROOT_ID,
  MenuRoot,
  EMOJI_MENU_ROOT_ID,
  EmojiReactionListRoot,
  ContextMenu,
  MODAL_ROOT,
  ModalRoot,
  ModalFooter,
  Modal,
  MutedAvatarOverlay,
  getSdk,
  getCreateGroupChannel,
  sendbirdSelectors,
  UserProfile,
  UserListItem,
  InputLabel,
  Input,
  scrollToRenderedMessage,
  scrollIntoLast,
  isOperator,
  isDisabledBecauseFrozen,
  isDisabledBecauseMuted,
  getAllEmojisMapFromEmojiContainer,
  getNicknamesMapFromMembers,
  mergeAndSortMessages,
  passUnsuccessfullMessages,
  isAboutSame,
  useThrottleCallback,
  useOnScrollPositionChangeDetector,
  compareIds
};
/*! Bundled license information:

@sendbird/uikit-react/chunks/bundle-CK7w7gep.js:
  (**
   * @license React
   * use-sync-external-store-shim.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@sendbird/uikit-react/chunks/bundle-CK7w7gep.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=chunk-G45O5RRC.js.map
